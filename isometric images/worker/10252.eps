%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1603.i105.016.S.m007.c11.delivery man.eps
%%Creator: Adobe Illustrator(R) 17.1
%%For: Agor
%%CreationDate: 3/13/2016
%%BoundingBox: 0 0 388 419
%%HiResBoundingBox: 0 0 387.6004 418.7797
%%CropBox: 0 0 387.6004 418.7797
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.1.0 x273 R agm 4.7709 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2016-03-13T17:55:46+05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-03-13T17:55:46+05:00</xmp:ModifyDate>
         <xmp:CreateDate>2016-03-13T17:55:46+05:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>240</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgBAADwAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q89/NqfUFj0+GNuNi5dputGZabHtsDVfpzlvaeOUwjQPh73Xf0vyd52KY&#xA;CRuuPpfd1pL/AMtNUvo9ZGnR85bKdHaRdykRUVD+1SOP05q/ZnVZRn8PcwIN+Xn+j4ud21ggcfHy&#xA;kPt8v0vUs715V2KuxV2KuxV2KuxV2KuxV2KuxV5p5884a3ba6dOspXtYYQoLIN3Zk58mYg0FNh/a&#xA;M4vtztbPDMccDwRgB8bej7M0GKWMSkOIy+xP/IHma81e2nt75g91bcSJQApdGr1A2qpGbP2f7Unq&#xA;Yyjk+qNb94Lh9q6GOGQMfpkyzOhdQ7FXYq7FXYq7FXYq7FVO5uYLaB7i4cRwxjk7t0AxVimo+fYP&#xA;SmGncWkG0XqKwJ/yqEL9FcpE58VV6e9tMYcN36ko0f8AMOeC/jg1S6jljlajK/BJUqftAKFqB3FP&#xA;ll4iatoM4g1e70YGu46YGTsVdirsVebfm6vl3V4bHRptTaw1n1XNlMickrJE8MsMjkcV9RJKUDcq&#xA;0pkMgPASBdLDLETESa4mCeWtf/MXy15gtL/zJdRX1tdyjT2CPVQJSGVhGgjjX4owA1OW5r2yvT44&#xA;ESMdiBf606vUTiYiW8ZSr3XyfQaOrorqaqwDKfEHcZehvFXYq7FXYq7FXYq7FXYq7FWndEQu7BUU&#xA;VZiaAAdyTgJpQHm/5sx6ld6PHeeW4LbUdQYoI1ZkJaONwZAtWSuzUO/T3pmq1elwZpCeQCUOTsdN&#xA;nyY4mMDUuaW/lL5hgsb2XSvMNuNH8xaqVe1sqyPG8MdQvF3eUK5Yt8FRsB3zM0Wiw4oGWGIEb3/b&#xA;1cHVa2UsohlJ46sfs6PW8ymDsVdirsVdirsVdirsVYTr0U2p397BNcSJHbyLHDEhoi/u1bkV/aJL&#xA;9+2KsH1d5dOhuGlhkmnttxFAhd3P7PBR/NhiLNMZy4RdW8LW113UdXltfqVxJqbMXmiZCJBU1LOG&#xA;pxG/U7ZufzGOELJAi8h+Uy5MhiATMvrz8spr2byBoUl65kuGtEq53JUbJU9zwpvmmlkEyZR5F63D&#xA;iljgIy+oDdk2Bsdiq2V+ETv/ACqW+4VwFXh/nQFvLV+9f3kcfrIx6h4iJFPzquY+jP72PmfvY9oD&#xA;9xLyF/Ldh3mj8wNN1KWz0/T0Z0W6gle6f4Vqjg0VTufcmmbLS9nygDKXcdnT63taGQxhAfxA2920&#xA;HzQyxQ2U0FUiXiZg24UbD4SPo65qhqREC3oxgMjsym3uIriMSRNyU7fTmTCYkLDROBiaKpk2LsVd&#xA;irsVdirsVdiqS675q0/SiYjWa7A2gXalRUcm7Zi6jVxx7cy5GHTynv0YFq3mDVNWk4zycYq/BAmy&#xA;D5jv9OafLqJ5TR+TsYYo4xaReZNAtbzT5biINDqdrEz2d5CSkyuoJADLvQnqM2+iyeERH+A8x0Lp&#xA;u0MAyxMuUwPSRzCT3WqfXNK8nazcOBKup2TXFySF4gErMS3YFl3zOw4+DLkgOXCf2Ot1GbxMOHIe&#xA;fHGz976MyDsnYq7FXYq7FXYq7FXYqkOuaPdNdfpCxT1ZHUJdW1QpcL9l0LUHJehqdx8sVYV5r0/W&#xA;YLK+1oWTxwWls7nnxLH0VdyxVSTTtjHeQHeWGWXDCUu4EoOy1W2uPJETa9KIkkslN68fJfgaOppx&#xA;rQ08O/TNVn0xOYxgP4tnY6bWAaeM8ho8Nn5M08k+ZrK702ysBYPpRjiEVraOwkAijWiAsCSG4LWh&#xA;++ubISgDwg8nAiZyHFIVbK8ml2KqF+sjWNysQ5SmJwijqWKmgyMuRSObyPWdLj1C0uNNuHkgMilJ&#xA;QlBIA3UUYNSvyzDxTOOQlXJsz4hlgYE8+5g//Km3a7hbTb8Hg4d0uVoOK77MlanoOmbT+WaB4o/J&#xA;0n+hy5Dgl82YL5ohg8xpc6mDc3KKyJYW1vJDEruPgESBo3djuv7wE/gc1+OM8hlcYDH03uR9+1R+&#xA;BLneN4ciJ8ZyjccO0P1yPfxUB5bEy7yvonm641ldZupP0RYHf9HKC0s6EfD66sSqED/ZdsyMcBCA&#xA;A59e6/Ly96YnNOZnkI9w/Se/3be9nuSb3Yq7FXYq7FXYq7FXmvnnVbSLVNQspbUNcERSW12uzKxR&#xA;AVbxWgzU6ycbMSN+92GmiaBBSawjkMYllXgx6L7eOU4MNblszZb2DzXz3501u18yTWunXTW8FsiR&#xA;0WjB2ZQ5YhgR+1TOn7P0mOeISIu7/U8b2t2hmx5zCJ4RED7Rf6WH2N5fzz2FiZpHt45k9C35HgrO&#xA;9TxXpUls2phEXKty6SOSZqNnhB2D7dzn3uXYq7FXYq7FXYq7FXYq7FUq822/1nyprVt/v6wuY/D7&#xA;cLD+OTxGpD3tOoF45D+ifufLv/KxBc+VptFvLYiX6uIIbiI/CeAAHNT02HUfdmb/ACdw5Rkiet06&#xA;H+V+LAcUhvw0CHr1neENFcwNRhxlib2O4Oc9vE+564ESF971DTr2O+sormPpIPiHg3cfQcz4ysW4&#xA;0hRROSQ7FXzX/wA5HW5tvPdpcxEo1xp8bMwNDySWRe3+SBm20O8CD3vMdsjhzAj+b+t5xb+ZPMNu&#xA;6PBqd1G0f2OM0gp9FfbL5abHLnGPycCGszRNichXmX2LoEWn3ml6Vqogia4ktIniuSimQLLGGNHp&#xA;X4q70zRmAiSAKezx5DOIkTdgJtgZuxV2KuxV2KuxV2KuxV5/5n8u3Nx5omvZkK2rRoYH6qzqoWh8&#xA;KHfNTq4kZOIjZ2WmIlDhB3Yne6iHka3hPwrUO470NNvbMfLmsUGzHho2XkX5gR8PMcjf78jjb8OP&#xA;/GudX2HK9OPIl4f2ijWqJ7wEm0lpF1WzaMVkWeIoKVqwcU2zay5F0uP6h733FnOveOxV2KuxV2Ku&#xA;xV2KuxV2KrZollieJqhZFKkjrQimIQRYfC0kbxyNG4o6Eqw8CNjnSPAkU9A/KnUdc1HzJBprXckl&#xA;nDbTuIWNQFijLKBXfqABmr7Q08PDMgPU73sfVZTlEDImNcn0D5Gu/gubQ9iJUHz+Fv1DNNp5cw9R&#xA;lHVlWZLS7FXzn/zkx/ylml/8wA/5PSZtdB9J97zXbf8AeR/q/peRSRFEiY9JVLj5BmX/AI1zOt0x&#xA;D69/Ke++u/lzoE1a8LUQV/5h2MPif995o9SKyF7Ls+XFgifL7tmWZQ5jsVdirsVdirsVdirsVU7i&#xA;2huI/TmXmvWnTf5jITxxmKLOEzE2GN3f5d6DPfLdRh7dCSZreM0Ru+1fs/R+GY09DCRvk3R1UwKf&#xA;O/53i1i/MO9s7WNYoLOK3hRF6bwrIe5qayZ0mgxiGIACniu2MhnqDfl9zEPL5rruneAuoR/yUGZM&#xA;/pLg4h64+8Pt/Oee6dirsVdirsVdirsVdirsVWTzxQQSTytwiiUvIx6BVFSfuwgWgmhZfDd5OLi7&#xA;nnA4iWRnA225MT2zogKDwUjZJZ9+Qkyp+ZVjG1D68NzHQ9/3LP8A8aZi60fuy7HsmVZx8XvekabJ&#xA;pvmIqzj0viRaVJIcVUH8M5eMxHLwvcHGZY+Jl2Z7iOxV85f85Lkf4t0ta7iwBI+c0n9M2ug+k+95&#xA;ntv+8j/V/S8t1AobPTAv2hbsH+f1ib+GZseZdVPkPd+kvpf/AJx+kd/y3tlY1EdxcKg8Bz5U+9jm&#xA;o1v949R2Qf3A95ekZiOzdirsVdirsVdirsVdirsVdir48/NK7+tfmH5glrXjeSRf8iT6X/Gmb7Ti&#xA;sY9zxevleaXvSO3b9G63G0q0+p3QMif8YpKkfhlnOLQDwz36F9vKysoZSGVhUEbgg5zr3beKuxV2&#xA;KuxV2KuxV2KuxVhv5v6z+ify71iZW4y3EX1SLxJuCI2p8kZjmRpYcWQOF2jk4MEj37fN8xeT9AfW&#xA;bzUEVeSWOm3164Aqf3Nu3D/koy5t8s+EDzIeV02LjJ8oyP2Jl+UN19V/MnQZK05XBi60/vo2j/43&#xA;yOpF4y29nSrPH3vrV7CBrtLmlJFqT7mlBX5ZzhwRMxLq9uM0hEx6IjLmp2Kvlv8A5yCvTcfmPcQ1&#xA;r9TtreEDwqnrU/5K5udEKxvJ9ryvOR3AfrYZrVsYLHRKijS2JkP+yu7in/CgZkQO59/6A4WWNCP9&#xA;X9JfSv5CJx/LPTzxpzluTWlK/vmFfwpmo1n94Xp+yR+4Hx+96FmK7J2KuxV2KuxV2KuxV2KuxV2K&#xA;vjDz9/ynXmP/ALal7/1EPm/w/RH3B4jV/wB9P+sfvWec7dofNOpBhQzTG4AG4AuAJh+EmHEfSEak&#xA;VkP457vrnyVffX/J+iXhNWnsbd3/ANYxLy/4auaPKKmR5vY6afFiif6ITnK292KuxV2KuxV2KuxV&#xA;2KvGP+cmtQlj0LRtPVgI7m5kmde5MCBR9A9b9WbDs+PqJdH23OoRj3n7v7Ul/wCccdEgvofM00tK&#xA;ywR2INK0ScSGT/iK5Zrp1wtHY2ISEz5V83k+nXV95c8y29zJFxvdIvFeSBjT95byfFGxHutDmbIC&#xA;ca6EOohI4sgPWJ+59m6Nq1lrGlWmqWL87S8iWaJu9GFaEdiOhHjmgnExNF7fHkE4iQ5FGZFm7FXy&#xA;H+b9z9Z/MnXpK14zrFua/wB1Gsf/ABrm90orGHje0ZXnl702/NPyZrFh5X8q69ZWM13ZDSII9Rkj&#xA;qwt3CiQFwAxVW9U/F0qO22YEtcccpCrFl3EeyBmhA8XCeEdHqP8Azjn5v0zWvIq6VbRSQXeiMY7t&#xA;HPIN9ZkklWRGAUUY8vh6inyJwpZ/FkZcnb4tL4EBAG6eq4GbsVdirsVdirsVdirsVdirsVfHX5oR&#xA;GP8AMLzApNSb2VtvBzyH6832n/ux7ni9cKzS96C883d22spPqNg+lmS1tUt/VJKzxQW8cSToxCgi&#xA;RUBoOnTrmPh1UACJGiCfvczV6DLIxlCJkDGPL3Pp/wDJt5n/ACy0F5SCxgbiR/J6r+n/AMJTNdmm&#xA;JTJHJ3+jxSx4oxl9QZnlTkuxV2KuxV2KuxV2KuxV4D/zk9Pyv/L9vX+7iuZONOnNoxWv+wzZ9njY&#xA;vO9uHeI96b/84yQcdB1q4p/eXUcde/wR1/43yHaB9Qb+xB6JHzYt/wA5D+TP0br8XmK1jpZ6r8N1&#xA;QbLdIOv/AD0QV+YbLtDluPCejidsabhnxjlL72Tf843ea5LjT77yzcMWay/0qyJqQIpGpIleg4yE&#xA;MP8AWOU6/HREu9yuxdRcTjPTcPas17vHYq8E/Oj8jvNet6/c+ZfLFyt3Neen9Z0uRkhdWRFjDRSM&#xA;VjIKqCQxB9zXE5MoFRkaY/lsEjc4gnver/l43m9vKNinnC3S312NWjuVRo2DKjFUdvSLRhmShIU0&#xA;+XQRjdbtkqvbkntpp9hZKy2dtFbK5qywosYJ8TxAyVMbV8VdirsVdirsVdirsVdirqitO+KuYEqQ&#xA;CVJGxFKj78VfLnnX8jfzOtdallsa+Zbe7kLLqDyqtwOR/wCPhZGFSPFaj5dMvxazJjjw1br9T2Ti&#xA;zTM+IxvmP1Poe18p6PL5a0zRtYsLbUYbC2ghEV1ElwgaGNUqBIpHbrTKJHiNlz8ceAADkE5gght4&#xA;Y4II1igiUJFEgCoqKKKqqNgAOgxSvxV2KuxV2KuxV2KuxV2KvmX/AJyR8x6NdecLOzt7+KaWwtjD&#xA;dwICTDKXLEM9ONSpHwg1FN8zdHqccLEjRdN2roc2UiUBYp6f/wA496XLZfl3HcSAcdSuZbyIg1rG&#xA;VSJSfCvpZXqssZyuPJyezNPLFjqQok2mP53y20X5Y61JNZG/ZUQW8QDErM0iqkvwbj0y3I+IFDsc&#xA;xxllD1R5udPTwyjgnyeef843fl95nsru482616tlDPA1rZWEitG8is6s0sifDRQUonIb9elKg5cm&#xA;Q3MrDS4cIrGHvuLJ2KuxVKNf83eWfL6xnWdRhsjLvGkjfGwHUqi1Yj3pk4YpS5Bpy6jHj+o0jNK1&#xA;fS9Ws1vdMu4ry1ckLNCwdajqCR0I7g4JRMTRZ48kZi4mwi8izdirsVdirsVdiq2WWOJC8jBVHc4D&#xA;IDmkC0ovNbZqpbDiP9+Hr9AzEyan+a3xw96Wpc3CS+qsjCQ9WrWvzzHEyDbaYgik3s9bjeiXA4N/&#xA;OPsn5+GZePUA82iWLuTRWVgCpBB6EbjMm2l2KuxV2KuxV2KuxV2KuxV2KuxV56v5C/lodfn1u405&#xA;7u5uJXuHguJWeD1JGLMfT2Dbno1Rlfhi7bPFlVM/gght4Y4II1igiUJFEgCoqKKKqqNgAOgyxrX4&#xA;q7FXYq7FXYq+Xvzj0T8wdW87S6hL5euUtZkjiskjK3JESbAuYGkWOrVJB2HieubDBqsWMcJkL577&#xA;PP67RZ80+IQNctt/uelfkB5Y1fQdN1eLUmUTSywk26NzWNlQ8qsPh5HkK08Ouaw9pQ1OSQh9MKF9&#xA;55n9DuNJ2XPS4xxn1T3ruD1fJuQ7FXYq7FXYq7FWH+YdRmh1mSNvjhUJRfCqitM12ol63Lwj0qcF&#xA;zDMtY2qe6nqPoykFsVcKHnv5g/mVLod8+kWKKLsRJK9wfj4iQsAFX7Nfh/a+7MjDhEty1ZMlbMy/&#xA;J3zDqWuaFJdX0nOSigAAAbSSrWgAFSEFcvxCpSA5bNczYBZ/l7U7FXYq7FXYq7FXYq7FXYq7FWOe&#xA;ePNR8vaaksSB7qdisIYMVAX7TGnhUbZqO1+0TpsY4Rc5Ha+Tn9n6MZpHi+kc0o8o/mBeahqK2Gpx&#xA;xKZ9oJowU+PrxYEt17UzVdk+0Ms2UY8oHq5Ed7n6/skY4ccCduYZ1nWOhdirsVdiq2SRI42kc8UQ&#xA;FmPgAKnElXmFr5wvtX1TUJ5lVdOgma1tVVf3lYiRIxNQKcjxHyr7ZgazFfCf4qv4dHI0WoNy/mA1&#xA;52OZ/R8Ey8t+d9Lt9Tk0oQMtvJKfUvI4zwjmbr60g+E12qf2f2tulmjwDFCqA4jfvvq16rVeJk6m&#xA;tvIfH8Uz/MtrdirsVdirsVdirBPNf/Hbm/1U/wCIjNZqfrLmYfpSG+e6Szne0JFyqMYSvXkBtTKY&#xA;82w8lG21/VbnTLZpm9OWROUjKOLHcgfKoFdsnLmgPIvzE/5Sp/8AmFh/4lJmbpvpcbNze0/84/so&#xA;8rsCQCaUHj++mycPrl8GMvpD1PLmt4t+af563ei6vJoflqON7uzYpqF3cISqvQH04lqK0/aY7eHj&#xA;mfp9IJC5Ol1/aZxy4Ic+rKPyd/Ma/wDOek3h1KBIr/T5EWSWIFYpElDFCASaMOB5CvhlOpwjGduT&#xA;ldnauWaJ4huHoOYzsHYq7FXYq7FXYq7FWK/mFBJd6da2lu9uZ/rUUssExo7WwJWZoqfEGUNX36V3&#xA;zA7SwQy4SJiw5ehyyhlHCd2M2Nl5U0PXdKe/nkD3Exjsg5BQSqhcM1ApoOPXxpml7M7FxRy+ILPB&#xA;v+p2XaPachAQNXM09QBBAINQdwRnUuidirsVY7rXnXTrDlFbUu7kbEKf3an/ACm7/IZg59dGGw3L&#xA;lYtLKW52CQ3Xnia90t7SaIRTyEBpUJ4FOp2NSD2zHjr+IVLYt0tHRsPDYfzC1XRNY1G1eBLiz+t3&#xA;DiFqo6l5WY8WHz7g50h7PhlhGQO/CPueOHa2TBlnEi48UtuXV6ZoVhLbaVa2qjncsgMncvNJ8Tn/&#xA;AGTsc0uWXHkPv+zo9Jgh4eIDrW/v5n7Xs2ZjB2KuxV2KuxV2KsG802Gpw3ct7cJ6to24uIgSEUDY&#xA;SoKstB+0KjueOYmfTmRsN+PLWxSRgskdK1RxsynqD3Vl/WMwSCDu5IIKBlgKtFBHycqgVe7GhNOg&#xA;wjdTs8p/Mu3kg82uklA/1SAla1Iq0nWmbHBAxju4eWQJ2Z9+VF7fyW2g2UZP1eOdmdIx1HrsxZyN&#xA;yB92XNb3rCrBfzY8v6JqHly4a4Swh1GVHhsrm84IfWkXigWQ0blXpQ5CZyCjAnbnXcgwwyBGQR35&#xA;X3vPPyom1D8u71NN1+MTnzBIkUV1DNzS39AuUiKlafG0ztsf1mkoZfFEpdY/c1ZANPKGOqjK6rlf&#xA;d8XvuFudirsVdirsVdiqH1C6FpYz3J/3UhYA9zTYfScjI0LSBZeI+dXEVquuVP6Ss54JI7sf3lHm&#xA;SN1LdSrIxBGV6WRnIwO4kD9zTr4iEBkG0oEUfiAUN5m1Kzvdb0PSLedZtVOp27+iDUqBUNyPRSeV&#xA;KHLNHgkIzlXp4C1doamByY4XcxkiXoeleZL7Sg1rPEZY0NBG5Ksh7gGh29sxIZTHYuylAFPrLzjp&#xA;1xIsbxyRO21aBlH0g1/DLvzEeuzDwSeSdxTRSryicOvSoNctjMSFgsJRMTReHpOy7N8Q/HOZp3qL&#xA;1CGbT5BHeRtDIQGVCNyD3B6Ee9cMsUomiGMcgIsMevPLcGv6pZz3ESC3tmL3B4jlIB9mMt1IJ6+2&#xA;bbs7VSxRkATvy/W6ftPQwzTgSBsd/PyZLpuppc+fdF0C3JMokN5espI9OKBGkRTT+dwv0fPM7S4P&#xA;Sch5cg4eq1I8WOKPPmfcP1vZMm3uxV2KuxV2KuxV2KsZ1nyVBOXuNJdbK6YlnhIJtpGP8yD7BP8A&#xA;MlPeuQnASG7KMiOTz7XJNa02+hheKWxuXDRuuzI69QY5Rs30UIyvFh4CWU8nE8s8+6ZqUPmgpcwv&#xA;HNJawSBH2bizSULV6dO+XNb0X8rPNmu6bpdrpun6DHd2tsJPr92rcJZXeVnHGVuKfArgcDWtK1Fc&#xA;ryZow5lshilPkHqK+cIriSFbWJlaUMTFMjCRWT7StQ8VI7b79q5jZdTISqIsOTi00TEmRohhfnG7&#xA;sPMKGPVUjS1kHpQRSMPhYg7oTT4++2+WQzT4uKPMOLnw45Q4Z1R7/wAc3ms+sM3luzsp5Q+r6PqC&#xA;qhNRyFo/wyBqH9k0r3zPIEcpkPpnH73UwE8uGMP48c+f9Xr8nsH5c/mLq3mvW9QguLaG3sYYhLAq&#xA;ci6ksFCs5NGqK/sjKnZvQsVdirsVdirsVSDzpNImlLGoPCWQCRuwAqwH0kZRnPpbMQ3eOfmJBq9x&#xA;5fntrC0N0sxT1ihq6LGwfZOrVIHTLOzjCOQGRqnC7XjklhMYR4r5/fyYX+Vfl3Xbvzhpuo29lLLa&#xA;6ddRzXctAqgRtyZeTlV5bdK5vNTmiIEXuQ832fpcksglXpB5vqWP9D6mWEkCNcKP3kUqASr86708&#xA;GBp4HNIYg83rgSFP/C+jiUSRxNEw/kZqb+xJyuWnhINkM0omwirHTxZlwjlkfqCN6j3HtkcODw7o&#xA;7Ms2fxOYeXa75R1bSSzunr2g6XEYJAH+UOq/qzUZtLPH5h2GLURn70lupbi5+rpLKXK/uoy5JCrU&#xA;UHegFcp4iebbQHJE+a9SsvKGjRzSN60stUt4qUZ5aVJPgo7nNr2dpzmPCOnMuq7V1UdNHjO5PIfj&#xA;oxr/AJx8mk1H8yL69vH9S5NjPNzNN3aaJT/wrHpnS6uIhiERyt5PsqZyagylzon7Q+ks1T0rsVdi&#xA;rsVdirsVdirsVYt+Z/mC68u+R9S1u0RHu7IRNB6ihgrSTJEWAP7QWQ0xV8x3nmx9Zlk1K7uJLq7l&#xA;P7xpftVHbwAHYDYYqjdJ84+YbPSb2G0ujbW8dHjWNVr6sjoteRHL7CnbKZ4ITNkN2PPOAoFMNN/N&#xA;26hVItRs/rPEcZLhH4uxBPxFSKdPfM0dk8UQQaLo59vcGQxMbiDzSTz351XzC8EdtE8NlbVYCQjk&#xA;7sOrBSQOI2G+Zmi0fgAk7l1vaXaH5mUYxBER96A8utK2lo0jFqs3Gu9ADSmawm3qAABQe6f84/2v&#xA;wa1dkdTBEh+XNm/WMVevYq7FXYq7FXYq06I6FHUMjbMrCoI9wcVfNetfmRcaN5z1vTbu3Fxp9vez&#xA;xwGOiSRoshAUD7LAdB0+eZUuzIzgJRNGvg6b+WpYssozHFEH4s88rfmLoV5aWUGnXUcl3dSCMadM&#xA;3pTeo53Vagivh+yfHNd+X1GOdEHgHydzj12mywBEgJnoedspuk17UpoYrPT2tEV6S390wjkh23MK&#xA;ryLHfrXifll6sujVljVWYuygAuaAkgddvHFV2KuIBBBFQeoxV5d+cqaX5a8rTatp8S22q3E8UFnI&#xA;v2Uct6jssZ+GpSMjph0uhxTybhxu0tfkxYfSaNinhFvFrXmmDW9T1C5lupNKshciSQlgpNxEnBR0&#xA;Wqsx222zdRhDDUYgCy8tKeTUcU5kyMR+kMj/AOcf7r0fzIto60+tW9xFTbeier3/AOMeR1o/dt3Z&#xA;EqzjzBfUuaZ6x2KuxV2KuxV2KuxV2KsA/Ph1/wCVV63HUepIsHBP2m43MTNQd6KKnFXyhpH9w4/y&#xA;v4DArLYdDuYfLd7d3dbVKpKquPjcKGVQF6jk8g3OW4YcUgHH1Wbw8cpdwSS10XW5bGTUYNKlvbCP&#xA;aaRAwIHcoR1p3PFgO+bPVZzCuEvPdm6IZuIzBroUBMtvLayTWkvqKqkvE9FlXtutTyHutfemQ/OR&#xA;lA9DTaOyp48sSPVDiCf6LHw0u2XxTl/wR5fxzVvSPXPy7S90jSJLpy9lLLKXVz8JMfFQOSt1Fa7M&#xA;MVes+V9d/TOnvcEANFK0JZagNRVbkAen2sVTfFXYq7FXYq7FXxv+Zf8A5MDzD/zHz/8AEzm+0/0D&#xA;3PFa3++n/WKX6BdNpfmjTrpjRrG9hkJ/4xSgnx8MnMXEjvDVhlwZAe4h9sZzz3TsVdirsVeFf85P&#xA;3TcfL1oCeJN1K670qPSVT4d2zZdnjmXQduS+ge/9CB/I7y6mr+SPOVqgX61qEQs4mforelIYzX/X&#xA;ep+WS1c+GcT3NfZeHjxZB1Ozy7y1rd95W80WeqJGRdadOfVgbYkbxyxnw5KWXMzJATiR3uqwZTiy&#xA;CXWJfZemaja6lp1tqFo/O1u4kmhfxSRQw/XmglEg0XtoTEoiQ5FE4GTsVdirsVdirsVdirxP86NV&#xA;vtP85WjW0hVTp8fKM7o376bquKsU0GTyjJfG5NjFZ6g55VI/dl/5kH2Vb6MVSn8zV1P61HHBptbO&#xA;XgZtRjBZi268HI6KPhO/gMv0+UY5WQ4Wv0xzY+EGt0boXnbUNIhSGY/WbGJaem/2kVR+y3XYdjlJ&#xA;Nm3MjERAA6I/UvKnkfz3btfaVMtpqbDk0sQFSe/qxVAbr9off2wJTLStD0Ly9DFHGPr9/CqqJ3FF&#xA;UqKfCu4HT5++Kql1e3N03KZ6jso2UfIYFelflb/yj9x/zFv/AMm48KsxxV2KuxV2KuxV8b/mX/5M&#xA;DzD/AMx8/wDxM5vtP9A9zxWt/vp/1ilfmGNY9d1BFIK+vIRTfqxNPork4fSGnMKmfe+0dHnluNIs&#xA;Z5qGaa3ikkIrTkyAnr75oJCiXuMZJiCe5F5Fm7FXYq+d/wDnJmYnzHpENNks2etf55SOn+wza6Ae&#xA;k+95vts+uI8mW/8AONVuyeTNQnO3q6g6qKdkhi3r82yjXn1j3OZ2KP3RP9L9AYH/AM5A+SzpHmVd&#xA;etY6WGsEtKR0S6UfvB/z0Hx+55Zk6LLxR4TzDr+19NwZOMcpfezn/nG/zJcX/lu+0Wclv0RKjQOT&#xA;/uq55sEp1+F42P05ja6AEge92HY2UyxmJ5RL17MF3DsVdirsVdirsVdiryb8+7Ka4bysDKLaxm1A&#xA;2t3d8VLKZU/drVh9k8W/DFXkvm6wj8ta4NMupgUlQS21wRxVlJpRv5WBGKrotb1GOyksvVLW8i8e&#xA;Lb8R/kntilLZwTBIAKni1AK+HtQ4ql3k1mXWEKkg80DMK9eYBBO2/wDrCvzxQ9UiillkWOJDJIxo&#xA;qKCST7AYFZEvkq6h0u5vr5/SaKJnjgWhaoFRyPQfLCrLfyt/5R+4/wCYt/8Ak3HirMcVdirsVdir&#xA;sVfFfnO8+u+b9bux9me/uXX/AFTK3H8M6DEKgB5PD6mXFkkf6RQ3mGIQ6/qcIFBHdzoBSlOMjDph&#xA;gfSGGYVMjzL7P0JWXRNPVgVZbaEEHYgiMZoJ8y9vi+ge5HZFsdirsVfJf56+fNB8weegulGW4TT4&#xA;RYSTKAY5JY5XY+kK1YVk4170223zI02vhjuJBdb2j2TkzkTiRyqi99/Jjy/Pon5f6fDcKyXN3yvJ&#xA;onTgyGahCMDvUKBWuRz5hklxBv0WlODHwE2UB+fWkeZ9Y8ifozy5YfX7y5vIVmQBOccIDMZELkcT&#xA;zCqWHQE9q5jylID083MGOEtpgEeah+R35VTeSdHnu9Vfn5g1QIbxQwZYUSpWEMCQxqasw77DpUiI&#xA;PMmymXCNoioh6bk2LsVdirsVdirsVdiqXeYvL2l+YdHudI1SL1bO5WjgHiysDyV0bsysAQcVeTxf&#xA;844JeazHc+Y/MVxq2nW44W9sI/SlKA1VJJeT7djxFT4jFWeeaPyx8sa9CKwCxvEUJFd24CkBRRQ6&#xA;/ZcD3398VfPnmLShovmK/wBDa4S5n08oJpIgwWkih1rUdaMKjxxVCadBCNUt5ggErSIrOBuRyHXF&#xA;Xpflu5ittbtZ5SRGjGtAWO6kAACpO+Ks01a087a2RY2Foml6bcKfX1C8Ku4Q9hbo3Pl/kkr/AK3b&#xA;FWXaJo9ppGnRWNsKrGB6kpADyPQBpHoAOTU7fRtiqOxV2KuxV2KrJpRFDJKwqI1LEDrQCuIQTQfE&#xA;2i2zan5hsLVxye9u4omFOpllCnah/m8M6GZqJPcHhcUeKYHeUZ+ZKW+l/mFr1hcSekwvpZBVZKCO&#xA;dvVjO61PwSD+Fcwoa/FGIBO4Hc7fN2PnnkJiPSTzsf2vsTRb2wvtJs7vT7hbqymhRre4T7LpTY/2&#xA;ds1d3u9II1sjMVdirsVSO18m+TdMv5dXtdGsrW/Ys8l5HBGslWNWPICoJPWmQPDHcswZS2TuORJE&#xA;V0PJWFQR4ZKMgRYYkEGi3hQ7FXYq7FXYq7FXYq7FXYq7FUo1jzPpuk6npWnXayetq8rQ2rooKK68&#xA;dnJII5FwBQHK55BEgHq2QxmQJHRN8sa3jXn+CPyf50vvMl/aNc+WfMMMcV/MkfqfV7mJRGA6/wAk&#xA;qAf7LFXmX5a6Drfmrza8GnRP+gILh3OpSIxSGNDyjQsacnYcQFJr36Yq+mdB8p6RoyhreP1LmnxX&#xA;MlC/vx/lHyxVOcVdirsVdirsVdiqncW8Vxby28orFMjRyAEglWFDuNxscINIkLFF8by2vmP8tfO+&#xA;m3fmbRWktrK6WaNkYiKcRtVXhlFVquz8Tv2YDLMnaOQjhIDhYOxMMZ8YkTXIPqHzT+X/AJL89WFv&#xA;LrWneo7Ir290A0F1GrDkFLCjd90bb2rlBiC7GMzHkmvlbyxpPljQ7bRNJR0sLXn6SyMXasjl2qx8&#xA;WY4QKFMZSs2m2FDsVdiqA16ZIdJuJHrxAWtOu7gDKdQLgQ24JVMFQ8s3UdzpzNHWiSMh5eIAO30H&#xA;IaSNQpnqZcU7TbMlx3Yq7FXYq7FXYq7FXYq7FWP+SPNi+Z9Ha/8Aq/1SWKeS3nty3MoyUPWi/ssO&#xA;2VYcvGLbc2LgNMY/OW7sxY6altMra/aXkd1ZWiVeZgoPL4FqQNganwzH1kgAN9wW/RxJJ7iHoVrc&#xA;x3NtFcR/YlUOv0jpmXGQkLDiyiYmivliimjaKVFkiccXRwGUg9QQdjkmKy0s7SzgW3tII7e3TZIY&#xA;lVEX5KoAGKquKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVJ/NppoU+/VkH/DjKs30s8fNiUfmttC&#xA;0HhbKkl9cXDlFepVVVEqxAIPegzQ9pdr/lMYERc5H5DvdpotB48iTtEIjyR581DVNYfTNRVWZ05w&#xA;yohUcgCxU9vsiv8At5T2L21lz5ODJXquq8u/ybe0ezYYocUL25/FnudS6N2KuxV2KuxV2KuxV2Kv&#xA;IIdL892fmvXtE8uNHZWGpXP1s6jKP7pX5F1irWrdRQLXYdOuayMpeJKETVl2chHgjOQugyWy/LLR&#xA;dI0u+u5JTfa5JDIzatempWXiSHXkaIOXUkk++ZH5WIib3Pe4/wCakZCth3PJZv8AnILzLZ6ZFY6d&#xA;HA93GzC6u5UJoQacUQEL7kn6M2PZmiPhgz5Hk6LtjtbhymOPmOZemfk3+Z975ztb231OGOLUbDg3&#xA;qQgqksclRXiS1GUrvv3GWarAMZFcivZ2tOYESHqD0jMV2TsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdiqF1SwS+sJbVti4+BvBhup+/IzjYpMTReU3FvpUutw6Tfl47+RZWhCmh/dEB1Naj9rb5ZoO0O&#xA;yo548ch9OztNH2h4WQYwd5Cx8GSeVLGy0jXS3rQwW08HoxCZh6stwzhuKlgOir9lTv4bZb2PosWI&#xA;ngHqrn1pe1NRKQHEdr+1nmbx1TsVdirsVdirsVdirsVYf5q1B9I1ezaAhJLzm8ZbcF4qc1+lXr9+&#xA;YGXGIZOIdXNhkMsfD3JFH5b1zzvfTSeYNWCaLBJ+60myrHyHVTJyr9/xd6ccIhLKfUdu5Hixxj0j&#xA;1d5YFf8AkrRI9e80+Xzp0T3aEy6OzM0ZUyLWJTKDyIHqJ9qo8cENTlwzIjI8I+O3xY5tDgzwEpxB&#xA;kevLf3hZ+U9zqn5dzXN95xtbmCyvQttatF6cscJ58neZUb4Qx4gNv037ZsMebx5Gjch+NnXZMcdJ&#xA;EAx4Yk++ve+ioZop4Y5oWDxSqHjcdGVhUEfMYG9firsVdirsVdirsVdirsVdirGtd/MryJoN99Q1&#xA;bWbe2vRTnBVnZK7jmEDcOv7VMVZBa3Vtd20V1aypPbTqJIZo2DI6MKhlYbEHFVXFXYq7FXYq8a/M&#xA;vUNJ0f8AM+yub2QW8d1pRT1GrxEpuNif5aqlK5bLBKeE8Is8X6HAnqYYtUDM0OCvtSy3kh1PzbdS&#xA;zMtymnW1utnU81Rrjm7OnUAkIoqO2YcgceEAbcRN/CnLiRl1EifVwRjXXne713yfdPPpAV2LNA7R&#xA;gk1PGgYdfCtBksMiRu35I0U7y1g7FXYq7FXYq7FXYqwb847OV/KP6Rg2uNKuYbqNh1py9Mj5fvKn&#xA;5Zi6sei+5ydIfXXekHl7UG1qaaXy+ty0cRoZuDxAdDx9TZSfate9MoxkyPpbMkOH6lPWtCgNy41e&#xA;1H1m/Rldpf7yZUKlvi+03H4T122yY44S4hse9pyCE48Et49zD4Q0H+IPLV9ctJbC2M9hNcvyKwSq&#xA;VILsekclAMzjvwZYje6Nd4/WHVR9Pi4JnbhuJJ6H9Reu/lJq41T8u9FnrV4Yfq0levK3YxfiFBy7&#xA;UQ4ZkM9Bl48MT5V8tmX5S5bsVdirsVdirsVdiqG1DUrDTrZrm9nWCFf2m6k0rRQN2PsN8QFJYBqP&#xA;55+WbK4RRbT3EDy8PWi4n4FA5PQ0U/aHHixqO46Yc0Tjri6oxyE7p4l+bvlHQkaXzloep/WbDV7t&#xA;m+ry1MnqzF5JSpbi1FIpxYV98xcea5mLkTwgQEnsv/OOM13J+WVus5rHFdXCW1a7R8g1P+DZsyWh&#xA;6hirsVdirsVfPP8Azk0q/p/RmoORtJAT3oJNv15tOz/pLzfbf1x9zBfy68xforWBaNGZI9TkhgJB&#xA;oVcvxVqHqPjNcHaWn8SF/wA2y19j6vwsvDW06D6V8iSml5D2HBwfvBzR6c83rsrK8yWl2KuxV2Ku&#xA;xV2KuxVAa/pi6pol/pzU/wBLgkiBPZmUhT9B3yE48USGcJcMgXmvkv8AMzQ9E8iWVrelpdVtnktk&#xA;06FayuQ5KVHRRRgKnv45h4dTGOMA83MzaeUshI5Md/M+2/MLXPLL+ZtThXSbHTHWWxsEqLlBIwQy&#xA;M32gdx1p/qjM3RTn4oMx6TtXv/bTrO1cUPAIgTxx9V+7n9lvFr7UtQv5RLe3MlzIqhA8rFiFG9N8&#xA;6OGOMBURTxGTNPIbkST5vov/AJxtvvW8lXlqxq1rfPxHgkkaMP8AhuWavXj1g+T0fYsrxEd0nrOY&#xA;TuHYq7FXYq7FXYqxfzh+Y/lnytGyXk/r39KpYQ0aU16cuyD3b6K5CUwGQiS8pk1G880XMurX91Ey&#xA;B0+raNM0jmUvBHMI0SIF2VS/xGgVeu1Sc2mImEImI3Isn49/Ife6zNHjmRI7A8v7Nz9yG1TyLrfm&#xA;F/rHqW9pcIxBt3CoOHBVBAh9RV3T7Ir881naGoFR61e/vdlodMd+nL7Px7ksh8v61o2m3dvrOlxa&#xA;zo6uXm04TcWVoyP9IjIUmvEdAwJHUZjYMcMh+rgl02ZanNkwj6BOA5i9/hsmZ1SHQLnR/Nvlpvqm&#xA;jO0MF7p8XwwmBjTkVH7amobvX6a5mmifVhn9Ysg+fd7i67V5QDHUYz6JUJDpXf7w+g7e5t7mBLi3&#xA;lWWCQcklQhlI8QRtgBc5uGaGaMSQuskbV4uhDKaGhoR74qvxV2Kvnr/nJt0Ou6Kg/vBayFt+xk22&#xA;+g5tOz/pLzfbf1x9zy3yogfzNpQPa7hbb/JcH+GZGrP7qXuLr9ALzw/rB9V+Q/8Aj+/55f8AG+c1&#xA;p+r3WXoyzMlpdirsVdirsVdirsVdiry3yfZ6Nov5jea4b2OCN4qX9rdzcR6MMh5ScXb7I/fKCfbM&#xA;HEBHJK/e52UmWONe5IPzd/OrTH0mfQ9Et1vo70PDcXswYRcQBy9EAqzMCRRjt7HNhpIjOSAdo9fN&#xA;1HaWaWmjGxZle3l1+94GDUA+OdE8SXu3/OMN0/LzDandKWsq+x/eqfv2zW9oDkXf9hy+se79L3fN&#xA;a9A7FXYq7FXYq8X/ADX/ADJ85Wc95pejW/1OK3LJJcoSbh6DYrUD01I3qtT7jKuO5UdgmQIiSBZ7&#xA;ngE9xfTTmad3M0p5PyJryPXc79c32DFi4PTRDx+q1GfxLnxRl05j5PUfI/nLT9IdLTWbRILlUW3l&#xA;vYgHDKmy+sE5GqgAVWvSnGtTmj1suM8EZekcnrezuKMROcfUebMZNRi1O8/SXl/UxW35KkYUNAzk&#xA;EVljZVk+W48cw4SMRwy3c2dSlxR2WXWpTador3+rN600EfO7eID4m/aKr8A3Pyxx4zOQiOrXmyjH&#xA;AylyDx++84LF5e1DRrO1ZtMmuWkhlkHxRQs4dY+K1UHkvWub+eIQnHJM+quQ6l5bDknmxyw4x6DL&#xA;meg50ll/+ZPmm50CPy/FdNaaSORnhhJVp2fdjM/2mB/l6e3fNeas09BAERAJsgPob/nGq2kh/LYS&#xA;OxK3N9cSxgkkBQEjoPAcoziyeq4q7FXzH/zkVfG4/MBYK7WdlDFT3ZnlP4SDNxoRUPi8r2xK81dw&#xA;DA/Lj2tr5j0ya+cxW0VxDNM6qzHgCH6L8W48Ms1QlLFIR5kFxNFKMc0DM1ESBL7B8tWa29o7LGEE&#xA;jVB7kAUzl9FxcNl7/V8IlQTfMxxXYq7FXYq7FXYq7FXYq8p/Mny7pl1+YnlubUkZtP1QGyuFRinK&#xA;SNv3YLDf4mlUfIZg6jGDkjfIudp8hGOVcwkH/ORumaFY+V9Fs7AQW01rdN6djFxVhFLGeUnAb05R&#xA;qOR75uNAYxlwjued7ajKWMTPQvCre3mnmit4EMk0rLHFGoqzMxooA8Sc3PIPKgEmg+t/yu/Ly08m&#xA;aH6R/earehJNSm2I5qNo0p+whY08euaTUZzkl5PYaHRjBD+kebM8x3OdirsVdirsVeHfmDo+rax+&#xA;Zl1Y6WQbv6ssqRs3EP6cSErU/DU12rmPONybYmgwHVNK4XUlrqVu+naiho/JSoJ8WU+PiMrIpmCk&#xA;t3p11akeotUP2ZF3U/I5FVbTrq802dbqGdreQdAvVh4FTsR88NLaaeZvzF/SOgS6Z9WC3VxxWWQN&#xA;VQqkNyC06mnSuZ/Z2mJyCXQOo7Y1kY4jAEcUmHSH0/L1y3d2AH3qMy9efX8HH7FjWEnvkxvMF277&#xA;N/JSx+pfld5fipQvA859/XleX9T4VZvirsVfIn5w3Mtz+ZWuySU5LMsQp/LFEka/gubzSisYeN7R&#xA;leeXvY5rCLHeIENR9XtSCO5NvGScujycbJsfgPufZHlEk+VNFJ3JsLap/wCeK5oMn1H3va6f+7j/&#xA;AFR9ybZBudirsVdirsVdirsVdirA/wA57CaXygNQtyUudKuYrqORftKK+mafIuG+jMXWR9Fjo5Wk&#xA;l6672D+e/JGgad+Vd5r0kk+qavfraTJqc3J2Blljao3IUFCRyYk70rvmX2biEcglzJ/U63tvKZYJ&#xA;R5AV97zr8nJ7KL8y9D+torxySukYbekrQv6RHuHpTNvrp8OP3l5zsjGJZ+V0CX1zmnerdirsVdir&#xA;sVdirzJf/J7N/wAwTf8AJlMq/jZ/ws48weV9D8wWv1fVLVZgP7uX7MiHxRxuP1eOWGILEGniH5h+&#xA;QLvyham5t7v6zply3pxB9pUYmtGA+E/CPtD7sx5Y6bBPZ5NHcSX8kkaMY6Ly59T1A3+/Nh+TGICU&#xA;vUfsdPDX/mJGESYCvj+PxaBntri1JadDwJ2lG6/f2+nM/FrIHY7Os1PZOUbx9X3ojVGCeX7dQa+r&#xA;JXbw+I/0zA1UhLISHc9nYzDDEEUf2sezHc193+U9PbTfK2j6eylHs7G2gdSKENHEqmvvUYVTXFXY&#xA;q+Q/zfiEX5k68oNazq3/AAcaN/HN7pT+7DxvaIrPL3sf12D0L2JKU5WlnJ/yMtIn/wCNssgdvifv&#xA;cbKKPwH3B9bfllffXfy/0CetSLKKIn3hX0j/AMQzSagVM+97HQy4sMT5MmylynYq7FXYq7FXYq7F&#xA;XYqgNf0xdU0S/wBOan+lwSQgnszqQp+g75CceKJDOEuGQL5x8xN5lvvyxF3e6kF0nTrmPTrbTFBD&#xA;GRfjJlpT7Knatfox7HEpTBJ2jezj+0UoxwkAbyI3Yl5QCQPPqyyol3pslvNaoxAZm9Q/Z+XGpzN7&#xA;blWOP9a3VezELzS/q18z+x9i2d1Fd2kF1Caw3EayxnxV1DD8DmIDYt3ZFGlXCh2KuxV2KuxVgK6F&#xA;q/8AyuBtX+qv+jfqZX61tw5GNUpWvWq9Mro8Vs72Z9ljB5f+f8ka+VrNCwDm5DBa7kKpqae1RleT&#xA;p70jkXzt5X8reaPMct7aeXY/WuobYy3EPNYy8IdQVUtQE8ippUZu9Vk4Yg+by3ZuEZJkHu/SGZeU&#xA;fJN5c2Oqabr8raZ5gsh6ttZXKgrLEIvUZGI3Dkbr4jtmqnKzdU9JigYiiSfelmlflz5h86G3h0SF&#xA;ItNgZhc6hMSlvDRQeNaEs1D9lQaVFaDfItj2/wDLL8o/IPl9Be2ksWu6vA3GTUZCjrFIN/3UYLLH&#xA;86lv8qmKvS8VdirsVfHv5za7oVz+ZOszafdLcws8Ss8QYr6scSRyKGpRqOh3G2Z+n12OMOGR3Dod&#xA;d2TnyZTOAsS80V+aWgXOialo1tcik76PZNL8JX40VoiKNvUenTenyzM02QTiSO8ut7QwHHOMTz4R&#xA;+p7x+Q9z635ZaahNTbyXER61/v3cdfZ812sH7wu/7KleAeV/e9AzFdi7FXYq7FXYq7FXYq7FXYq+&#xA;Z/P3lHztqHmzVvLHlxPrFslzJqsmnF0iRxKqlXDuVHwepwG/fMXS5pYcxAFt2v0kNTgHEa804/K3&#xA;8odVbQtfm8z6O1nqUsPpaOssisVb03JfihpXkV+1mXrMn5gbxqrpwuzdINITUuLiq9q5PUvyn1Jr&#xA;/wAiaaz19S2VrVq+ELFU/wCE45jaWV4w5+qjWQsuzIcd2KuxV2KuxV2KuxV5j+fNnbz6DpzSL+8+&#xA;tCESD7QSUDmB8+C/dlWXkGcEs0Pyn5b/ACg1P14p9R1a71xHgtbZIkYAQFZGrwHItRuw6V2y4lrE&#xA;QOSXee9dk8yKt1D5cvrC4tqq+pNBOB6RBosp9FVAVt1JfbfxOBLDfLlzcafpy6PqOoy2ekz3RmuB&#xA;AOQJZEU8eRRWaiDqTTrQ4q918gSeRLa1ktfLV1yNy/rTRTSOZmcRqhbjKa9E34jjirL8VdirsVYX&#xA;5c/Jz8ufL2qHVNN0hBfV5RSzO83pmtaxLIWVD7gVyAxgMzkJeK/nxqms+ZPzGi0HRNCnnvNNjFqZ&#xA;hHIzzlwJRQfZWNOZo3uTWlMtx6yeM1EW4mp7Mx5wJSJB8nt35S+VtQ8s+RbDTdTjSLUyZJ71I25q&#xA;JJXJArVhVU4qeO22GeWUzcubLBp4YY8MOTMMg3OxV2KuxV2KuxV2KuxV2KsA8wWtzYfmt5f1WCJm&#xA;g1KCWyuigJFUBYFj2+0p+S5iZARlie/Zy8ZBxSHduz/MtxFOC3t7eP04IkijqW4IoUVY1JoPE4AK&#xA;STaphQ7FXYq7FXYq7FXYqhdR0rTdSiSK/tYrqON1ljSVQ4DqahgDgItbRDRxsyMyhmjPKNiASpIK&#xA;1HhsSMKpD5+stSvfKOo2umwm5vZFT0oFZVL0lUsKsQPsg4qivL2gW+l+XbXSJESVYo6XAI5I8jnn&#xA;IaN2Lk0xVSs/Jflmx1tdZsbCK0vVieE+gojjIcgljGoC8/hpy60JxVO8Vf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:7e844110-c34a-4142-9e57-380a45745540</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:7e844110-c34a-4142-9e57-380a45745540</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:afb78ef3-6ffa-4dce-a4ef-2995accbe4f9</stRef:instanceID>
            <stRef:documentID>xmp.did:9933a0a2-f55d-c548-85f9-f8ac3e9cdc7d</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9933a0a2-f55d-c548-85f9-f8ac3e9cdc7d</stEvt:instanceID>
                  <stEvt:when>2016-03-12T12:36:03+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7e844110-c34a-4142-9e57-380a45745540</stEvt:instanceID>
                  <stEvt:when>2016-03-13T17:55:46+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -418.78 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 418.78 li
387.6 418.78 li
387.6 0 li
cp
clp
58.2787 248.768 mo
59.758 249.052 60.1584 250.206 59.173 251.345 cv
53.5847 257.806 li
52.5992 258.945 50.6012 259.638 49.1218 259.355 cv
47.6425 259.071 47.2421 257.917 48.2275 256.778 cv
53.8158 250.317 li
54.8013 249.178 56.7994 248.484 58.2787 248.768 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.262745 .160784 .0941176 rgb
f
50.2576 246.967 mo
55.2421 244.692 li
56.8625 245.794 58.4124 247.131 59.6136 249.63 cv
47.8405 258.582 li
46.8765 256.884 48.0806 253.565 49.9801 250.877 cv
50.7563 249.778 49.6694 248.295 50.2576 246.967 cv
cp
f
27.3891 257.578 mo
28.6068 258.465 28.478 259.679 27.1012 260.29 cv
19.2939 263.757 li
17.9171 264.368 15.814 264.145 14.5963 263.258 cv
13.3786 262.372 13.5074 261.157 14.8841 260.546 cv
22.6915 257.079 li
24.0682 256.468 26.1714 256.691 27.3891 257.578 cv
cp
f
20.898 252.533 mo
26.3768 252.597 li
27.374 254.284 28.2073 256.153 28.2298 258.926 cv
13.7658 262.014 li
13.6167 260.067 16.1193 257.576 18.9826 255.953 cv
20.1526 255.289 19.8006 253.484 20.898 252.533 cv
cp
f
20.3391 225.659 mo
31.6155 228.424 li
32.2042 226.019 li
35.6225 212.077 li
38.8963 198.719 li
27.6196 195.956 li
20.3391 225.659 li
cp
0 .415686 .521569 rgb
f
20.2226 250.894 mo
17.863 251.942 17.6421 254.023 19.7293 255.543 cv
21.8164 257.063 25.4213 257.445 27.7809 256.398 cv
30.1405 255.35 30.3615 253.269 28.2742 251.749 cv
26.1872 250.229 22.5822 249.847 20.2226 250.894 cv
cp
f
29.6951 254.25 mo
31.0912 245.858 31.9859 229.448 31.6163 228.423 cv
31.1969 227.259 30.8499 223.522 29.9371 222.688 cv
28.6511 221.512 27.1067 220.388 25.3649 220.442 cv
23.2622 220.507 21.0204 223.668 20.3399 225.659 cv
19.6593 227.65 18.1261 251.81 18.3084 253.042 cv
18.4907 254.273 20.4548 252.851 21.5776 253.389 cv
29.6951 254.25 li
cp
f
35.3727 204.714 mo
35.3727 204.714 36.904 226.152 38.515 229.794 cv
39.1805 231.596 49.0576 224.974 49.0576 224.974 cv
48.8486 222.878 li
47.1451 205.881 li
47.1451 205.877 li
46.8607 203.04 li
36.6327 204.53 li
36.0403 204.617 li
35.3727 204.714 li
cp
f
21.1078 178.513 mo
20.1757 180.712 21.2034 183.251 23.4029 184.183 cv
25.6024 185.115 28.141 184.087 29.0731 181.888 cv
35.5572 166.585 li
36.4893 164.386 35.4617 161.847 33.2622 160.915 cv
31.0627 159.983 28.5241 161.01 27.592 163.21 cv
21.1078 178.513 li
.796078 .733333 .627451 rgb
f
11.5918 196.454 mo
12.2615 197.007 13.0476 197.328 13.851 197.421 cv
15.2574 197.582 16.7133 197.053 17.6825 195.883 cv
22.3217 190.285 li
24.0468 188.203 li
25.5049 186.445 li
27.0534 184.576 li
28.1346 183.273 li
28.2875 183.088 li
29.8145 181.248 29.5583 178.522 27.7189 176.997 cv
27.5574 176.87 li
27.1805 176.586 26.7735 176.374 26.347 176.232 cv
26.2329 176.194 li
25.9787 176.114 25.7202 176.06 25.4575 176.03 cv
25.3132 176.013 25.1688 176.004 25.0267 176.004 cv
23.7625 175.983 22.5004 176.514 21.6282 177.565 cv
21.3827 177.86 li
11.0232 190.363 li
9.49826 192.2 9.75241 194.927 11.5918 196.454 cv
cp
f
28.1619 200.204 mo
28.5497 200.613 29.0235 200.996 29.6028 201.345 cv
29.7773 201.451 29.9625 201.554 30.1563 201.653 cv
35.3727 204.281 li
35.7948 204.494 li
36.0403 204.617 li
36.3204 204.757 li
36.6799 204.938 li
38.3535 205.782 li
40.2595 206.874 42.3249 207.13 44.2246 206.738 cv
44.9017 206.598 45.4806 206.694 45.9405 206.791 cv
46.7797 206.967 47.2229 207.143 47.145 205.881 cv
47.145 205.877 li
46.9296 202.431 48.1012 197.458 48.1012 195.386 cv
50.1948 184.447 li
51.7002 176.59 li
51.7002 176.588 li
51.7002 176.588 52.301 171.91 51.6613 170.232 cv
51.6097 170.097 51.5537 169.961 51.4933 169.827 cv
50.8775 168.423 49.8803 167.15 48.6806 165.992 cv
47.0201 164.387 44.974 163.002 43.0141 161.792 cv
41.4203 160.807 39.8007 160.293 38.2393 160.176 cv
33.5355 159.825 29.3876 163.112 28.2481 168.182 cv
28.246 168.188 li
28.0456 169.082 27.938 170.03 27.938 171.025 cv
27.2811 195.015 li
27.2811 197.305 26.5639 198.517 28.1619 200.204 cv
0 .415686 .521569 rgb
f
48.5427 245.674 mo
46.8537 247.627 47.54 249.604 50.0755 250.09 cv
52.6111 250.577 56.0358 249.388 57.7248 247.435 cv
59.4138 245.483 58.7275 243.505 56.192 243.019 cv
53.6564 242.533 50.2317 243.721 48.5427 245.674 cv
cp
f
58.5426 244.677 mo
55.4951 236.734 48.8774 224 48.0394 223.303 cv
47.0883 222.512 45.6936 221.632 44.4726 221.435 cv
42.6492 221.14 39.1581 221.863 39.3928 221.815 cv
41.4542 221.395 38.0936 227.732 38.5151 229.793 cv
38.9367 231.854 46.944 247.462 47.7249 248.432 cv
48.5058 249.401 48.4617 249.358 49.702 249.253 cv
58.5426 244.677 li
cp
f
39.8956 181.983 mo
39.9494 182.177 40.1411 182.295 40.3198 182.388 cv
41.0844 182.784 41.8878 183.101 42.6932 183.409 cv
42.7837 183.443 42.8742 183.478 42.9646 183.512 cv
43.6581 183.777 44.3559 184.042 45.0838 184.18 cv
45.6783 184.292 46.2857 184.32 46.8909 184.346 cv
47.6037 184.376 48.3188 184.408 49.0317 184.44 cv
49.4108 184.458 49.807 184.468 50.1948 184.447 cv
51.7003 176.59 li
51.7003 176.588 li
51.7003 176.588 51.7088 176.517 51.7239 176.392 cv
51.7454 176.2 li
51.767 176 li
51.7906 175.765 li
51.8036 175.636 li
51.8165 175.5 li
51.8316 175.341 li
51.9608 173.833 52.09 171.359 51.6614 170.232 cv
51.6098 170.097 51.5537 169.961 51.4934 169.827 cv
51.3857 169.793 51.2802 169.763 51.1725 169.735 cv
48.9843 169.142 46.6755 169.002 44.4313 169.326 cv
44.3 169.345 44.1664 169.366 44.0544 169.44 cv
43.9402 169.515 43.8648 169.638 43.796 169.756 cv
43.5074 170.247 43.2359 170.747 42.9776 171.255 cv
41.3213 174.512 40.2682 178.074 39.8891 181.707 cv
39.8805 181.8 39.8719 181.895 39.8956 181.983 cv
cp
.796078 .733333 .627451 rgb
f
14.364 194.29 mo
13.6791 193.084 12.7505 192.718 11.5123 192.61 cv
10.3894 192.512 9.38202 193.282 8.61246 194.105 cv
8.19583 194.551 7.78958 195.041 7.22887 195.282 cv
6.5393 195.578 5.4272 195.508 5.01031 196.132 cv
4.57884 196.777 5.05431 197.451 5.8102 197.428 cv
7.37676 197.38 7.78735 196.963 8.2003 196.881 cv
8.81618 196.758 9.5286 197.118 10.1487 197.019 cv
10.8624 196.905 11.7289 196.377 12.1889 195.82 cv
14.364 194.29 li
cp
1 .807843 .631373 rgb
f
9.50049 202.455 mo
8.96053 203.454 7.99711 203.918 7.50601 203.323 cv
7.0593 203.874 5.76371 203.899 5.71642 202.91 cv
5.01451 203.169 4.67209 201.806 4.95725 201.081 cv
5.39489 199.969 5.39174 199.879 5.52256 199.55 cv
5.82977 198.777 6.37512 198.068 6.71859 197.607 cv
7.20089 196.96 7.7264 196.433 8.40927 196.003 cv
10.1751 194.89 11.7612 193.524 13.847 193.599 cv
14.4358 194.268 14.9576 195.043 14.7321 196.69 cv
14.5666 197.899 13.8601 198.56 12.9255 199.344 cv
11.9941 200.124 11.708 200.444 11.1937 201.545 cv
10.497 203.036 9.49077 202.923 9.50049 202.455 cv
cp
f
29.9764 173.036 mo
29.9764 173.036 36.1911 175.552 38.5344 176.933 cv
39.0923 174.367 39.6457 171.736 41.0457 169.515 cv
42.4434 167.297 44.8943 165.537 47.5112 165.74 cv
47.9096 165.77 48.308 165.849 48.6806 165.992 cv
47.0201 164.387 44.974 163.002 43.0141 161.792 cv
41.4203 160.807 39.8007 160.293 38.2393 160.176 cv
37.3477 160.491 36.5775 161.07 35.7109 161.449 cv
29.2845 164.265 29.9764 173.036 29.9764 173.036 cv
.796078 .733333 .627451 rgb
f
40.3457 189.108 mo
40.8799 189.674 41.5819 190.113 42.4026 190.35 cv
42.8332 190.473 43.2662 190.533 43.6883 190.533 cv
45.2346 190.533 46.6496 189.747 47.3518 188.466 cv
47.3798 188.412 li
47.4961 188.19 47.5929 187.955 47.6641 187.706 cv
51.907 172.952 li
52.5164 170.833 51.1489 168.578 48.8529 167.917 cv
48.4221 167.794 47.9893 167.734 47.5672 167.734 cv
45.7343 167.734 44.0889 168.839 43.5935 170.562 cv
42.9107 172.937 li
39.5424 184.647 li
39.3506 185.315 li
38.9587 186.676 39.3829 188.093 40.3457 189.108 cv
cp
f
19.149 213.409 mo
33.4485 205.153 li
33.4483 185.914 li
19.1489 194.169 li
19.149 213.409 li
cp
.74902 .588235 .384314 rgb
f
.00026269 202.354 mo
19.149 213.409 li
19.1493 194.169 li
.000394037 183.114 li
.00026269 202.354 li
cp
.792157 .619608 .403922 rgb
f
0 183.114 mo
8.78715 188.188 li
9.60557 188.66 li
19.1487 194.169 li
33.4475 185.914 li
23.9042 180.405 li
23.0858 179.931 li
14.3008 174.859 li
0 183.114 li
cp
.839216 .658824 .427451 rgb
f
13.7324 196.099 mo
17.587 198.324 li
17.587 195.282 li
13.7324 193.057 li
13.7324 196.099 li
cp
1 1 1 rgb
f
32.949 208.447 mo
32.6365 208.972 32.3054 209.504 31.8208 209.876 cv
31.4754 210.141 31.0684 210.311 30.6664 210.478 cv
29.63 210.909 28.5935 211.341 27.5572 211.772 cv
27.2421 211.903 26.9258 212.034 26.5958 212.12 cv
25.8446 212.316 25.0314 212.264 24.311 211.975 cv
24.0946 211.889 23.8681 211.761 23.7892 211.542 cv
23.749 211.43 23.7529 211.306 23.7791 211.19 cv
23.9061 210.628 24.4781 210.31 24.9428 209.969 cv
25.8061 209.335 26.4308 208.43 26.9509 207.494 cv
27.4711 206.557 27.9044 205.572 28.4781 204.668 cv
28.1267 205.367 27.7171 206.062 27.099 206.541 cv
26.4808 207.02 25.61 207.242 24.9001 206.914 cv
24.7283 206.78 li
24.6952 206.604 li
24.697 206.162 24.8975 205.724 25.2312 205.434 cv
25.4821 205.215 25.7976 205.081 26.0475 204.862 cv
26.3569 204.59 26.5431 204.21 26.7546 203.857 cv
27.6359 202.386 29.0887 201.267 30.7363 200.791 cv
31.0511 200.7 31.3749 200.631 31.7025 200.627 cv
32.4837 200.617 33.2228 200.973 33.8852 201.388 cv
34.0347 201.481 34.1852 201.581 34.2904 201.723 cv
34.3704 201.831 34.4203 201.957 34.4632 202.084 cv
34.8229 203.152 34.7353 204.331 34.4079 205.409 cv
34.0805 206.487 33.5256 207.48 32.949 208.447 cv
cp
1 .807843 .631373 rgb
f
30.0379 202.207 mo
31.188 203.891 33.6605 204.78 33.6605 204.78 cv
35.2585 205.454 36.3699 204.711 37.7138 202.736 cv
47.0502 188.987 li
47.1644 188.819 47.2656 188.645 47.3518 188.466 cv
47.3798 188.412 li
48.2822 186.517 47.6942 184.195 45.9024 182.98 cv
45.1592 182.474 44.3129 182.231 43.4772 182.231 cv
43.3113 182.231 43.1477 182.239 42.984 182.259 cv
41.7758 182.397 40.6322 183.043 39.8956 184.128 cv
39.5424 184.647 li
30.5569 197.875 li
29.0924 199.646 29.2776 201.098 30.0379 202.207 cv
cp
.796078 .733333 .627451 rgb
f
34.3488 163.262 mo
34.5425 163.633 34.8952 163.984 35.4048 164.278 cv
37.0581 165.232 39.739 165.232 41.3923 164.278 cv
43.0457 163.323 43.0457 161.776 41.3923 160.822 cv
41.0193 160.606 40.5933 160.441 40.1385 160.323 cv
39.898 160.259 39.6492 160.21 39.3945 160.174 cv
38.0081 159.982 36.4874 160.198 35.4048 160.822 cv
34.8402 161.148 34.4692 161.544 34.2898 161.96 cv
34.1063 162.388 34.1246 162.838 34.3488 163.262 cv
1 .807843 .631373 rgb
f
42.6287 151.597 mo
42.6287 162.556 li
34.1667 162.556 li
34.1667 151.597 li
42.6287 151.597 li
f
35.5587 162.95 mo
35.4797 162.95 35.401 162.947 35.3227 162.941 cv
34.922 162.911 34.5058 162.818 34.1975 162.556 cv
34.1975 162.556 li
37.3264 162.556 li
37.3264 162.556 li
36.7556 162.801 36.1487 162.95 35.5587 162.95 cv
.909804 .737255 .576471 rgb
f
37.3264 162.556 mo
34.1975 162.556 li
34.1667 162.541 li
34.1667 161.03 li
34.4287 160.876 34.7679 160.845 35.0761 160.799 cv
35.3844 160.753 35.6926 160.676 35.9855 160.552 cv
36.1396 160.491 li
38.3745 159.551 40.2242 156.791 40.4246 154.464 cv
40.7636 156.16 40.7791 158.749 39.9468 160.275 cv
39.9159 160.337 li
39.3919 161.292 38.4208 162.109 37.3264 162.556 cv
f
41.2105 152.218 mo
41.1446 153.428 41.0779 154.645 40.8051 155.825 cv
40.5323 157.006 40.04 158.16 39.2182 159.051 cv
38.0044 160.366 36.088 160.991 34.3321 160.644 cv
33.9137 160.561 33.498 160.424 33.1533 160.172 cv
32.4946 159.692 32.1864 158.873 31.9584 158.09 cv
31.0008 154.803 30.8531 151.327 31.0689 147.91 cv
31.101 147.403 31.1419 146.89 31.3003 146.408 cv
31.769 144.979 33.234 144.038 34.726 143.852 cv
36.2181 143.666 37.7225 144.119 39.0822 144.762 cv
39.4558 144.938 39.8284 145.133 40.1262 145.419 cv
40.4102 145.693 40.6143 146.037 40.8748 146.333 cv
41.1959 146.697 41.3095 150.397 41.2105 152.218 cv
cp
1 .807843 .631373 rgb
f
41.2105 153.509 mo
41.1446 154.719 41.0779 155.936 40.8051 157.117 cv
40.5323 158.297 40.04 159.451 39.2182 160.342 cv
38.0044 161.657 36.088 162.282 34.3321 161.935 cv
33.9137 161.852 33.498 161.715 33.1533 161.463 cv
32.4946 160.983 32.1864 160.164 31.9584 159.382 cv
31.0008 156.094 30.8531 152.618 31.0689 149.201 cv
31.101 148.694 31.1419 148.182 31.3003 147.699 cv
31.769 146.27 33.234 145.329 34.726 145.143 cv
36.2181 144.957 37.7225 145.411 39.0822 146.053 cv
39.4558 146.229 39.8284 146.424 40.1262 146.711 cv
40.4102 146.984 40.6143 147.329 40.8748 147.624 cv
41.1959 147.988 41.3095 151.689 41.2105 153.509 cv
cp
f
40.6245 153.084 mo
40.6652 153.155 41.4526 152.6 41.77 152.429 cv
41.2359 154.382 41.0196 156.421 41.1322 158.443 cv
41.1477 158.721 41.1822 159.026 41.3862 159.216 cv
41.5246 159.344 41.7189 159.395 41.9073 159.409 cv
42.6969 159.467 43.4385 158.94 43.8583 158.269 cv
44.2783 157.598 44.4364 156.8 44.5721 156.02 cv
44.7435 155.035 44.8914 154.046 45.0156 153.054 cv
45.2669 151.047 45.5718 148.821 44.7909 146.955 cv
44.189 145.517 43.127 144.336 41.7711 143.566 cv
40.4152 142.796 38.6121 142.542 37.053 142.543 cv
35.7362 142.545 34.4019 142.804 33.2471 143.437 cv
32.0923 144.07 31.1294 145.098 30.7117 146.347 cv
30.5356 146.873 30.4584 147.451 30.6114 147.985 cv
30.9137 149.039 32.0153 149.656 33.0764 149.936 cv
34.8556 150.404 36.7972 150.228 38.4627 149.446 cv
38.8073 149.284 39.1494 149.094 39.527 149.046 cv
39.9047 148.997 40.3375 149.129 40.5129 149.467 cv
40.6093 149.653 40.6154 149.871 40.6192 150.08 cv
40.6314 150.725 40.6005 153.042 40.6245 153.084 cv
cp
.952941 .572549 0 rgb
f
41.7987 151.562 mo
41.3351 151.508 40.9378 151.879 40.7393 152.265 cv
40.4917 152.747 40.4234 153.287 40.3585 153.816 cv
40.276 154.489 40.1963 155.189 40.4406 155.828 cv
40.5061 156 40.6031 156.173 40.7738 156.267 cv
41.0296 156.407 41.3776 156.316 41.592 156.126 cv
41.8063 155.937 41.9157 155.671 42.0087 155.413 cv
42.2775 154.665 42.4627 153.892 42.5607 153.11 cv
42.5999 152.797 42.624 152.473 42.5167 152.173 cv
42.4093 151.874 42.1412 151.603 41.7987 151.562 cv
cp
1 .807843 .631373 rgb
f
30.5097 145.864 mo
30.22 149.57 li
32.7227 149.839 35.5903 151.125 38.6976 153.084 cv
38.7455 153.078 li
40.9797 152.799 42.8563 151.867 44.3476 150.239 cv
44.6903 149.867 45.0125 149.454 45.3136 149.008 cv
45.5203 146.486 44.8332 144.452 43.0066 143.043 cv
38.8909 140.668 35.1192 141.039 31.6411 143.733 cv
30.9783 144.246 30.5751 145.028 30.5097 145.864 cv
cp
0 .415686 .521569 rgb
f
26.6 153.555 mo
26.4861 153.607 26.4022 153.423 26.4891 153.333 cv
28.1347 151.639 29.803 149.742 30.2192 149.569 cv
30.5465 149.434 31.6301 149.088 31.9841 149.079 cv
34.6201 149.014 38.4596 150.665 39.9164 152.862 cv
39.1512 153.582 39.4925 153.58 37.5903 155.042 cv
36.7797 155.665 35.3324 156.064 34.3488 155.283 cv
32.7124 153.984 28.6748 152.624 26.6 153.555 cv
cp
0 .333333 .419608 rgb
f
38.7455 153.078 mo
40.9797 152.799 42.8563 151.867 44.3476 150.239 cv
44.2226 150.317 44.0998 150.4 43.9749 150.478 cv
43.335 150.88 42.6277 151.174 41.89 151.337 cv
41.5224 151.42 41.1012 151.459 40.8004 151.233 cv
40.5738 151.061 40.4677 150.777 40.3894 150.502 cv
39.9912 149.15 39.9531 147.724 39.9159 146.314 cv
39.8607 147.324 39.8078 148.335 39.755 149.345 cv
39.7194 150.044 39.6686 150.786 39.2627 151.358 cv
39.0752 151.626 38.8132 151.848 38.6874 152.149 cv
38.5617 152.451 38.5996 152.786 38.7455 153.078 cv
cp
f
49.9436 35.3467 mo
50.3592 37.192 49.3995 39.4322 49.3995 39.4322 cv
48.8465 40.9429 47.6395 41.2271 45.4496 40.8903 cv
30.2163 38.5319 li
30.0301 38.503 29.8477 38.4615 29.6719 38.4069 cv
29.6176 38.3918 li
27.7609 37.8058 26.5573 35.9388 26.8661 33.9549 cv
26.9925 33.1305 27.3626 32.4024 27.8909 31.8354 cv
27.9958 31.7228 28.1051 31.6171 28.2218 31.5184 cv
29.0792 30.7856 30.2408 30.4181 31.4432 30.6047 cv
32.0186 30.6932 li
46.6765 32.9603 li
48.8037 33.0858 49.6718 34.1295 49.9436 35.3467 cv
cp
.796078 .733333 .627451 rgb
f
17.2143 120.658 mo
15.9348 121.397 15.9348 122.595 17.2143 123.334 cv
24.4713 127.524 li
25.751 128.262 27.8256 128.262 29.1053 127.524 cv
30.3848 126.785 30.3848 125.587 29.1053 124.848 cv
21.8483 120.658 li
20.5686 119.919 18.494 119.919 17.2143 120.658 cv
cp
.262745 .160784 .0941176 rgb
f
24.0684 116.409 mo
18.7174 115.905 li
17.5701 117.446 16.5638 119.184 16.2546 121.887 cv
30.0443 126.396 li
30.3912 124.512 28.2079 121.824 25.5829 119.943 cv
24.5103 119.175 25.0405 117.451 24.0684 116.409 cv
cp
f
32.8658 111.634 mo
31.5861 112.373 31.5861 113.571 32.8658 114.309 cv
40.1227 118.499 li
41.4023 119.238 43.477 119.238 44.7566 118.499 cv
46.0363 117.761 46.0363 116.563 44.7566 115.824 cv
37.4998 111.634 li
36.2201 110.895 34.1453 110.895 32.8658 111.634 cv
cp
f
39.7199 107.385 mo
34.3689 106.88 li
33.2215 108.422 32.2151 110.16 31.906 112.862 cv
45.6956 117.372 li
46.0426 115.487 43.8593 112.799 41.2343 110.919 cv
40.1617 110.15 40.6918 108.426 39.7199 107.385 cv
cp
f
42.9313 82.6533 mo
31.6453 84.1828 li
31.3199 81.7765 li
29.4291 67.8221 li
27.6185 54.4529 li
38.9046 52.9255 li
42.9313 82.6533 li
cp
0 .415686 .521569 rgb
f
40.5483 105.856 mo
42.7416 107.123 42.7416 109.176 40.5483 110.442 cv
38.355 111.708 34.799 111.708 32.6057 110.442 cv
30.4125 109.176 30.4125 107.123 32.6057 105.856 cv
34.799 104.59 38.355 104.59 40.5483 105.856 cv
cp
f
30.9607 108.149 mo
30.4678 99.8183 31.178 85.1437 31.6447 84.1819 cv
32.1742 83.0902 32.8995 79.4811 33.8765 78.7614 cv
35.2527 77.7474 36.8755 76.8109 38.5688 77.0441 cv
40.6132 77.3255 42.4728 80.6412 42.9306 82.6534 cv
43.3883 84.6657 42.4986 106.967 42.1933 108.149 cv
41.888 109.332 40.1193 107.741 38.9684 108.149 cv
30.9607 108.149 li
cp
f
29.9473 90.3491 mo
18.5584 90.3491 li
18.5584 60.3488 li
29.9473 60.3488 li
29.9473 90.3491 li
cp
f
42.6934 34.0757 mo
40.5092 26.5418 li
38.3762 20.0282 li
37.6517 17.8157 35.2605 16.5915 33.0356 17.2942 cv
30.8106 17.9969 29.5942 20.3603 30.3188 22.573 cv
32.6997 29.8438 li
36.238 37.6782 li
36.9626 39.8909 38.9189 40.1875 40.5148 39.7304 cv
42.7578 39.0879 43.418 36.2886 42.6934 34.0757 cv
.796078 .733333 .627451 rgb
f
39.4622 56.704 mo
39.6376 61.2784 22.6247 66.9622 18.5953 61.3756 cv
18.5564 60.8307 17.4468 52.9082 16.2789 44.9467 cv
15.0916 36.635 13.8653 28.2648 13.8653 28.2648 cv
14.741 26.7465 16.2205 25.5203 17.9529 24.4107 cv
18.8872 23.8268 19.8995 23.2622 20.9117 22.7173 cv
22.0406 22.1138 23.1697 21.5299 24.2598 20.907 cv
26.401 19.6611 28.1723 18.8242 29.6127 18.3375 cv
35.4719 16.3324 36.3674 19.9337 37.5547 25.2283 cv
37.5741 25.2477 li
37.7688 26.1236 37.8661 27.0579 37.8661 28.0313 cv
39.4622 56.704 li
0 .415686 .521569 rgb
f
25.2415 114.659 mo
27.4348 115.926 27.4348 117.979 25.2415 119.245 cv
23.0482 120.511 19.4923 120.511 17.299 119.245 cv
15.1057 117.979 15.1057 115.926 17.299 114.659 cv
19.4923 113.393 23.0482 113.393 25.2415 114.659 cv
cp
f
15.6541 116.952 mo
15.9233 108.611 18.0059 91.2644 18.5584 90.3491 cv
19.1854 89.3102 20.2246 88.0982 21.263 87.4706 cv
22.7261 86.5865 24.4276 85.8021 26.0926 86.1888 cv
28.1028 86.6557 29.6751 88.3035 29.9473 90.3491 cv
30.2196 92.3947 27.2985 115.803 26.8866 116.952 cv
26.4747 118.102 26.5017 118.048 25.3186 118.349 cv
15.6541 116.952 li
cp
f
38.1442 53.9706 mo
38.6751 54.1006 39.2228 54.2237 39.7642 54.148 cv
40.1503 54.094 40.5144 53.9412 40.8736 53.7898 cv
41.7997 53.3993 42.7258 53.0089 43.652 52.6183 cv
43.9333 52.4997 44.2159 52.3805 44.4781 52.2238 cv
45.0745 51.8673 45.5525 51.3161 45.8208 50.6751 cv
45.9014 50.4825 45.9625 50.2581 45.8719 50.0698 cv
45.8258 49.9738 45.7442 49.8986 45.6538 49.8424 cv
45.2155 49.5703 44.6532 49.7356 44.1439 49.8179 cv
43.1973 49.9709 42.2271 49.8005 41.3031 49.5444 cv
40.3791 49.2883 39.4785 48.9459 38.5411 48.7439 cv
39.2074 48.9586 39.9084 49.1339 40.6021 49.0404 cv
41.2959 48.9468 41.9849 48.5309 42.2217 47.8722 cv
42.244 47.6782 li
42.1526 47.5466 li
41.8692 47.2698 41.4638 47.1228 41.0689 47.1532 cv
40.7721 47.1761 40.4883 47.2933 40.1914 47.3149 cv
39.8239 47.3417 39.4642 47.2216 39.1061 47.1349 cv
37.6139 46.773 35.9875 46.9973 34.6487 47.7494 cv
34.393 47.893 34.1458 48.0565 33.9375 48.2629 cv
33.4405 48.7554 33.2034 49.4506 33.0519 50.1336 cv
33.0176 50.2877 32.9868 50.4466 33.0111 50.6025 cv
33.0295 50.7211 33.0791 50.8327 33.1332 50.9399 cv
33.5884 51.8399 34.3959 52.5247 35.2891 52.9928 cv
36.1824 53.4608 37.1646 53.7305 38.1442 53.9706 cv
cp
1 .807843 .631373 rgb
f
36.7947 47.3443 mo
40.992 49.7677 li
44.2567 51.6527 li
45.9872 52.6517 li
46.3338 52.8518 46.8956 52.8518 47.2422 52.6517 cv
62.6532 43.7539 li
62.8233 43.6558 62.9088 43.5276 62.9119 43.3989 cv
62.91 44.017 li
62.91 44.0181 li
62.91 44.0208 li
62.9095 44.0209 li
62.9079 44.1509 62.822 44.2807 62.6501 44.3799 cv
51.8608 50.6092 li
51.9306 50.4253 li
51.9306 50.4217 li
51.8741 50.3212 li
51.8775 50.3186 li
51.7354 50.2366 li
51.7339 50.2377 li
51.6231 50.2442 li
50.2818 51.0185 li
50.1981 51.0668 50.1302 51.1844 50.1302 51.2812 cv
50.1302 51.2847 li
50.1748 51.3829 li
50.1748 51.383 li
50.3167 51.4651 li
50.3209 51.462 li
50.356 51.4781 li
49.8752 51.7556 li
49.9363 51.5836 li
49.9364 51.58 li
49.9004 51.4915 li
49.9041 51.4888 li
49.8919 51.4818 li
49.8918 51.4818 li
49.736 51.3918 li
49.6287 51.4025 li
48.6755 51.9575 li
48.5918 52.0058 48.5239 52.1233 48.5239 52.2201 cv
48.5239 52.2237 li
48.5683 52.3217 li
48.7075 52.4021 li
48.7125 52.3984 li
48.7349 52.414 li
47.2391 53.2776 li
46.8926 53.4777 46.3307 53.4777 45.9843 53.2776 cv
43.5582 51.877 li
40.9889 50.3935 li
36.7917 47.9702 li
36.6207 47.8714 36.5348 47.7424 36.5327 47.6129 cv
36.532 47.6128 li
36.532 47.6091 li
36.532 47.6075 li
36.5353 46.9846 li
36.5363 47.1148 36.6225 47.2449 36.7947 47.3443 cv
cp
.341176 .341176 .337255 rgb
f
62.9119 43.3755 mo
62.9119 43.3847 li
62.9106 43.3771 li
62.9119 43.3755 li
cp
f
36.5353 46.9681 mo
36.537 46.9691 li
36.5353 46.9793 li
36.5353 46.9681 li
cp
f
46.4759 51.5215 mo
38.7523 47.0621 li
38.5073 46.9207 38.5073 46.6912 38.7523 46.5496 cv
52.0842 38.8522 li
52.3294 38.7106 52.7267 38.7106 52.9719 38.8522 cv
60.6956 43.3116 li
60.9406 43.4531 60.9406 43.6826 60.6956 43.824 cv
47.3637 51.5215 li
47.1185 51.663 46.7211 51.663 46.4759 51.5215 cv
cp
54.2274 48.0603 mo
54.0966 47.9848 54.0967 47.8624 54.2274 47.787 cv
54.358 47.7115 54.5698 47.7115 54.7006 47.787 cv
54.8313 47.8624 54.8313 47.9848 54.7006 48.0603 cv
54.57 48.1356 54.358 48.1356 54.2274 48.0603 cv
cp
53.4606 37.7219 mo
53.1142 37.5219 52.5523 37.5219 52.2057 37.722 cv
36.7947 46.6198 li
36.6272 46.7164 36.5425 46.8423 36.537 46.9691 cv
36.5353 46.9793 li
36.5353 46.9846 li
36.5363 47.1148 36.6225 47.2449 36.7947 47.3443 cv
40.992 49.7677 li
41.1349 49.6851 li
41.4599 49.4974 41.9869 49.4974 42.3119 49.6851 cv
44.3998 50.8906 li
44.7248 51.0782 44.7247 51.3824 44.3998 51.5701 cv
44.2567 51.6527 li
45.9872 52.6517 li
46.3338 52.8518 46.8956 52.8518 47.2422 52.6517 cv
62.6532 43.7539 li
62.8233 43.6558 62.9088 43.5276 62.9119 43.3989 cv
62.9119 43.3847 li
62.9106 43.3771 li
62.9044 43.2509 62.82 43.1257 62.6532 43.0293 cv
58.904 40.8648 li
60.9227 42.0303 li
60.7797 42.1129 li
60.4547 42.3005 59.9278 42.3005 59.6027 42.1129 cv
57.5149 40.9074 li
57.1899 40.7197 57.1899 40.4155 57.5149 40.2278 cv
57.658 40.1453 li
53.4606 37.7219 li
cp
.439216 .435294 .435294 rgb
f
47.4492 49.8094 mo
46.1614 49.0659 li
48.5866 47.6656 li
49.8744 48.4092 li
47.4492 49.8094 li
cp
47.1053 46.8105 mo
48.3931 47.5539 li
45.968 48.9542 li
44.6801 48.2106 li
47.1053 46.8105 li
cp
44.7867 45.4717 mo
45.4306 45.8435 li
46.9119 46.6988 li
44.4867 48.0989 li
43.0054 47.2438 li
42.3616 46.8719 li
41.7176 46.5002 li
44.1428 45.1 li
44.7867 45.4717 li
cp
50.0678 48.2975 mo
48.78 47.5539 li
51.2052 46.1538 li
52.493 46.8973 li
50.0678 48.2975 li
cp
52.6864 46.7856 mo
51.3988 46.0421 li
53.8238 44.6418 li
55.1116 45.3854 li
52.6864 46.7856 li
cp
55.305 45.2737 mo
54.0174 44.5301 li
56.4424 43.13 li
57.7302 43.8735 li
55.305 45.2737 li
cp
53.48 41.4196 mo
54.7677 42.1631 li
52.3425 43.5633 li
49.7239 45.0751 li
48.2428 44.22 li
46.9548 43.4764 li
49.3801 42.0762 li
49.5734 41.9646 li
51.9987 40.5643 li
53.2864 41.3079 li
53.48 41.4196 li
cp
47.2989 46.6988 mo
49.9175 45.1868 li
52.3425 43.7867 li
52.5361 43.675 li
54.6738 42.4407 li
54.9611 42.2747 li
56.2491 43.0183 li
55.9616 43.1842 li
53.8238 44.4185 li
48.5866 47.4422 li
47.2989 46.6988 li
cp
46.7614 43.5881 mo
47.2088 43.8465 li
48.0492 44.3317 li
49.5305 45.1868 li
47.1053 46.5871 li
45.624 45.7318 li
44.7837 45.2466 li
44.3362 44.9883 li
46.7614 43.5881 li
cp
38.7523 47.0621 mo
46.4759 51.5215 li
46.7211 51.663 47.1185 51.663 47.3637 51.5215 cv
60.6956 43.824 li
60.9406 43.6826 60.9406 43.4531 60.6956 43.3116 cv
52.9719 38.8522 li
52.7267 38.7106 52.3294 38.7106 52.0842 38.8522 cv
38.7523 46.5496 li
38.5073 46.6912 38.5073 46.9207 38.7523 47.0621 cv
cp
0 .631373 .603922 rgb
f
54.2274 47.787 mo
54.358 47.7115 54.5698 47.7115 54.7006 47.787 cv
54.8313 47.8624 54.8313 47.9848 54.7006 48.0603 cv
54.57 48.1356 54.358 48.1356 54.2274 48.0603 cv
54.0966 47.9848 54.0967 47.8624 54.2274 47.787 cv
cp
.854902 .854902 .854902 rgb
f
40.992 49.7677 mo
40.992 49.7677 li
41.1349 49.6851 li
41.4599 49.4974 41.9869 49.4974 42.3119 49.6851 cv
44.3998 50.8906 li
44.7248 51.0782 44.7247 51.3824 44.3998 51.5701 cv
44.2567 51.6527 li
40.992 49.7677 li
cp
.615686 .615686 .611765 rgb
f
60.7797 42.1129 mo
60.4547 42.3005 59.9278 42.3005 59.6027 42.1129 cv
57.5149 40.9074 li
57.1899 40.7197 57.1899 40.4155 57.5149 40.2278 cv
57.658 40.1453 li
58.904 40.8648 li
60.9227 42.0303 li
60.7797 42.1129 li
cp
f
48.5866 47.6656 mo
49.8744 48.4092 li
47.4492 49.8094 li
46.1614 49.0659 li
48.5866 47.6656 li
cp
.913725 .419608 .341176 rgb
f
51.2052 46.1538 mo
52.493 46.8973 li
50.0678 48.2975 li
48.78 47.5539 li
51.2052 46.1538 li
cp
.776471 .776471 .776471 rgb
f
53.8238 44.6418 mo
55.1116 45.3854 li
52.6864 46.7856 li
51.3988 46.0421 li
53.8238 44.6418 li
cp
.988235 .917647 .0627451 rgb
f
56.4424 43.13 mo
57.7302 43.8735 li
55.305 45.2737 li
54.0174 44.5301 li
56.4424 43.13 li
cp
.211765 .662745 .882353 rgb
f
45.968 48.9542 mo
44.6801 48.2106 li
47.1053 46.8105 li
48.3931 47.5539 li
45.968 48.9542 li
cp
f
52.3425 43.7867 mo
52.3425 43.7867 li
49.9175 45.1868 li
52.3425 43.7867 li
cp
.160784 .415686 .682353 rgb
f
49.9175 45.1868 mo
52.3425 43.7867 li
52.5361 43.675 li
54.6738 42.4407 li
54.9611 42.2747 li
56.2491 43.0183 li
55.9616 43.1842 li
53.8238 44.4185 li
48.5866 47.4422 li
47.2989 46.6988 li
49.9175 45.1868 li
cp
.854902 .854902 .854902 rgb
f
46.9119 46.6988 mo
44.4867 48.0989 li
43.0054 47.2438 li
42.3616 46.8719 li
41.7176 46.5002 li
44.1428 45.1 li
44.7867 45.4717 li
45.4306 45.8435 li
46.9119 46.6988 li
cp
.988235 .917647 .0627451 rgb
f
48.0492 44.3317 mo
49.5305 45.1868 li
47.1053 46.5871 li
45.624 45.7318 li
44.7837 45.2466 li
44.3362 44.9883 li
46.7614 43.5881 li
47.2088 43.8465 li
48.0492 44.3317 li
cp
.913725 .419608 .341176 rgb
f
52.8262 41.9063 mo
52.9875 41.9994 li
51.5042 42.8558 li
51.343 42.7628 li
52.8262 41.9063 li
cp
52.5038 41.7202 mo
48.9568 43.768 li
48.7956 43.675 li
52.3425 41.627 li
52.5038 41.7202 li
cp
52.02 41.4408 mo
48.4731 43.4888 li
48.3119 43.3956 li
51.8589 41.3478 li
52.02 41.4408 li
cp
49.4405 44.0473 mo
49.2793 43.9542 li
50.7625 43.0978 li
50.9238 43.1909 li
49.4405 44.0473 li
cp
49.763 44.2335 mo
53.3099 42.1855 li
53.4712 42.2787 li
49.9242 44.3265 li
49.763 44.2335 li
cp
54.7677 42.1631 mo
53.48 41.4196 li
53.2864 41.3079 li
51.9987 40.5643 li
49.5734 41.9646 li
49.3801 42.0762 li
46.9548 43.4764 li
48.2428 44.22 li
49.7239 45.0751 li
52.3425 43.5633 li
54.7677 42.1631 li
cp
1 1 1 rgb
f
49.7847 51.4925 mo
48.8316 52.0476 li
48.7478 52.0959 48.6799 52.2135 48.6799 52.3102 cv
48.6799 52.3136 li
48.7125 52.3984 li
48.7075 52.4021 li
48.5683 52.3217 li
48.5239 52.2237 li
48.5239 52.2201 li
48.5239 52.1233 48.5918 52.0058 48.6755 51.9575 cv
49.6287 51.4025 li
49.736 51.3918 li
49.8918 51.4818 li
49.7847 51.4925 li
cp
.235294 .235294 .231373 rgb
f
49.9041 51.4888 mo
49.9004 51.4915 li
49.8919 51.4818 li
49.9041 51.4888 li
cp
f
48.7125 52.3984 mo
48.6799 52.3136 li
48.6799 52.3102 li
48.6799 52.2135 48.7478 52.0959 48.8316 52.0476 cv
49.7847 51.4925 li
49.8918 51.4818 li
49.8919 51.4818 li
49.9004 51.4915 li
49.9364 51.58 li
49.9363 51.5836 li
49.8752 51.7556 li
49.7847 51.8462 li
48.8316 52.4012 li
48.7349 52.414 li
48.7125 52.3984 li
cp
.698039 .698039 .698039 rgb
f
51.779 50.3342 mo
50.4377 51.1086 li
50.354 51.1569 50.2861 51.2745 50.2861 51.3713 cv
50.2861 51.3748 li
50.3209 51.462 li
50.3167 51.4651 li
50.1748 51.383 li
50.1748 51.3829 li
50.1302 51.2847 li
50.1302 51.2812 li
50.1302 51.1844 50.1981 51.0668 50.2818 51.0185 cv
51.6231 50.2442 li
51.7339 50.2377 li
51.7354 50.2366 li
51.8775 50.3186 li
51.8741 50.3212 li
51.779 50.3342 li
cp
.235294 .235294 .231373 rgb
f
50.3209 51.462 mo
50.2861 51.3748 li
50.2861 51.3713 li
50.2861 51.2745 50.354 51.1569 50.4377 51.1086 cv
51.779 50.3342 li
51.8741 50.3212 li
51.9306 50.4217 li
51.9306 50.4253 li
51.8608 50.6092 li
51.779 50.6879 li
50.4377 51.4624 li
50.356 51.4781 li
50.3209 51.462 li
cp
.698039 .698039 .698039 rgb
f
42.1526 47.5466 mo
41.8692 47.2698 41.4639 47.1228 41.0689 47.1532 cv
40.7721 47.1761 40.4883 47.2933 40.1914 47.3149 cv
39.8239 47.3417 39.4642 47.2218 39.1061 47.1349 cv
37.6139 46.773 35.9875 46.9973 34.6487 47.7494 cv
34.393 47.893 34.1458 48.0565 33.9375 48.2629 cv
33.4405 48.7554 33.2034 49.4506 33.0519 50.1335 cv
33.0176 50.2877 32.9868 50.4466 33.0111 50.6025 cv
33.0295 50.7211 33.0791 50.8326 33.1332 50.9398 cv
33.5883 51.8397 34.3959 52.5248 35.2891 52.9928 cv
36.1824 53.4608 37.1646 53.7306 38.1442 53.9706 cv
38.464 54.0489 38.7897 54.1239 39.1166 54.1552 cv
39.1166 49.979 li
39.1166 49.979 39.2977 49.2192 39.5145 48.9985 cv
39.8752 49.0637 40.2388 49.0833 40.6021 49.0404 cv
43.0074 48.7559 42.1913 47.5843 42.1526 47.5466 cv
cp
1 .807843 .631373 rgb
f
50.6708 35.467 mo
49.3856 35.4797 48.5069 34.8298 47.5135 35.8795 cv
46.63 36.8132 46.3405 37.6961 47.2989 38.5528 cv
47.8869 39.0785 49.9748 41.9201 50.7816 42.0477 cv
51.2319 42.1189 51.5262 42.0183 51.9514 42.1826 cv
52.2955 42.3155 52.6626 42.5162 52.9011 42.7975 cv
53.1396 43.0789 53.5847 43.2901 53.8597 43.0443 cv
53.9652 42.9501 54.281 42.2411 52.815 41.0025 cv
52.5008 40.7371 55.2275 42.2585 57.4285 44.0484 cv
57.7972 44.3482 58.7994 44.1795 58.3576 43.1432 cv
57.6877 42.167 56.8019 41.5313 55.8665 40.8054 cv
56.1982 40.326 56.6728 39.3207 56.6097 38.7412 cv
56.5343 38.0501 54.7849 36.0025 54.1365 35.6604 cv
53.6176 35.3865 51.2577 35.4612 50.6708 35.467 cv
cp
f
35.0437 31.6713 mo
35.0437 31.6713 29.0973 34.887 26.9172 36.1522 cv
26.3916 33.7773 26.362 28.0702 25.0579 26.0264 cv
24.104 24.508 22.6247 23.2039 20.9117 22.7173 cv
22.0406 22.1138 23.1697 21.5299 24.2598 20.907 cv
26.401 19.6611 28.1723 18.8242 29.6127 18.3375 cv
29.7295 18.4153 29.8658 18.4737 30.0021 18.5321 cv
35.978 21.1405 35.0437 31.6713 35.0437 31.6713 cv
.796078 .733333 .627451 rgb
f
23.6174 42.4163 mo
23.0529 43.4479 22.0213 44.1683 20.8922 44.5574 cv
19.7827 44.9272 18.5953 44.9858 17.4079 44.9858 cv
17.0381 44.9858 16.6488 44.9663 16.2789 44.9467 cv
15.0916 36.635 13.8653 28.2648 13.8653 28.2648 cv
14.741 26.7465 16.2205 25.5203 17.9529 24.4107 cv
19.5296 24.586 21.048 25.2867 22.0018 26.5518 cv
23.267 28.2065 23.4618 30.3866 23.6174 32.4499 cv
23.7731 34.416 23.9289 36.4014 24.0651 38.3674 cv
24.1819 39.7495 24.2598 41.1899 23.6174 42.4163 cv
f
22.576 46.5994 mo
18.9515 44.9317 li
19.6139 44.8759 20.2655 44.7663 20.8922 44.5574 cv
21.4191 44.3758 21.9247 44.1221 22.3715 43.7983 cv
22.576 46.5994 li
.0117647 .384314 .478431 rgb
f
18.9515 44.9317 mo
18.5612 44.7521 li
18.5612 31.0453 li
21.4405 31.0453 li
22.3715 43.7983 li
21.9247 44.1221 21.4191 44.3758 20.8922 44.5574 cv
20.2655 44.7663 19.6139 44.8759 18.9515 44.9317 cv
.72549 .670588 .572549 rgb
f
17.8693 26.2819 mo
15.5362 26.0636 13.4677 27.7777 13.2492 30.111 cv
12.5871 37.1826 li
11.8223 46.6286 li
11.604 48.9619 13.8044 50.6043 16.1377 50.8226 cv
18.4707 51.0411 19.0766 48.7691 19.5212 46.6286 cv
21.6982 30.902 li
21.9166 28.5688 20.2025 26.5003 17.8693 26.2819 cv
cp
.796078 .733333 .627451 rgb
f
34.9331 47.9731 mo
35.3487 49.8184 34.389 52.0586 34.389 52.0586 cv
33.836 53.5693 32.629 53.8535 30.4391 53.5167 cv
15.2058 51.1583 li
15.0196 51.1294 14.8372 51.0879 14.6614 51.0333 cv
14.6071 51.0182 li
12.7504 50.4322 11.5468 48.5652 11.8555 46.5813 cv
11.982 45.7569 12.3521 45.0288 12.8804 44.4618 cv
12.9853 44.3492 13.0946 44.2435 13.2113 44.1448 cv
14.0687 43.412 15.2303 43.0445 16.4327 43.2311 cv
17.0081 43.3196 li
31.666 45.5867 li
33.7932 45.7122 34.6613 46.7559 34.9331 47.9731 cv
cp
f
30.7561 22.7154 mo
30.5725 23.0671 30.2382 23.3994 29.755 23.6778 cv
28.1878 24.5822 25.6466 24.5822 24.0794 23.6778 cv
22.5122 22.7734 22.5122 21.3066 24.0794 20.4022 cv
24.4331 20.1974 24.8369 20.0409 25.2679 19.9288 cv
25.496 19.8688 25.7317 19.8226 25.9733 19.7877 cv
27.2873 19.606 28.729 19.8108 29.755 20.4022 cv
30.2904 20.7114 30.6421 21.0864 30.8121 21.4806 cv
30.9861 21.8863 30.9687 22.3134 30.7561 22.7154 cv
1 .807843 .631373 rgb
f
30.9299 11.6531 mo
22.9043 11.6531 li
22.9043 22.04 li
30.9299 22.04 li
30.9299 11.6531 li
f
24.2518 12.2461 mo
24.3142 13.3931 24.3776 14.5468 24.6361 15.6659 cv
24.8947 16.7851 25.3614 17.8789 26.1404 18.7231 cv
27.291 19.9699 29.1075 20.5621 30.772 20.2333 cv
31.1686 20.1549 31.5626 20.0247 31.8893 19.7864 cv
32.5138 19.3308 32.8058 18.5549 33.022 17.8129 cv
33.9298 14.697 34.0696 11.4014 33.8651 8.16245 cv
33.8347 7.68192 33.7959 7.19625 33.6459 6.7387 cv
33.2014 5.38452 31.8128 4.49282 30.3984 4.31624 cv
28.9841 4.13987 27.558 4.56962 26.2694 5.17825 cv
25.9151 5.34559 25.562 5.53036 25.2796 5.80189 cv
25.0105 6.06082 24.817 6.38764 24.5699 6.66788 cv
24.2656 7.01306 24.158 10.5207 24.2518 12.2461 cv
f
24.2518 13.5787 mo
24.3142 14.7256 24.3776 15.8793 24.6361 16.9985 cv
24.8947 18.1177 25.3614 19.2116 26.1404 20.0556 cv
27.291 21.3023 29.1075 21.8948 30.772 21.566 cv
31.1686 21.4876 31.5626 21.3573 31.8893 21.119 cv
32.5138 20.6634 32.8058 19.8876 33.022 19.1455 cv
33.9298 16.0294 34.0696 12.7341 33.8651 9.49501 cv
33.8347 9.01438 33.7959 8.52882 33.6459 8.07138 cv
33.2014 6.71698 31.8128 5.82549 30.3984 5.64891 cv
28.9841 5.47244 27.558 5.90219 26.2694 6.51092 cv
25.9151 6.67816 25.562 6.86303 25.2796 7.13456 cv
25.0105 7.3935 24.817 7.72032 24.5699 8.00045 cv
24.2656 8.34563 24.158 11.8532 24.2518 13.5787 cv
f
29.8438 22.8023 mo
28.9035 22.8023 27.9628 22.5332 27.1619 22.04 cv
30.9299 22.04 li
30.9299 22.0029 li
30.9302 22.0156 30.9304 22.0282 30.9304 22.041 cv
30.9302 22.2682 30.8724 22.4956 30.7561 22.7154 cv
30.7561 22.7154 li
30.4553 22.7739 30.1495 22.8023 29.8438 22.8023 cv
.909804 .737255 .576471 rgb
f
30.9299 22.04 mo
27.1619 22.04 li
26.7861 21.8086 26.4411 21.5278 26.1414 21.2023 cv
25.7897 20.8216 25.5018 20.3907 25.2679 19.9288 cv
24.9819 19.3665 24.779 18.7596 24.636 18.1451 cv
24.3772 17.0263 24.3153 15.8725 24.2514 14.7267 cv
24.2237 14.1911 24.2137 13.4849 24.2231 12.7546 cv
24.2234 12.7548 24.2238 12.755 24.2241 12.7552 cv
24.2293 13.0559 24.2386 13.3351 24.2518 13.5787 cv
24.3142 14.7256 24.3776 15.8793 24.6361 16.9985 cv
24.8947 18.1177 25.3614 19.2116 26.1404 20.0556 cv
27.08 21.0737 28.4639 21.6555 29.8463 21.6556 cv
30.1566 21.6556 30.4668 21.6263 30.772 21.566 cv
30.7949 21.5615 30.8178 21.5568 30.8406 21.5519 cv
30.8958 21.7005 30.9256 21.8516 30.9299 22.0029 cv
30.9299 22.04 li
f
29.8463 21.6556 mo
28.4639 21.6555 27.08 21.0737 26.1404 20.0556 cv
25.3614 19.2116 24.8947 18.1177 24.6361 16.9985 cv
24.3776 15.8793 24.3142 14.7256 24.2518 13.5787 cv
24.2386 13.3351 24.2293 13.0559 24.2241 12.7552 cv
24.2248 12.7557 24.2255 12.7561 24.2263 12.7566 cv
24.2319 13.0275 24.2394 13.28 24.2514 13.5014 cv
24.3153 14.6493 24.3772 15.803 24.636 16.9219 cv
24.8756 17.9576 25.293 18.9722 25.9733 19.7877 cv
26.1414 19.979 li
27.0807 20.9973 28.4651 21.5796 29.8476 21.5796 cv
30.1574 21.5796 30.4671 21.5503 30.7716 21.4902 cv
30.8121 21.4806 li
30.8223 21.5043 30.8318 21.528 30.8406 21.5519 cv
30.8178 21.5568 30.7949 21.5615 30.772 21.566 cv
30.4668 21.6263 30.1566 21.6556 29.8463 21.6556 cv
f
24.8074 13.0673 mo
24.7687 13.1342 24.0223 12.6084 23.7215 12.4466 cv
24.2278 14.2977 24.4328 16.2307 24.326 18.1468 cv
24.3113 18.4104 24.2785 18.7001 24.0852 18.8799 cv
23.9541 19.0017 23.7699 19.0497 23.5914 19.0628 cv
22.8429 19.1176 22.14 18.6187 21.7418 17.9825 cv
21.3439 17.3463 21.1939 16.59 21.0653 15.8506 cv
20.9029 14.9169 20.7627 13.9792 20.6449 13.0389 cv
20.4067 11.1361 20.1178 9.02676 20.858 7.25784 cv
21.4284 5.89453 22.435 4.77473 23.7204 4.04513 cv
25.0057 3.31563 26.7149 3.07411 28.1927 3.07558 cv
29.4411 3.07673 30.7059 3.32256 31.8005 3.92259 cv
32.8951 4.52261 33.8079 5.49689 34.2037 6.68089 cv
34.3708 7.1802 34.444 7.72735 34.2989 8.23358 cv
34.0123 9.23324 32.968 9.81806 31.9623 10.0829 cv
30.2758 10.527 28.4352 10.3595 26.8566 9.61861 cv
26.5298 9.46522 26.2056 9.2856 25.8475 9.23943 cv
25.4896 9.19327 25.0794 9.31875 24.9131 9.63907 cv
24.8216 9.81512 24.816 10.0215 24.8123 10.2197 cv
24.8008 10.8308 24.8301 13.0279 24.8074 13.0673 cv
.235294 .235294 .231373 rgb
f
23.6942 11.625 mo
24.1338 11.5734 24.5103 11.9247 24.6984 12.2907 cv
24.9333 12.7476 24.9978 13.2594 25.0595 13.7609 cv
25.1377 14.3989 25.2132 15.0623 24.9816 15.6685 cv
24.9196 15.8309 24.8275 15.9954 24.6659 16.0841 cv
24.4232 16.217 24.0933 16.1308 23.8903 15.9511 cv
23.6871 15.7714 23.5833 15.5199 23.4951 15.2747 cv
23.2404 14.5657 23.0647 13.833 22.972 13.0917 cv
22.9347 12.7951 22.912 12.4878 23.0137 12.204 cv
23.1154 11.9203 23.3695 11.6631 23.6942 11.625 cv
cp
1 .807843 .631373 rgb
f
32.4457 18.0933 mo
32.4457 18.0853 li
32.4457 17.896 32.2457 17.7738 32.0773 17.8599 cv
31.709 18.0485 li
31.489 18.1611 31.3506 18.3873 31.3506 18.6345 cv
31.3506 18.792 li
31.3506 19.0063 31.2363 19.2042 31.0508 19.3113 cv
31.0432 19.3156 li
30.5545 19.5979 30.1317 19.3677 30.1229 18.8035 cv
30.1139 18.2129 30.5293 17.4867 31.0432 17.1901 cv
32.2426 16.4976 li
32.7416 16.2096 33.1593 16.4448 33.163 17.021 cv
33.1655 17.4079 32.9873 17.8503 32.7199 18.1919 cv
32.6306 18.3061 32.4457 18.2383 32.4457 18.0933 cv
cp
33.8566 14.4181 mo
33.6584 14.8263 31.8991 15.409 30.9303 16.034 cv
29.4327 17.0002 28.0453 18.0664 26.5679 16.8465 cv
26.0279 16.4007 25.6842 15.5887 25.5694 14.898 cv
25.4545 14.2072 25.3305 13.3609 25.3439 12.6608 cv
25.3693 11.333 25.4714 10.0726 25.3761 8.74795 cv
24.8922 9.36314 23.9282 10.101 24.1149 10.8611 cv
24.1863 11.1519 24.228 11.3206 24.2284 11.62 cv
24.2299 12.8381 24.4897 17.7921 25.3067 19.3123 cv
26.152 20.8853 27.8472 22.1467 29.631 22.0669 cv
34.3765 21.8549 34.0332 14.4757 33.8566 14.4181 cv
cp
.235294 .235294 .231373 rgb
f
22.7723 11.5777 mo
20.5981 12.935 li
20.3315 11.197 li
22.6092 9.77513 li
22.7723 11.5777 li
cp
.929412 .929412 .929412 rgb
f
32.6483 5.04857 mo
36.295 7.15397 36.8926 10.2226 33.9832 11.9024 cv
31.0737 13.5822 25.7589 13.2371 22.1123 11.1317 cv
18.4655 9.02624 17.8679 5.95769 20.7774 4.27784 cv
23.6868 2.59799 29.0017 2.94307 32.6483 5.04857 cv
.878431 .529412 0 rgb
f
29.2614 12.2564 mo
26.8592 12.2564 24.3834 11.6218 22.4671 10.5158 cv
20.6995 9.49522 19.6442 8.18301 19.6442 7.00415 cv
19.6442 5.97028 20.4537 5.28569 21.1328 4.8935 cv
22.2159 4.26787 23.7655 3.92426 25.4984 3.92426 cv
27.9006 3.92426 30.3779 4.55808 32.2927 5.66413 cv
34.0604 6.6854 35.1171 7.99835 35.1171 9.17648 cv
35.1158 10.2103 34.3062 10.8942 33.6272 11.2865 cv
32.5441 11.912 30.9945 12.2564 29.2614 12.2564 cv
.952941 .572549 0 rgb
f
35.099 8.91639 mo
35.099 9.85478 30.3499 12.2151 30.3499 12.2578 cv
30.3499 12.2578 19.6856 7.43756 19.6429 7.01097 cv
19.6571 6.28587 19.714 5.61754 19.8277 5.00608 cv
19.9415 4.39472 20.0979 3.84012 20.297 3.34249 cv
20.3966 3.10076 20.5103 2.87319 20.6382 2.65989 cv
20.9511 2.09123 21.3492 1.62193 21.8184 1.23804 cv
22.2023 .911007 22.6573 .655111 23.1692 .470244 cv
23.9939 .128945 24.975 -.0132197 26.0984 .000944266 cv
26.2832 .000944266 li
27.4065 .0294821 28.4303 .242781 29.3688 .598245 cv
29.383 .598245 li
32.2695 1.66464 34.2032 4.03926 34.8431 6.8262 cv
35.0137 7.49443 35.099 8.20536 35.099 8.91639 cv
f
30.3499 3.93969 mo
28.0768 2.2967 25.6209 1.158 23.011 1.158 cv
22.6168 1.158 22.2196 1.18393 21.8184 1.23804 cv
22.2023 .911007 22.6573 .655111 23.1692 .470244 cv
23.3013 .462597 23.4341 .458816 23.5666 .458816 cv
26.145 .458816 28.7811 1.88403 30.3499 3.93969 cv
.866667 .52549 .0117647 rgb
f
31.8144 3.0013 mo
30.0513 1.57934 28.1459 .455976 26.0984 .000944266 cv
26.2832 .000944266 li
27.4065 .0294821 28.4303 .242781 29.3688 .598245 cv
29.383 .598245 li
30.3356 1.23804 31.1746 2.0627 31.8144 3.0013 cv
f
27.1222 6.5275 mo
25.032 4.83548 22.7711 3.58422 20.297 3.34249 cv
20.3966 3.10076 20.5103 2.87319 20.6382 2.65989 cv
23.1834 2.84476 25.686 4.40888 27.1222 6.5275 cv
f
34.7205 10.6194 mo
34.1603 11.2624 33.3199 11.7116 32.2845 12.0258 cv
32.2844 9.32364 li
32.2844 9.00651 32.4536 8.71347 32.7283 8.55491 cv
34.2615 7.66971 li
34.3562 7.61506 34.4728 7.61506 34.5675 7.66972 cv
34.6621 7.72437 34.7204 7.82538 34.7204 7.93469 cv
34.7205 10.6194 li
cp
.878431 .529412 0 rgb
f
25.2122 11.6835 mo
25.5731 11.9854 26.1146 12.1061 26.7817 12.1009 cv
26.7817 10.3598 li
26.7817 10.1555 26.6727 10.0006 26.4958 9.95357 cv
25.5079 9.69086 li
25.3107 9.75225 li
25.2122 9.95367 li
25.2122 11.6835 li
cp
f
19.7911 8.12597 mo
20.0397 8.62201 20.4125 9.03402 20.8719 9.3876 cv
20.8719 7.64655 li
20.8719 7.44222 20.7969 7.22872 20.675 7.08648 cv
19.9948 6.29241 li
19.859 6.24776 li
19.7912 6.39616 li
19.7911 8.12597 li
cp
f
22.1858 5.98486 mo
22.1858 6.28458 22.1035 6.52755 22.0021 6.52755 cv
21.9007 6.52755 21.8184 6.28458 21.8184 5.98486 cv
21.8184 5.68514 21.9007 5.44217 22.0021 5.44217 cv
22.1035 5.44217 22.1858 5.68514 22.1858 5.98486 cv
cp
.235294 .235294 .231373 rgb
f
23.1396 6.67158 mo
23.1396 6.9713 23.0574 7.21427 22.956 7.21427 cv
22.8545 7.21427 22.7723 6.9713 22.7723 6.67158 cv
22.7723 6.37186 22.8545 6.12889 22.956 6.12889 cv
23.0574 6.12889 23.1396 6.37186 23.1396 6.67158 cv
cp
f
24.0935 7.3583 mo
24.0935 7.65802 24.0112 7.90099 23.9098 7.90099 cv
23.8084 7.90099 23.7262 7.65802 23.7262 7.3583 cv
23.7262 7.05858 23.8084 6.81561 23.9098 6.81561 cv
24.0112 6.81561 24.0935 7.05858 24.0935 7.3583 cv
cp
f
29.1818 282.209 mo
27.432 281.49 25.0629 282.062 25.0629 282.062 cv
23.481 282.354 22.9989 283.497 22.9646 285.712 cv
22.7417 301.125 li
22.739 301.314 22.7495 301.501 22.7739 301.683 cv
22.7796 301.739 li
23.0468 303.668 24.6862 305.166 26.6938 305.194 cv
27.5277 305.207 28.3075 304.964 28.9549 304.538 cv
29.0834 304.453 29.2059 304.363 29.3228 304.265 cv
30.1886 303.542 30.7452 302.458 30.7624 301.242 cv
30.7715 300.66 li
30.9882 285.829 li
31.2202 283.711 30.3365 282.68 29.1818 282.209 cv
cp
.796078 .733333 .627451 rgb
f
54.7277 411.36 mo
56.0072 412.099 56.0072 413.297 54.7277 414.036 cv
47.4708 418.226 li
46.1911 418.964 44.1165 418.964 42.8368 418.226 cv
41.5573 417.487 41.5573 416.289 42.8368 415.55 cv
50.0937 411.36 li
51.3734 410.621 53.448 410.621 54.7277 411.36 cv
cp
.262745 .160784 .0941176 rgb
f
47.8736 407.111 mo
53.2246 406.607 li
54.372 408.148 55.3782 409.886 55.6875 412.589 cv
41.8978 417.098 li
41.5508 415.214 43.7342 412.525 46.3591 410.645 cv
47.4317 409.877 46.9015 408.153 47.8736 407.111 cv
cp
f
39.0763 402.336 mo
40.3559 403.075 40.3559 404.273 39.0763 405.011 cv
31.8193 409.201 li
30.5398 409.94 28.465 409.94 27.1855 409.201 cv
25.9058 408.463 25.9058 407.265 27.1855 406.526 cv
34.4423 402.336 li
35.722 401.597 37.7967 401.597 39.0763 402.336 cv
cp
f
32.2222 398.087 mo
37.5732 397.582 li
38.7205 399.124 39.7269 400.861 40.036 403.564 cv
26.2465 408.074 li
25.8995 406.189 28.0827 403.501 30.7078 401.621 cv
31.7804 400.852 31.2502 399.128 32.2222 398.087 cv
cp
f
29.0107 373.355 mo
40.2967 374.885 li
40.6222 372.478 li
42.5129 358.524 li
44.3236 345.155 li
33.0374 343.627 li
29.0107 373.355 li
cp
0 .415686 .521569 rgb
f
31.3937 396.558 mo
29.2004 397.825 29.2004 399.878 31.3937 401.144 cv
33.587 402.41 37.1431 402.41 39.3364 401.144 cv
41.5296 399.878 41.5296 397.825 39.3364 396.558 cv
37.1431 395.292 33.587 395.292 31.3937 396.558 cv
cp
f
40.9813 398.851 mo
41.4743 390.52 40.764 375.846 40.2974 374.884 cv
39.7678 373.792 39.0426 370.183 38.0655 369.463 cv
36.6894 368.449 35.0666 367.513 33.3732 367.746 cv
31.3289 368.027 29.4693 371.343 29.0115 373.355 cv
28.5537 375.368 29.4434 397.669 29.7488 398.851 cv
30.054 400.033 31.8228 398.443 32.9736 398.851 cv
40.9813 398.851 li
cp
f
41.9948 381.051 mo
53.3837 381.051 li
53.3837 351.051 li
41.9948 351.051 li
41.9948 381.051 li
f
30.4954 300.172 mo
34.5077 306.912 li
37.8096 312.918 li
38.931 314.959 38.1925 317.541 36.1598 318.687 cv
34.1271 319.833 31.57 319.107 30.4483 317.067 cv
23.4472 304.167 li
21.7872 300.417 23.4529 298.756 24.8768 297.902 cv
26.8779 296.702 29.3737 298.131 30.4954 300.172 cv
.796078 .733333 .627451 rgb
f
32.4012 348.325 mo
32.5477 352.9 49.5954 357.058 53.2224 351.202 cv
53.2229 350.656 53.7732 342.675 54.3789 334.651 cv
54.9795 326.277 55.6149 317.841 55.6149 317.841 cv
54.6345 316.388 53.0726 315.269 51.2665 314.284 cv
50.2935 313.767 49.2441 313.275 48.1961 312.802 cv
47.0275 312.28 45.8603 311.776 44.7291 311.232 cv
42.5056 310.139 40.6799 309.429 39.2089 309.045 cv
33.2234 307.456 32.5831 311.111 31.7706 316.476 cv
31.7525 316.497 li
31.6199 317.384 31.5885 318.323 31.6568 319.294 cv
32.4012 348.325 li
0 .415686 .521569 rgb
f
46.7005 405.361 mo
44.5072 406.628 44.5072 408.681 46.7005 409.947 cv
48.8938 411.213 52.4498 411.213 54.6431 409.947 cv
56.8364 408.681 56.8364 406.628 54.6431 405.361 cv
52.4498 404.095 48.8938 404.095 46.7005 405.361 cv
cp
f
56.288 407.654 mo
56.0187 399.313 53.9362 381.966 53.3837 381.051 cv
52.7566 380.012 51.7175 378.8 50.679 378.173 cv
49.216 377.288 47.5145 376.504 45.8495 376.891 cv
43.8393 377.358 42.267 379.005 41.9947 381.051 cv
41.7225 383.097 44.6436 406.504 45.0555 407.654 cv
45.4674 408.804 45.4403 408.749 46.6235 409.051 cv
56.288 407.654 li
cp
f
34.728 322.727 mo
34.728 322.727 40.4429 326.05 42.7065 327.159 cv
43.064 324.754 43.1352 318.525 44.2926 316.394 cv
45.1375 314.813 46.5215 313.408 48.1961 312.802 cv
47.0275 312.28 45.8603 311.776 44.7291 311.232 cv
42.5056 310.139 40.6799 309.429 39.2089 309.045 cv
39.0979 309.13 38.966 309.198 38.8342 309.266 cv
33.0562 312.288 34.728 322.727 34.728 322.727 cv
.796078 .733333 .627451 rgb
f
46.8809 332.643 mo
47.5164 333.632 48.5961 334.278 49.7497 334.587 cv
50.8825 334.878 52.071 334.853 53.2556 334.77 cv
53.6243 334.744 54.0114 334.697 54.3789 334.651 cv
54.9795 326.277 55.6149 317.841 55.6149 317.841 cv
54.6345 316.388 53.0726 315.269 51.2665 314.284 cv
49.706 314.569 48.2406 315.375 47.378 316.704 cv
46.2322 318.443 46.1911 320.632 46.1808 322.701 cv
46.1636 324.673 46.1476 326.665 46.1498 328.635 cv
46.1304 330.022 46.1539 331.465 46.8809 332.643 cv
f
50.5026 352.204 mo
49.2146 334.417 li
49.3902 334.482 49.569 334.539 49.7497 334.587 cv
50.4453 334.766 51.1621 334.825 51.8859 334.825 cv
51.9473 334.825 52.0086 334.825 52.07 334.824 cv
50.5026 352.204 li
.0117647 .384314 .478431 rgb
f
51.8859 334.825 mo
51.1621 334.825 50.4453 334.766 49.7497 334.587 cv
49.569 334.539 49.3902 334.482 49.2146 334.417 cv
48.2536 321.147 li
51.1257 320.945 li
52.0887 334.618 li
52.07 334.824 li
52.0086 334.825 51.9473 334.825 51.8859 334.825 cv
.72549 .670588 .572549 rgb
f
51.4814 316.144 mo
53.7934 315.763 55.9772 317.327 56.359 319.64 cv
57.5163 326.647 li
58.9427 336.016 li
59.3244 338.328 57.2448 340.121 54.9326 340.503 cv
52.6207 340.885 51.8567 338.661 51.2628 336.557 cv
47.9864 321.022 li
47.6047 318.71 49.1693 316.526 51.4814 316.144 cv
cp
.796078 .733333 .627451 rgb
f
57.6063 359.78 mo
57.6381 360.325 57.6603 360.886 57.4879 361.405 cv
57.365 361.775 57.1489 362.105 56.935 362.431 cv
56.3835 363.272 55.8321 364.112 55.2806 364.952 cv
55.113 365.207 54.9447 365.464 54.7432 365.693 cv
54.2847 366.215 53.6562 366.586 52.9773 366.734 cv
52.7732 366.778 52.5415 366.798 52.3727 366.675 cv
52.2866 366.612 52.2274 366.518 52.1885 366.419 cv
52.0001 365.939 52.2643 365.416 52.4374 364.93 cv
52.7589 364.026 52.7668 363.041 52.6819 362.086 cv
52.5971 361.131 52.4232 360.183 52.394 359.225 cv
52.4847 359.919 52.5304 360.64 52.313 361.306 cv
52.0955 361.971 51.5619 362.573 50.8712 362.687 cv
50.6764 362.674 li
50.5634 362.561 li
50.3425 362.232 50.2712 361.806 50.3725 361.424 cv
50.4487 361.136 50.6152 360.878 50.6902 360.59 cv
50.783 360.233 50.7299 359.858 50.7094 359.49 cv
50.6232 357.957 51.1379 356.398 52.1196 355.217 cv
52.3071 354.991 52.5126 354.778 52.7533 354.61 cv
53.3275 354.211 54.0541 354.103 54.7532 354.078 cv
54.911 354.072 55.0728 354.07 55.2217 354.122 cv
55.3351 354.162 55.4359 354.231 55.5315 354.303 cv
56.3344 354.914 56.8619 355.832 57.1608 356.795 cv
57.4597 357.758 57.5473 358.773 57.6063 359.78 cv
cp
1 .807843 .631373 rgb
f
50.5634 362.561 mo
50.3425 362.232 50.2712 361.807 50.3725 361.424 cv
50.4487 361.136 50.6152 360.878 50.6902 360.59 cv
50.783 360.233 50.7301 359.858 50.7094 359.49 cv
50.6232 357.957 51.1379 356.398 52.1196 355.217 cv
52.3071 354.991 52.5126 354.778 52.7533 354.61 cv
53.3275 354.211 54.0541 354.103 54.7531 354.077 cv
54.911 354.072 55.0728 354.07 55.2217 354.122 cv
55.3351 354.162 55.4358 354.231 55.5314 354.303 cv
56.3343 354.914 56.862 355.832 57.1608 356.795 cv
57.4597 357.758 57.5474 358.773 57.6063 359.78 cv
57.6255 360.108 57.6404 360.442 57.6121 360.769 cv
53.5047 360.014 li
53.5047 360.014 52.7247 360.055 52.4684 360.228 cv
52.4673 360.595 52.4209 360.956 52.313 361.306 cv
51.5983 363.62 50.5936 362.605 50.5634 362.561 cv
cp
f
52.2882 355.537 mo
54.028 356.28 56.4047 355.741 56.4047 355.741 cv
57.9905 355.47 58.4883 354.334 58.5529 352.119 cv
58.9876 336.711 li
58.9929 336.522 58.9849 336.335 58.9631 336.153 cv
58.958 336.097 li
58.7174 334.165 57.0987 332.643 55.0917 332.588 cv
54.2581 332.563 53.475 332.796 52.8218 333.213 cv
52.6921 333.296 52.5684 333.384 52.4502 333.481 cv
51.5745 334.192 51.0031 335.268 50.9692 336.484 cv
50.9522 337.066 li
50.5318 351.892 li
50.2707 354.007 51.1402 355.05 52.2882 355.537 cv
cp
.796078 .733333 .627451 rgb
f
25.955 283.477 mo
27.2218 283.824 28.0884 283.446 28.988 282.687 cv
29.8038 281.999 29.96 280.808 29.9217 279.742 cv
29.9008 279.164 29.8438 278.565 30.0568 278.028 cv
30.3188 277.367 31.1089 276.668 30.9688 275.971 cv
30.8237 275.25 30.0541 275.119 29.5647 275.642 cv
28.5503 276.725 28.5553 277.279 28.3346 277.611 cv
28.0056 278.106 27.2882 278.344 26.9401 278.826 cv
26.5398 279.381 26.315 280.315 26.3818 280.996 cv
25.955 283.477 li
cp
1 .807843 .631373 rgb
f
23.7257 274.759 mo
23.4162 273.729 23.7486 272.773 24.4761 272.841 cv
24.4044 272.173 25.2537 271.288 25.9487 271.916 cv
26.2436 271.272 27.3869 271.953 27.6829 272.629 cv
28.1373 273.666 28.1993 273.723 28.3326 274.031 cv
28.646 274.753 28.7574 275.593 28.8371 276.131 cv
28.9491 276.887 28.9519 277.592 28.7844 278.338 cv
28.3511 280.266 28.2081 282.243 26.7643 283.592 cv
25.9219 283.54 25.0536 283.373 24.0988 282.121 cv
23.3985 281.203 23.4267 280.287 23.5254 279.136 cv
23.6237 277.99 23.6006 277.584 23.2053 276.503 cv
22.6701 275.04 23.4184 274.44 23.7257 274.759 cv
cp
f
37.8299 313.444 mo
37.8665 313.611 37.9365 313.779 38.0349 313.938 cv
38.2577 314.3 38.6402 314.63 39.1779 314.891 cv
39.2703 314.937 39.3669 314.98 39.465 315.017 cv
41.2088 315.718 43.7244 315.491 45.2468 314.464 cv
46.8546 313.379 46.7441 311.811 45.0002 310.961 cv
44.7852 310.856 44.5546 310.766 44.3128 310.694 cv
44.1155 310.635 43.9126 310.585 43.7021 310.546 cv
43.6937 310.545 li
43.4453 310.498 43.1899 310.466 42.9289 310.447 cv
41.5099 310.352 39.9839 310.679 38.9312 311.389 cv
38.3821 311.76 38.0342 312.187 37.8821 312.622 cv
37.7871 312.896 37.7693 313.174 37.8299 313.444 cv
f
37.0161 302.122 mo
45.5979 301.517 li
46.38 312.624 li
37.7982 313.229 li
37.0161 302.122 li
f
39.465 315.017 mo
39.465 315.017 li
39.3669 314.98 39.2703 314.937 39.1779 314.891 cv
38.6402 314.63 38.2577 314.3 38.0349 313.938 cv
37.9672 313.828 37.9129 313.715 37.8737 313.6 cv
38.2206 313.743 38.5998 313.791 38.9765 313.791 cv
39.0264 313.791 39.0762 313.79 39.1259 313.788 cv
40.0774 313.759 41.0119 313.455 41.8157 312.946 cv
43.3501 312.838 li
42.4463 314.072 40.9851 314.884 39.465 315.017 cv
.909804 .737255 .576471 rgb
f
41.8157 312.946 mo
42.5473 312.482 43.1707 311.849 43.6005 311.096 cv
44.2111 310.027 44.4353 308.772 44.4362 307.541 cv
44.4362 307.52 44.4362 307.499 44.4361 307.478 cv
44.4741 307.658 44.5148 307.838 44.5581 308.017 cv
44.5689 308.376 44.567 308.735 44.5468 309.093 cv
44.5162 309.631 44.4441 310.17 44.3128 310.694 cv
44.2807 310.829 44.2445 310.963 44.2039 311.094 cv
44.0419 311.625 43.8157 312.131 43.5145 312.599 cv
43.462 312.68 43.4072 312.76 43.3501 312.838 cv
41.8157 312.946 li
f
44.0145 303.876 mo
44.2254 305.089 44.437 306.309 44.4362 307.541 cv
44.4353 308.772 44.2111 310.027 43.6005 311.096 cv
42.6985 312.675 40.9435 313.731 39.1259 313.788 cv
38.6925 313.802 38.2496 313.761 37.8509 313.59 cv
37.089 313.265 36.2004 312.863 35.7962 312.139 cv
34.0981 309.103 33.4227 304.818 33.6209 300.419 cv
33.7229 298.156 34.3208 298.594 35.7558 298.069 cv
37.1907 297.544 38.7838 297.65 40.2765 297.976 cv
40.6868 298.065 41.1001 298.173 41.4604 298.389 cv
41.804 298.595 42.0847 298.889 42.4102 299.123 cv
42.811 299.41 43.6975 302.051 44.0145 303.876 cv
1 .807843 .631373 rgb
f
46.4676 308.088 mo
46.2023 308.847 45.3719 309.648 45.2057 309.553 cv
44.9605 309.411 44.8565 309.117 44.7778 308.845 cv
44.2052 306.869 43.9541 304.8 44.0375 302.745 cv
43.7621 302.986 42.5226 304.251 42.4661 304.19 cv
42.2052 303.91 42.2955 302.505 42.2103 300.49 cv
42.2098 300.481 42.1934 300.562 42.1175 300.644 cv
41.8979 300.88 41.181 301.116 38.919 299.16 cv
35.8755 296.53 44.1203 292.954 46.2817 297.552 cv
47.0909 299.092 47.6826 304.611 46.4676 308.088 cv
.482353 .415686 .345098 rgb
f
44.1531 301.814 mo
43.6817 301.866 43.3728 302.324 43.2644 302.751 cv
43.129 303.285 43.1847 303.835 43.241 304.374 cv
43.3127 305.059 43.3934 305.771 43.7814 306.348 cv
43.8852 306.503 44.0209 306.652 44.2113 306.706 cv
44.4966 306.787 44.8204 306.617 44.9895 306.381 cv
45.1584 306.144 45.2062 305.856 45.2394 305.579 cv
45.3349 304.777 45.3421 303.969 45.2605 303.173 cv
45.228 302.854 45.178 302.527 45.0033 302.255 cv
44.8287 301.983 44.5015 301.776 44.1531 301.814 cv
cp
1 .807843 .631373 rgb
f
42.2103 300.49 mo
42.1888 299.802 42.6222 299.369 43.1809 298.968 cv
43.6302 298.645 44.2608 298.432 44.3846 297.893 cv
44.4841 297.459 44.3677 296.899 44.1573 296.507 cv
43.0617 294.465 34.1739 293.688 33.6209 300.419 cv
33.546 301.331 42.2799 302.714 42.2103 300.49 cv
f
45.046 303.439 mo
47.3102 304.64 li
47.454 302.887 li
45.082 301.629 li
45.046 303.439 li
cp
.929412 .929412 .929412 rgb
f
34.7357 297.619 mo
31.246 299.976 30.8653 303.079 33.8856 304.55 cv
36.9059 306.021 42.1833 305.304 45.6731 302.947 cv
49.1628 300.591 49.5434 297.488 46.5231 296.016 cv
43.5029 294.545 38.2255 295.263 34.7357 297.619 cv
.878431 .529412 0 rgb
f
38.6205 304.571 mo
41.0168 304.403 43.4419 303.596 45.2758 302.358 cv
46.9674 301.216 47.9279 299.832 47.8451 298.656 cv
47.7724 297.625 46.9168 296.999 46.212 296.656 cv
45.0875 296.108 43.5177 295.874 41.7889 295.995 cv
39.3927 296.164 36.966 296.971 35.1336 298.208 cv
33.4421 299.351 32.4802 300.735 32.563 301.91 cv
32.637 302.942 33.4926 303.567 34.1974 303.91 cv
35.3218 304.458 36.8918 304.693 38.6205 304.571 cv
.952941 .572549 0 rgb
f
32.5628 301.65 mo
32.6287 302.586 37.532 304.607 37.5349 304.649 cv
37.5349 304.649 47.8342 299.092 47.8469 298.663 cv
47.7817 297.941 47.6781 297.278 47.5217 296.676 cv
47.3652 296.074 47.1702 295.532 46.9366 295.05 cv
46.8204 294.815 46.6909 294.597 46.5483 294.393 cv
46.1963 293.848 45.7662 293.407 45.2712 293.057 cv
44.8652 292.758 44.3934 292.535 43.8698 292.386 cv
43.0232 292.104 42.0344 292.031 40.9148 292.124 cv
40.7305 292.137 li
39.612 292.244 38.6058 292.529 37.6946 292.95 cv
37.6803 292.95 li
34.8759 294.217 33.1137 296.722 32.6713 299.547 cv
32.548 300.225 32.5129 300.94 32.5628 301.65 cv
f
36.9506 296.352 mo
38.4441 294.08 41.1638 292.42 43.8698 292.386 cv
44.3934 292.535 44.8652 292.758 45.2712 293.057 cv
45.0804 293.045 44.8911 293.039 44.7027 293.039 cv
41.8513 293.039 39.2742 294.41 36.9506 296.352 cv
.866667 .52549 .0117647 rgb
f
35.4237 295.518 mo
35.9961 294.537 36.775 293.656 37.6803 292.95 cv
37.6946 292.95 li
38.6058 292.529 39.612 292.244 40.7305 292.137 cv
40.9148 292.124 li
38.9044 292.722 37.0827 293.976 35.4237 295.518 cv
f
40.3522 298.706 mo
41.6359 296.492 44.0224 294.756 46.5483 294.393 cv
46.6909 294.597 46.8204 294.815 46.9366 295.05 cv
44.4856 295.465 42.3182 296.872 40.3522 298.706 cv
f
33.06 303.322 mo
33.664 303.924 34.5339 304.313 35.5888 304.554 cv
35.399 301.858 li
35.3767 301.542 35.1874 301.261 34.9023 301.123 cv
33.3106 300.347 li
33.2124 300.299 33.096 300.308 33.0054 300.369 cv
32.9148 300.43 32.8638 300.535 32.8714 300.644 cv
33.06 303.322 li
cp
.878431 .529412 0 rgb
f
42.6196 303.715 mo
42.2808 304.042 41.7491 304.2 41.0832 304.242 cv
40.9609 302.505 li
40.9466 302.301 41.0444 302.139 41.2176 302.08 cv
42.1846 301.748 li
42.3856 301.796 li
42.4981 301.99 li
42.6196 303.715 li
cp
f
47.7773 299.786 mo
47.5642 300.298 47.2212 300.735 46.7878 301.12 cv
46.6655 299.384 li
46.6511 299.18 46.711 298.961 46.8226 298.811 cv
47.4454 297.971 li
47.5776 297.917 li
47.6558 298.06 li
47.7773 299.786 li
cp
f
45.2382 297.818 mo
45.2593 298.117 45.3583 298.354 45.4595 298.347 cv
45.5607 298.34 45.6257 298.091 45.6046 297.792 cv
45.5835 297.493 45.4845 297.257 45.3833 297.264 cv
45.2821 297.271 45.2171 297.519 45.2382 297.818 cv
cp
.235294 .235294 .231373 rgb
f
44.3349 298.57 mo
44.356 298.869 44.4551 299.106 44.5563 299.099 cv
44.6574 299.092 44.7224 298.843 44.7013 298.544 cv
44.6803 298.245 44.5812 298.009 44.48 298.016 cv
44.3788 298.023 44.3139 298.271 44.3349 298.57 cv
cp
f
43.4317 299.322 mo
43.4527 299.621 43.5518 299.858 43.653 299.851 cv
43.7542 299.844 43.8191 299.595 43.7981 299.297 cv
43.777 298.998 43.6779 298.761 43.5768 298.768 cv
43.4756 298.775 43.4106 299.023 43.4317 299.322 cv
cp
f
333.952 10.1364 mo
332.36 9.11435 329.927 9.24955 329.927 9.24955 cv
328.318 9.25216 327.638 10.289 327.205 12.4619 cv
324.208 27.5825 li
324.171 27.7674 324.148 27.953 324.139 28.1369 cv
324.135 28.193 li
324.05 30.1382 325.392 31.908 327.362 32.2968 cv
328.18 32.4602 328.991 32.3616 329.704 32.0592 cv
329.846 31.9992 329.983 31.9326 330.115 31.8568 cv
331.097 31.3019 331.84 30.3362 332.076 29.1426 cv
332.19 28.5716 li
335.076 14.023 li
335.686 11.9812 335.003 10.8084 333.952 10.1364 cv
cp
.796078 .733333 .627451 rgb
f
329.809 25.2647 mo
337.187 27.9291 li
343.549 30.4768 li
345.711 31.3423 346.779 33.8072 345.934 35.9823 cv
345.09 38.1575 342.653 39.2192 340.492 38.3538 cv
326.896 32.8247 li
323.233 30.9794 323.467 28.6381 324.026 27.0748 cv
324.811 24.8777 327.647 24.3992 329.809 25.2647 cv
f
341.399 16.7113 mo
342.803 19.1426 344.659 21.1073 346.627 22.2434 cv
348.484 23.3159 350.198 23.508 351.451 22.7845 cv
352.705 22.0608 353.395 20.4809 353.395 18.3358 cv
353.395 16.0637 352.622 13.4734 351.218 11.0421 cv
349.814 8.61085 347.958 6.64615 345.99 5.51002 cv
344.132 4.43756 342.419 4.24543 341.165 4.96952 cv
339.912 5.69305 339.222 7.27291 339.222 9.41765 cv
339.222 11.6897 339.995 14.28 341.399 16.7113 cv
cp
352.322 10.4049 mo
353.836 13.027 354.669 15.8434 354.669 18.3359 cv
354.67 20.9555 353.753 22.9272 352.088 23.8882 cv
350.424 24.849 348.258 24.6567 345.99 23.347 cv
343.831 22.1008 341.809 19.9706 340.295 17.3485 cv
338.781 14.7265 337.948 11.91 337.948 9.41756 cv
337.948 6.79812 338.864 4.82663 340.528 3.8658 cv
342.193 2.9044 344.359 3.09668 346.627 4.40638 cv
348.786 5.65261 350.808 7.78284 352.322 10.4049 cv
cp
.615686 .615686 .611765 rgb
f
338.261 9.60446 mo
338.261 4.6789 341.719 2.68239 345.985 5.14511 cv
350.25 7.60784 353.708 13.5972 353.708 18.5228 cv
353.708 23.4483 350.25 25.4449 345.985 22.9821 cv
341.719 20.5194 338.261 14.53 338.261 9.60446 cv
cp
.698039 .698039 .698039 rgb
f
330.911 8.67793 mo
331.602 8.30336 332.307 7.94506 333.016 7.59992 cv
333.051 7.5845 li
333.282 7.47543 li
333.325 7.45575 li
334.041 7.11587 334.764 6.787 335.491 6.48446 cv
335.495 6.48233 li
337.106 5.79753 338.745 5.19479 340.419 4.66988 cv
351.339 23.584 li
350.046 24.777 348.697 25.899 347.297 26.9575 cv
347.293 26.9597 li
346.63 27.46 345.961 27.9399 345.275 28.4093 cv
345.195 28.4655 li
344.511 28.9291 343.824 29.3795 343.121 29.81 cv
342.262 30.3449 341.39 30.8484 340.506 31.3297 cv
339.77 31.7298 339.024 32.1114 338.27 32.4784 cv
337.53 32.8368 336.782 33.1805 336.023 33.5059 cv
334.318 34.2401 332.577 34.887 330.798 35.443 cv
319.878 16.5288 li
321.248 15.2723 322.674 14.0904 324.159 12.983 cv
324.824 12.4863 325.497 12.0043 326.181 11.5407 cv
326.876 11.0708 327.584 10.6134 328.302 10.1744 cv
329.157 9.65108 330.025 9.14978 330.911 8.67793 cv
cp
f
317.613 21.5255 mo
317.613 16.6 321.071 14.6035 325.337 17.0662 cv
329.602 19.5289 333.06 25.5183 333.06 30.4439 cv
333.06 35.3694 329.602 37.3659 325.337 34.9032 cv
321.071 32.4405 317.613 26.4511 317.613 21.5255 cv
cp
.854902 .854902 .854902 rgb
f
321.887 16.6484 mo
319.644 16.6484 318.25 18.5174 318.25 21.5256 cv
318.25 26.2401 321.572 31.9939 325.655 34.3516 cv
326.754 34.9855 327.836 35.3207 328.786 35.3207 cv
331.03 35.3207 332.423 33.4521 332.423 30.444 cv
332.423 25.729 329.101 19.9752 325.018 17.6179 cv
323.92 16.984 322.837 16.6484 321.887 16.6484 cv
cp
328.786 36.5952 mo
327.596 36.5952 326.329 36.2118 325.018 35.4551 cv
320.584 32.895 316.976 26.6458 316.976 21.5256 cv
316.976 17.7889 318.904 15.3739 321.887 15.3739 cv
323.077 15.3739 324.345 15.7577 325.655 16.5144 cv
330.09 19.0745 333.698 25.3233 333.698 30.444 cv
333.698 34.1807 331.77 36.5952 328.786 36.5952 cv
cp
.615686 .615686 .611765 rgb
f
324.159 12.983 mo
324.824 12.4863 325.497 12.0043 326.181 11.5407 cv
326.098 11.5992 li
326.106 11.6136 li
326.188 11.5518 li
327.2 10.8496 328.498 10.6252 329.97 10.9479 cv
330.176 10.9907 330.385 11.0467 330.591 11.1143 cv
331.211 11.3055 331.854 11.5866 332.517 11.9694 cv
334.879 13.3331 337.014 15.6716 338.56 18.35 cv
340.106 21.0284 341.066 24.0503 341.064 26.774 cv
341.064 27.5391 340.986 28.2366 340.842 28.8695 cv
340.797 29.0816 340.741 29.2905 340.675 29.4905 cv
340.219 30.9263 339.376 31.9381 338.261 32.4636 cv
338.167 32.5038 li
338.177 32.522 li
338.27 32.4784 li
337.53 32.8368 336.782 33.1805 336.023 33.5059 cv
337.064 33.5671 338.033 33.351 338.879 32.8624 cv
339.53 32.4865 340.076 31.9703 340.506 31.3297 cv
340.838 30.8435 341.103 30.2832 341.296 29.6569 cv
341.362 29.4569 341.418 29.248 341.462 29.0359 cv
341.623 28.3449 341.701 27.5884 341.702 26.7738 cv
341.7 24.0274 340.781 20.9231 339.112 18.0314 cv
337.442 15.1396 335.213 12.7915 332.836 11.4173 cv
332.13 11.0105 331.435 10.7001 330.757 10.4934 cv
330.551 10.4258 330.342 10.3698 330.136 10.327 cv
329.503 10.1823 328.885 10.1318 328.302 10.1744 cv
327.526 10.2248 326.803 10.4414 326.151 10.8174 cv
325.302 11.3081 324.628 12.0451 324.159 12.983 cv
cp
f
330.911 8.67793 mo
331.602 8.30336 332.307 7.94506 333.016 7.59992 cv
333.051 7.5845 li
333.282 7.47543 li
333.325 7.45575 li
334.821 6.81784 336.779 7.04096 338.914 8.27554 cv
341.276 9.63926 343.415 11.9757 344.962 14.654 cv
346.508 17.3324 347.464 20.3564 347.462 23.0801 cv
347.464 25.6152 346.634 27.4484 345.275 28.4093 cv
345.195 28.4655 li
344.511 28.9291 343.824 29.3795 343.121 29.81 cv
343.9 29.7575 344.626 29.5446 345.281 29.1665 cv
346.142 28.6694 346.822 27.9187 347.293 26.9597 cv
347.297 26.9575 li
347.825 25.9018 348.103 24.5891 348.1 23.0799 cv
348.102 20.3315 347.183 17.2271 345.513 14.3354 cv
343.844 11.4437 341.615 9.09556 339.233 7.72348 cv
337.936 6.97153 336.666 6.55669 335.495 6.48233 cv
335.491 6.48446 li
334.417 6.40809 333.421 6.62015 332.553 7.12144 cv
331.894 7.50165 331.343 8.02577 330.911 8.67793 cv
cp
f
326.673 30.6153 mo
326.673 29.8527 327.208 29.5437 327.868 29.9249 cv
328.529 30.3062 329.064 31.2334 329.064 31.9959 cv
329.064 32.7584 328.529 33.0674 327.868 32.6862 cv
327.208 32.3049 326.673 31.3778 326.673 30.6153 cv
cp
f
327.334 29.9739 mo
327.053 29.9739 326.885 30.2137 326.885 30.6153 cv
326.885 31.2969 327.384 32.1611 327.975 32.5025 cv
328.127 32.5905 328.275 32.6374 328.402 32.6374 cv
328.684 32.6374 328.852 32.3976 328.852 31.996 cv
328.852 31.3139 328.353 30.4502 327.762 30.1087 cv
327.609 30.0208 327.461 29.9739 327.334 29.9739 cv
cp
328.402 33.0622 mo
328.198 33.0622 327.982 32.9975 327.762 32.8701 cv
327.032 32.4486 326.46 31.4579 326.46 30.6153 cv
326.46 29.9776 326.812 29.5491 327.334 29.5491 cv
327.539 29.5491 327.754 29.6138 327.975 29.7412 cv
328.705 30.1627 329.277 31.1534 329.276 31.996 cv
329.276 32.6336 328.925 33.0622 328.402 33.0622 cv
cp
.929412 .929412 .929412 rgb
f
373.833 120.019 mo
375.312 120.302 375.712 121.456 374.727 122.595 cv
369.139 129.056 li
368.153 130.195 366.155 130.889 364.676 130.605 cv
363.197 130.321 362.796 129.168 363.782 128.029 cv
369.37 121.568 li
370.355 120.428 372.353 119.735 373.833 120.019 cv
cp
.262745 .160784 .0941176 rgb
f
365.812 118.218 mo
370.796 115.943 li
372.417 117.044 373.966 118.381 375.168 120.881 cv
363.395 129.833 li
362.431 128.134 363.635 124.816 365.534 122.127 cv
366.31 121.029 365.223 119.546 365.812 118.218 cv
cp
f
341.912 128.829 mo
343.13 129.715 343.001 130.929 341.624 131.541 cv
333.817 135.007 li
332.44 135.619 330.337 135.395 329.119 134.509 cv
327.902 133.622 328.031 132.408 329.407 131.797 cv
337.215 128.33 li
338.591 127.719 340.694 127.942 341.912 128.829 cv
cp
f
335.421 123.784 mo
340.9 123.848 li
341.897 125.534 342.73 127.404 342.753 130.177 cv
328.289 133.264 li
328.14 131.317 330.642 128.827 333.506 127.203 cv
334.676 126.54 334.324 124.735 335.421 123.784 cv
cp
f
334.862 96.9095 mo
346.139 99.6743 li
346.727 97.2699 li
350.146 83.3274 li
353.419 69.9694 li
342.143 67.2067 li
334.862 96.9095 li
cp
0 .415686 .521569 rgb
f
334.746 122.145 mo
332.386 123.193 332.165 125.274 334.252 126.794 cv
336.339 128.313 339.944 128.696 342.304 127.648 cv
344.664 126.601 344.885 124.519 342.797 123 cv
340.71 121.48 337.105 121.097 334.746 122.145 cv
cp
f
344.218 125.501 mo
345.614 117.109 346.509 100.699 346.139 99.6734 cv
345.72 98.5096 345.373 94.773 344.46 93.9383 cv
343.174 92.7624 341.63 91.6384 339.888 91.6925 cv
337.785 91.7579 335.543 94.919 334.863 96.9096 cv
334.182 98.9003 332.649 123.061 332.831 124.292 cv
333.014 125.524 334.978 124.102 336.101 124.639 cv
344.218 125.501 li
cp
f
350.7 73.8181 mo
350.7 73.8181 352.458 97.4024 354.069 101.044 cv
354.735 102.847 364.612 96.2244 364.612 96.2244 cv
364.403 94.1287 li
362.273 71.097 li
350.7 73.8181 li
f
364.097 116.924 mo
362.408 118.877 363.094 120.854 365.63 121.341 cv
368.165 121.827 371.59 120.639 373.279 118.686 cv
374.968 116.733 374.282 114.756 371.746 114.27 cv
369.21 113.783 365.786 114.972 364.097 116.924 cv
cp
f
374.097 115.928 mo
371.049 107.985 364.431 95.2506 363.593 94.5536 cv
362.642 93.7628 361.248 92.8828 360.027 92.6855 cv
358.203 92.391 354.712 93.1132 354.947 93.0654 cv
357.008 92.6457 353.648 98.9826 354.069 101.044 cv
354.491 103.105 362.498 118.713 363.279 119.683 cv
364.06 120.652 364.016 120.609 365.256 120.504 cv
374.097 115.928 li
cp
f
362.671 37.6539 mo
362.671 37.6539 362.579 43.8404 362.488 50.8783 cv
362.479 52.0709 362.462 53.2942 362.445 54.5073 cv
362.314 62.5594 362.241 70.558 362.273 71.097 cv
358.999 77.163 341.741 74.0258 341.319 69.4729 cv
338.85 40.5286 li
338.722 39.5645 338.696 38.6244 338.773 37.7382 cv
338.792 37.717 li
339.281 32.3083 339.702 28.6267 345.776 29.8569 cv
347.266 30.1486 349.125 30.7489 351.416 31.704 cv
352.577 32.1857 353.775 32.6151 354.963 33.065 cv
356.04 33.4816 357.118 33.9082 358.126 34.3589 cv
359.982 35.2399 361.606 36.265 362.671 37.6539 cv
f
342.116 43.7772 mo
342.116 43.7772 348.227 46.5239 350.553 47.4961 cv
350.767 45.0731 350.258 39.0816 351.286 36.8861 cv
352.035 35.2569 353.333 33.7721 354.968 33.0676 cv
353.771 32.6155 352.576 32.1828 351.414 31.7064 cv
349.129 30.7484 347.265 30.148 345.773 29.8521 cv
345.668 29.9445 345.54 30.02 345.412 30.0955 cv
339.825 33.4563 342.116 43.7772 342.116 43.7772 cv
.796078 .733333 .627451 rgb
f
354.838 52.9511 mo
355.531 53.9009 356.648 54.4815 357.817 54.7212 cv
358.966 54.9441 360.151 54.8482 361.328 54.6944 cv
361.695 54.6465 362.078 54.5767 362.442 54.5094 cv
362.543 46.1139 362.674 37.6554 362.674 37.6554 cv
361.609 36.2635 359.983 35.2392 358.122 34.3634 cv
356.581 34.7414 355.166 35.633 354.384 37.0111 cv
353.344 38.8157 353.434 41.0028 353.547 43.0688 cv
353.647 45.0384 353.75 47.0273 353.869 48.9944 cv
353.933 50.38 354.042 51.8184 354.838 52.9511 cv
f
362.273 71.097 mo
360.547 55.7728 li
360.217 54.8142 li
360.587 54.7854 360.958 54.7428 361.328 54.6944 cv
361.695 54.6465 362.078 54.5767 362.442 54.5094 cv
362.457 53.2909 362.472 52.0713 362.488 50.8761 cv
362.488 50.8783 li
362.479 52.0709 362.462 53.2942 362.445 54.5073 cv
362.335 61.2855 362.265 68.0258 362.265 70.3104 cv
362.265 70.7398 362.268 71.0118 362.273 71.097 cv
.0117647 .384314 .478431 rgb
f
360.217 54.8142 mo
355.929 42.3541 li
358.599 41.2729 li
362.488 50.8761 li
362.472 52.0713 362.457 53.2909 362.442 54.5094 cv
362.078 54.5767 361.695 54.6465 361.328 54.6944 cv
360.958 54.7428 360.587 54.7854 360.217 54.8142 cv
.72549 .670588 .572549 rgb
f
357.451 36.5958 mo
359.532 35.517 362.093 36.3286 363.172 38.4088 cv
366.442 44.7137 li
370.699 53.1806 li
371.778 55.261 370.356 57.6097 368.275 58.6886 cv
366.195 59.7675 364.78 57.8895 363.564 56.0728 cv
355.639 42.3159 li
354.56 40.2356 355.371 37.6747 357.451 36.5958 cv
cp
.796078 .733333 .627451 rgb
f
376.786 76.1901 mo
376.985 76.6991 377.18 77.2256 377.177 77.7723 cv
377.175 78.1621 377.071 78.5432 376.969 78.9193 cv
376.705 79.8891 376.441 80.8588 376.176 81.8285 cv
376.096 82.1232 376.015 82.419 375.895 82.6997 cv
375.621 83.3381 375.138 83.885 374.538 84.2359 cv
374.358 84.3414 374.143 84.4317 373.945 84.3669 cv
373.844 84.3339 373.758 84.263 373.69 84.1808 cv
373.363 83.7824 373.452 83.2032 373.466 82.6875 cv
373.492 81.7289 373.195 80.7899 372.818 79.9081 cv
372.442 79.0262 371.983 78.1789 371.658 77.2767 cv
371.96 77.9086 372.226 78.5801 372.226 79.2801 cv
372.225 79.9802 371.904 80.7182 371.282 81.0403 cv
371.093 81.0881 li
370.951 81.015 li
370.639 80.7708 370.439 80.3885 370.417 79.9931 cv
370.4 79.6958 370.479 79.399 370.461 79.1018 cv
370.439 78.7341 370.272 78.3934 370.139 78.05 cv
369.582 76.6189 369.589 74.9772 370.156 73.5505 cv
370.265 73.278 370.394 73.0113 370.571 72.7774 cv
370.993 72.2196 371.651 71.8924 372.308 71.6516 cv
372.456 71.5972 372.609 71.5456 372.767 71.549 cv
372.887 71.5515 373.004 71.5859 373.118 71.6253 cv
374.07 71.9571 374.856 72.6666 375.438 73.4899 cv
376.021 74.3132 376.418 75.2509 376.786 76.1901 cv
cp
1 .807843 .631373 rgb
f
370.951 81.015 mo
370.639 80.7708 370.439 80.3886 370.417 79.9931 cv
370.4 79.6958 370.479 79.399 370.461 79.1018 cv
370.439 78.7341 370.272 78.3934 370.139 78.05 cv
369.582 76.6189 369.589 74.9772 370.156 73.5505 cv
370.265 73.278 370.394 73.0113 370.571 72.7774 cv
370.993 72.2196 371.651 71.8924 372.308 71.6516 cv
372.456 71.5972 372.609 71.5456 372.767 71.549 cv
372.887 71.5515 373.004 71.5859 373.118 71.6253 cv
374.07 71.957 374.856 72.6666 375.438 73.4899 cv
376.021 74.3132 376.419 75.2509 376.786 76.1901 cv
376.906 76.4966 377.024 76.8095 377.098 77.1294 cv
372.959 77.6832 li
372.959 77.6832 372.23 77.9635 372.04 78.2077 cv
372.152 78.5565 372.22 78.9143 372.226 79.2801 cv
372.263 81.7018 370.993 81.0483 370.951 81.015 cv
cp
f
370.416 73.8027 mo
372.3 73.97 374.393 72.7216 374.393 72.7216 cv
375.817 71.9731 375.939 70.7391 375.315 68.6133 cv
370.957 53.8273 li
370.903 53.6465 370.838 53.4712 370.761 53.3042 cv
370.739 53.2525 li
369.911 51.4898 367.901 50.5445 365.976 51.1136 cv
365.176 51.3482 364.503 51.8116 364.011 52.4105 cv
363.913 52.5294 363.823 52.6517 363.741 52.7805 cv
363.128 53.7275 362.918 54.9275 363.262 56.0946 cv
363.426 56.6532 li
367.617 70.8809 li
368.024 72.9728 369.173 73.6947 370.416 73.8027 cv
cp
.796078 .733333 .627451 rgb
f
344.671 34.0456 mo
344.864 34.4166 345.217 34.7673 345.727 35.0608 cv
347.38 36.0149 350.061 36.0149 351.714 35.0608 cv
353.368 34.1068 353.368 32.5593 351.714 31.6053 cv
351.341 31.3892 350.915 31.2241 350.46 31.1059 cv
350.22 31.0427 349.971 30.9937 349.716 30.957 cv
348.33 30.7654 346.809 30.9816 345.727 31.6053 cv
345.162 31.9315 344.791 32.3271 344.612 32.7428 cv
344.428 33.1711 344.447 33.6215 344.671 34.0456 cv
1 .807843 .631373 rgb
f
352.951 22.3805 mo
352.951 33.3394 li
344.489 33.3394 li
344.489 22.3805 li
352.951 22.3805 li
f
345.881 33.7329 mo
345.802 33.7329 345.723 33.7302 345.645 33.7248 cv
345.244 33.6939 344.828 33.6015 344.519 33.3394 cv
344.519 33.3394 li
347.648 33.3394 li
347.648 33.3394 li
347.077 33.5841 346.471 33.7329 345.881 33.7329 cv
.909804 .737255 .576471 rgb
f
347.648 33.3394 mo
344.519 33.3394 li
344.489 33.3241 li
344.489 31.8135 li
344.751 31.6594 345.09 31.6285 345.398 31.5823 cv
345.706 31.5361 346.014 31.459 346.307 31.3357 cv
346.461 31.274 li
348.696 30.3338 350.546 27.5748 350.746 25.2473 cv
351.085 26.9428 351.101 29.5323 350.269 31.0583 cv
350.238 31.12 li
349.714 32.0756 348.743 32.8925 347.648 33.3394 cv
f
351.532 23.001 mo
351.466 24.211 351.4 25.4281 351.127 26.6087 cv
350.854 27.7893 350.362 28.9433 349.54 29.8339 cv
348.326 31.1491 346.41 31.774 344.654 31.4273 cv
344.236 31.3446 343.82 31.2071 343.475 30.9556 cv
342.816 30.475 342.508 29.6566 342.28 28.8737 cv
341.323 25.5865 341.175 22.11 341.391 18.693 cv
341.423 18.1859 341.464 17.6737 341.622 17.191 cv
342.091 15.7623 343.556 14.8217 345.048 14.6355 cv
346.54 14.4493 348.044 14.9027 349.404 15.5449 cv
349.778 15.7213 350.15 15.9164 350.448 16.2028 cv
350.732 16.476 350.936 16.8207 351.197 17.1162 cv
351.518 17.4804 351.631 21.1807 351.532 23.001 cv
cp
1 .807843 .631373 rgb
f
351.532 24.2921 mo
351.466 25.5021 351.4 26.7193 351.127 27.8999 cv
350.854 29.0805 350.362 30.2345 349.54 31.125 cv
348.326 32.4403 346.41 33.0653 344.654 32.7184 cv
344.236 32.6357 343.82 32.4982 343.475 32.2467 cv
342.816 31.7662 342.508 30.9477 342.28 30.1648 cv
341.323 26.8776 341.175 23.4011 341.391 19.9841 cv
341.423 19.4771 341.464 18.9649 341.622 18.4821 cv
342.091 17.0535 343.556 16.1128 345.048 15.9267 cv
346.54 15.7404 348.044 16.1939 349.404 16.836 cv
349.778 17.0124 350.15 17.2075 350.448 17.4939 cv
350.732 17.7671 350.936 18.1118 351.197 18.4074 cv
351.518 18.7715 351.631 22.4719 351.532 24.2921 cv
cp
f
350.946 23.8673 mo
350.987 23.9379 351.774 23.3832 352.092 23.2125 cv
351.558 25.1653 351.341 27.2046 351.454 29.2259 cv
351.47 29.5039 351.504 29.8096 351.708 29.9992 cv
351.846 30.1278 352.041 30.1785 352.229 30.1923 cv
353.019 30.2501 353.76 29.7237 354.18 29.0526 cv
354.6 28.3814 354.758 27.5836 354.894 26.8035 cv
355.065 25.8185 355.213 24.8295 355.337 23.8374 cv
355.589 21.8301 355.894 19.6048 355.113 17.7386 cv
354.511 16.3004 353.449 15.1191 352.093 14.3495 cv
350.737 13.5798 348.934 13.325 347.375 13.3265 cv
346.058 13.3279 344.724 13.5871 343.569 14.22 cv
342.414 14.8531 341.451 15.8809 341.034 17.1299 cv
340.857 17.6567 340.78 18.2339 340.933 18.7679 cv
341.236 19.8227 342.337 20.4395 343.398 20.719 cv
345.177 21.1874 347.119 21.0109 348.785 20.2291 cv
349.129 20.0674 349.471 19.8778 349.849 19.8291 cv
350.227 19.7804 350.659 19.9127 350.835 20.2506 cv
350.931 20.4364 350.937 20.6541 350.941 20.8632 cv
350.953 21.508 350.922 23.8258 350.946 23.8673 cv
cp
.490196 .305882 .141176 rgb
f
352.121 22.3458 mo
351.657 22.2915 351.26 22.662 351.061 23.048 cv
350.814 23.53 350.745 24.07 350.68 24.599 cv
350.598 25.2721 350.518 25.9719 350.762 26.6115 cv
350.828 26.7829 350.925 26.9563 351.096 27.0498 cv
351.352 27.1901 351.699 27.0993 351.914 26.9097 cv
352.128 26.72 352.238 26.4548 352.331 26.196 cv
352.599 25.448 352.785 24.6751 352.883 23.8931 cv
352.922 23.5801 352.946 23.256 352.839 22.9566 cv
352.731 22.6572 352.463 22.386 352.121 22.3458 cv
cp
1 .807843 .631373 rgb
f
340.832 16.6471 mo
340.542 20.3529 li
343.045 20.6223 345.912 21.9086 349.019 23.8672 cv
349.067 23.8615 li
351.302 23.5822 353.178 22.65 354.669 21.0223 cv
355.012 20.6499 355.334 20.2378 355.636 19.7908 cv
355.842 17.2691 355.155 15.2358 353.328 13.8265 cv
349.213 11.4515 345.441 11.8221 341.963 14.5159 cv
341.3 15.0297 340.897 15.8109 340.832 16.6471 cv
cp
0 .415686 .521569 rgb
f
336.922 24.3388 mo
336.808 24.3899 336.724 24.2061 336.811 24.1166 cv
338.457 22.4219 340.125 20.5255 340.541 20.3528 cv
340.868 20.2172 341.952 19.8713 342.306 19.8625 cv
344.942 19.7978 348.781 21.4479 350.238 23.6458 cv
349.473 24.3653 349.814 24.3635 347.912 25.8255 cv
347.102 26.4486 345.654 26.8473 344.671 26.0665 cv
343.034 24.7675 338.997 23.4071 336.922 24.3388 cv
cp
0 .333333 .419608 rgb
f
349.067 23.8615 mo
351.302 23.5822 353.178 22.65 354.669 21.0223 cv
354.544 21.1005 354.422 21.1835 354.297 21.2617 cv
353.657 21.6632 352.95 21.9572 352.212 22.1206 cv
351.844 22.2036 351.423 22.2419 351.122 22.0165 cv
350.896 21.8443 350.79 21.5603 350.711 21.2857 cv
350.313 19.9332 350.275 18.5068 350.238 17.097 cv
350.183 18.1075 350.13 19.118 350.077 20.1286 cv
350.041 20.8269 349.99 21.5691 349.585 22.141 cv
349.397 22.4091 349.135 22.631 349.009 22.9326 cv
348.884 23.2339 348.922 23.5697 349.067 23.8615 cv
cp
f
328.976 9.53829 mo
329.172 9.82423 329.962 9.28627 330.297 9.19476 cv
330.631 9.10325 330.954 8.93223 331.301 8.94441 cv
331.72 8.95914 332.079 9.23738 332.394 9.51436 cv
332.709 9.79134 333.037 10.0923 333.45 10.1703 cv
333.862 10.2482 334.368 9.98295 334.37 9.56337 cv
334.492 9.84311 334.81 10.0235 335.113 9.9854 cv
335.415 9.94726 335.678 9.69372 335.727 9.39241 cv
335.94 9.65378 336.394 9.65983 336.613 9.40419 cv
336.832 9.14855 336.757 8.70039 336.466 8.53076 cv
336.744 8.82992 337.303 8.54565 337.376 8.14398 cv
337.45 7.74232 337.205 7.35262 336.932 7.04921 cv
335.939 5.94731 334.39 5.37528 332.919 5.56803 cv
331.449 5.76078 330.099 6.71293 329.423 8.03344 cv
329.271 8.33075 328.787 9.26301 328.976 9.53829 cv
cp
1 .807843 .631373 rgb
f
187.884 310.301 mo
187.8 310.073 li
187.8 310.073 183.109 296.384 183.007 293.68 cv
183.007 293.68 185.86 290.937 187.374 291.383 cv
189.597 293.812 192.684 301.376 195.249 307.22 cv
195.372 307.554 li
195.372 307.557 li
195.907 309.014 195.538 310.583 194.548 311.647 cv
194.134 312.092 193.61 312.448 193 312.673 cv
190.932 313.432 188.641 312.37 187.884 310.301 cv
.74902 .690196 .592157 rgb
f
205.167 317.519 mo
202.831 316.794 li
190.53 312.978 li
190.012 312.816 189.549 312.559 189.157 312.233 cv
188.135 311.378 187.587 310.046 187.753 308.69 cv
187.781 308.455 187.832 308.219 187.905 307.986 cv
188.253 306.862 189.055 306.002 190.047 305.546 cv
190.91 305.147 191.918 305.055 192.895 305.359 cv
193.513 305.55 li
194.323 305.802 li
203.939 308.787 li
207.531 309.902 li
209.401 310.481 210.539 312.313 210.309 314.192 cv
210.28 314.424 210.231 314.659 210.159 314.892 cv
209.505 316.996 207.27 318.171 205.167 317.519 cv
f
180.535 271.562 mo
179.842 269.127 175.908 269.164 177.107 273.54 cv
190.202 326.183 li
191.524 327.406 193.085 328.269 194.772 328.797 cv
180.535 271.562 li
cp
.576471 .376471 .215686 rgb
f
194.772 328.797 mo
193.085 328.269 191.524 327.406 190.202 326.183 cv
209.912 405.416 li
210.452 407.527 214.161 406.965 213.34 403.437 cv
194.772 328.797 li
cp
f
166.335 313.697 mo
165.678 313.697 165.039 313.357 164.686 312.746 cv
164.161 311.837 164.473 310.674 165.383 310.149 cv
184.345 299.2 li
185.251 298.674 186.415 298.985 186.942 299.896 cv
187.468 300.805 187.156 301.968 186.246 302.494 cv
167.284 313.443 li
166.985 313.615 166.658 313.697 166.335 313.697 cv
cp
f
179.712 287.765 mo
180 288.433 180.288 289.1 180.577 289.768 cv
180.811 290.31 181.052 290.863 181.446 291.304 cv
181.839 291.745 182.42 292.062 183.007 291.989 cv
182.555 290.311 181.781 288.721 180.739 287.33 cv
180.611 287.159 180.472 286.985 180.281 286.89 cv
180.09 286.794 179.831 286.799 179.687 286.957 cv
179.495 287.169 179.599 287.503 179.712 287.765 cv
cp
1 .807843 .631373 rgb
f
162.588 298.606 mo
161.93 298.606 161.291 298.266 160.939 297.656 cv
160.413 296.746 160.725 295.583 161.635 295.058 cv
180.551 284.135 li
181.458 283.609 182.622 283.921 183.149 284.832 cv
183.675 285.741 183.363 286.904 182.453 287.43 cv
163.537 298.352 li
163.238 298.525 162.911 298.606 162.588 298.606 cv
cp
.576471 .376471 .215686 rgb
f
190.736 314.96 mo
190.208 314.049 189.044 313.738 188.138 314.264 cv
169.13 325.239 li
168.22 325.765 167.908 326.928 168.434 327.837 cv
168.787 328.447 169.426 328.788 170.083 328.788 cv
170.406 328.788 170.733 328.706 171.032 328.534 cv
190.039 317.558 li
190.949 317.033 191.261 315.87 190.736 314.96 cv
cp
f
191.931 329.328 mo
172.878 340.33 li
171.968 340.855 171.656 342.019 172.182 342.928 cv
172.534 343.538 173.173 343.879 173.831 343.879 cv
174.154 343.879 174.481 343.797 174.779 343.624 cv
193.832 332.623 li
194.742 332.097 195.054 330.934 194.529 330.025 cv
194.001 329.114 192.837 328.803 191.931 329.328 cv
cp
f
177.578 358.969 mo
176.921 358.969 176.282 358.629 175.929 358.019 cv
175.404 357.109 175.716 355.946 176.626 355.421 cv
195.724 344.393 li
196.63 343.867 197.795 344.178 198.322 345.089 cv
198.848 345.999 198.535 347.162 197.626 347.687 cv
178.527 358.715 li
178.228 358.888 177.901 358.969 177.578 358.969 cv
cp
f
181.326 374.06 mo
180.669 374.06 180.03 373.72 179.677 373.109 cv
179.151 372.2 179.463 371.037 180.373 370.511 cv
199.517 359.457 li
200.423 358.932 201.588 359.242 202.115 360.154 cv
202.641 361.063 202.329 362.226 201.419 362.752 cv
182.275 373.806 li
181.976 373.978 181.649 374.06 181.326 374.06 cv
cp
f
185.074 389.151 mo
184.416 389.151 183.777 388.811 183.424 388.2 cv
182.899 387.291 183.211 386.128 184.121 385.602 cv
203.31 374.522 li
204.217 373.997 205.381 374.307 205.908 375.218 cv
206.434 376.127 206.122 377.29 205.212 377.816 cv
186.022 388.896 li
185.723 389.069 185.397 389.151 185.074 389.151 cv
cp
f
188.821 404.242 mo
188.164 404.242 187.525 403.901 187.172 403.291 cv
186.647 402.381 186.959 401.218 187.868 400.693 cv
207.104 389.586 li
208.01 389.061 209.174 389.371 209.701 390.283 cv
210.227 391.192 209.915 392.355 209.005 392.88 cv
189.77 403.987 li
189.471 404.16 189.144 404.242 188.821 404.242 cv
cp
f
189.873 396.65 mo
188.694 397.383 188.73 398.508 189.955 399.163 cv
196.901 402.877 li
198.126 403.532 200.075 403.468 201.255 402.735 cv
202.434 402.002 202.397 400.877 201.173 400.221 cv
194.226 396.508 li
193.002 395.853 191.052 395.916 189.873 396.65 cv
cp
.262745 .160784 .0941176 rgb
f
201.857 393.546 mo
195.419 395.246 li
191.508 394.347 188.938 395.656 189.01 397.872 cv
202.112 401.353 li
201.857 393.546 li
cp
f
193.121 376.337 mo
192.059 377.232 192.256 378.34 193.562 378.813 cv
200.968 381.495 li
202.274 381.968 204.194 381.626 205.256 380.732 cv
206.318 379.837 206.121 378.729 204.815 378.256 cv
197.409 375.574 li
196.103 375.101 194.184 375.443 193.121 376.337 cv
cp
f
204.538 371.551 mo
198.409 374.154 li
194.41 373.824 192.053 375.487 192.442 377.671 cv
205.907 379.241 li
204.538 371.551 li
cp
f
205.558 377.283 mo
205.566 377.196 201.303 351.89 200.747 351.053 cv
200.116 350.103 198.99 347.039 197.99 346.492 cv
196.58 345.721 194.95 345.054 193.402 345.484 cv
191.533 346.004 190.219 349.327 190.047 351.259 cv
189.874 353.191 193.52 373.507 193.939 373.959 cv
197.201 382.65 205.529 377.629 205.558 377.283 cv
cp
0 .376471 .470588 rgb
f
212.845 358.161 mo
211.773 358.906 li
204.493 371.339 li
194.454 367.91 li
194.362 367.877 li
199.205 353.727 li
198.899 352.555 li
197.785 348.407 li
198.079 348.048 li
203.495 341.187 li
209.351 345.306 li
215.195 344.605 li
215.195 344.605 218.904 354.152 212.845 358.161 cv
cp
0 .415686 .521569 rgb
f
193.957 393.098 mo
191.703 393.865 191.329 395.759 193.12 397.326 cv
194.912 398.894 198.191 399.542 200.444 398.775 cv
202.698 398.007 203.072 396.114 201.281 394.546 cv
199.489 392.979 196.21 392.33 193.957 393.098 cv
cp
f
202.379 396.96 mo
203.652 389.22 204.995 371.753 204.653 370.808 cv
204.264 369.736 203.58 368.185 202.738 367.417 cv
201.55 366.335 200.124 365.301 198.518 365.354 cv
196.579 365.418 194.829 366.651 194.204 368.487 cv
193.58 370.324 191.852 393.777 192.022 394.912 cv
192.192 396.047 192.177 395.992 193.213 396.486 cv
202.379 396.96 li
cp
f
212.458 322.764 mo
212.287 323.006 212.108 323.231 211.928 323.456 cv
211.226 324.319 210.435 325.093 209.572 325.776 cv
208.142 326.909 206.533 327.79 204.833 328.402 cv
203.988 328.716 203.116 328.959 202.235 329.121 cv
198.341 329.885 194.286 329.265 191.21 327.017 cv
190.455 324.337 189.916 322.305 189.781 321.658 cv
189.682 321.163 189.583 320.66 189.619 320.156 cv
189.709 318.807 191.013 317.288 191.939 316.307 cv
192.011 316.227 li
192.793 315.408 193.638 314.644 194.51 313.916 cv
195.374 313.205 196.273 312.522 197.172 311.848 cv
197.972 311.245 198.728 310.786 199.447 310.454 cv
201.56 309.429 203.34 309.384 205.067 309.438 cv
205.382 309.447 205.696 309.456 206.011 309.474 cv
209.284 309.591 210.57 312.855 211.163 315.597 cv
211.55 317.368 212 319.904 212.458 322.764 cv
cp
.796078 .733333 .627451 rgb
f
185.766 292.248 mo
187.084 292.041 187.005 291.681 187.374 291.38 cv
187.363 290.753 187.157 290.148 186.953 289.556 cv
186.609 288.56 186.262 287.556 185.722 286.652 cv
185.183 285.748 184.689 284.902 183.726 284.478 cv
184.159 285.863 184.289 286.818 184.689 288.364 cv
183.785 287.686 182.959 287.314 182.055 286.636 cv
181.664 286.343 181.167 286.035 180.72 286.233 cv
180.516 286.624 180.707 287.117 181.004 287.443 cv
181.302 287.768 181.695 287.993 182.006 288.306 cv
182.891 289.193 183.172 290.046 184.004 290.993 cv
184.436 291.484 185.508 292.288 185.766 292.248 cv
cp
1 .807843 .631373 rgb
f
160.797 282.957 mo
160.172 280.03 156.35 280.854 157.369 284.936 cv
190.174 416.811 li
190.782 419.105 194.566 418.917 193.602 414.832 cv
160.797 282.957 li
cp
.576471 .376471 .215686 rgb
f
166.571 300.436 mo
166.374 299.893 166.172 299.341 165.835 298.871 cv
165.497 298.401 165.156 297.432 164.294 297.729 cv
164.567 298.778 164.805 299.235 164.227 299.54 cv
163.649 299.845 163.14 300.308 162.571 299.987 cv
161.512 299.392 161.026 299.185 160.194 296.481 cv
160.194 296.481 159.192 297.622 159.152 298.54 cv
159.111 299.458 159.19 302.247 159.421 303.137 cv
159.713 304.256 160.12 304.919 161.085 305.722 cv
162.139 306.597 162.313 307.209 163.529 307.839 cv
163.688 307.99 li
165.669 307.604 167.257 305.732 167.315 303.715 cv
167.347 302.587 166.956 301.496 166.571 300.436 cv
cp
1 .807843 .631373 rgb
f
173.622 321.916 mo
173.468 321.729 li
173.468 321.729 164.519 310.357 163.529 307.839 cv
163.529 307.839 165.74 304.395 167.317 304.315 cv
170.217 305.874 175.205 311.906 179.556 316.575 cv
179.783 316.85 li
179.784 316.852 li
180.77 318.051 180.94 319.654 180.357 320.986 cv
180.113 321.542 179.737 322.052 179.235 322.465 cv
177.534 323.864 175.021 323.618 173.622 321.916 cv
cp
.796078 .733333 .627451 rgb
f
212.458 322.764 mo
207.342 328.305 195.297 333.307 190.558 324.672 cv
192.549 331.77 196.658 345.778 197.785 348.407 cv
199.581 349.534 215.991 348.67 215.74 346.395 cv
215.55 344.672 213.937 331.994 212.458 322.764 cv
cp
0 .415686 .521569 rgb
f
205.436 330.587 mo
202.81 331.198 li
202.648 330.533 202.459 329.831 202.235 329.121 cv
201.785 327.619 201.218 326.046 200.679 324.499 cv
200.166 323.051 199.681 321.685 199.276 320.372 cv
198.503 317.881 196.093 316.541 191.939 316.307 cv
192.011 316.227 li
192.793 315.408 193.638 314.644 194.51 313.916 cv
198.449 314.644 200.904 316.523 201.848 319.572 cv
202.244 320.83 202.72 322.179 203.224 323.6 cv
203.79 325.191 204.366 326.819 204.833 328.402 cv
205.067 329.139 205.265 329.876 205.436 330.587 cv
cp
f
212.44 327.089 mo
209.752 327.323 li
209.707 326.819 209.644 326.306 209.572 325.776 cv
209.329 324.059 208.96 322.197 208.592 320.39 cv
208.295 318.888 208.007 317.458 207.792 316.101 cv
207.324 313.205 204.581 311.452 199.402 310.75 cv
199.447 310.454 li
201.56 309.429 203.34 309.384 205.067 309.438 cv
208.196 310.75 210.004 312.846 210.453 315.678 cv
210.66 316.982 210.939 318.376 211.244 319.859 cv
211.478 321.055 211.73 322.26 211.928 323.456 cv
212.153 324.697 212.341 325.929 212.44 327.089 cv
cp
f
196.303 321.701 mo
196.331 321.458 196.335 321.219 196.32 320.986 cv
196.196 319.097 195.624 316.649 193.679 316.428 cv
177.565 315.552 li
176.549 315.436 175.576 315.714 174.802 316.267 cv
173.912 316.9 173.285 317.894 173.152 319.063 cv
173.125 319.306 173.119 319.547 173.134 319.783 cv
173.223 321.146 174.011 322.352 175.174 323.002 cv
175.62 323.25 176.123 323.416 176.662 323.478 cv
191.889 325.213 li
194.076 325.461 196.053 323.891 196.303 321.701 cv
cp
.796078 .733333 .627451 rgb
f
199.501 302.629 mo
199.64 303.766 199.777 304.909 199.717 306.052 cv
199.657 307.195 199.39 308.349 198.772 309.313 cv
198.075 310.396 196.937 311.174 195.687 311.467 cv
195.295 311.562 194.892 311.608 194.488 311.599 cv
194.085 311.59 193.676 311.531 193.314 311.353 cv
192.749 311.077 192.363 310.553 192.055 309.993 cv
192.054 309.989 li
191.985 309.864 191.92 309.739 191.859 309.613 cv
190.429 306.713 189.719 303.502 189.359 300.288 cv
189.306 299.813 189.259 299.328 189.328 298.852 cv
189.53 297.448 190.736 296.331 192.094 295.913 cv
193.452 295.495 194.926 295.669 196.296 296.043 cv
196.673 296.147 197.052 296.265 197.376 296.484 cv
197.684 296.691 197.93 296.978 198.222 297.211 cv
198.581 297.495 199.294 300.921 199.501 302.629 cv
1 .807843 .631373 rgb
f
193.46 312.068 mo
193.452 312.021 li
193.46 312.068 li
cp
f
gsave
194.585 311.6 mo
194.553 311.6 194.52 311.6 194.488 311.599 cv
194.085 311.59 193.676 311.531 193.314 311.353 cv
192.749 311.077 192.363 310.553 192.055 309.993 cv
192.054 309.989 li
192.401 310.223 192.702 310.341 192.957 310.341 cv
193.827 310.341 194.157 308.971 193.904 306.156 cv
193.932 306.246 193.961 306.328 193.991 306.404 cv
194.072 306.939 194.163 307.472 194.304 307.994 cv
194.558 308.935 195.026 309.879 195.739 310.514 cv
195.755 310.614 195.77 310.714 195.785 310.814 cv
195.807 310.961 195.83 311.114 195.792 311.257 cv
195.687 311.467 li
195.687 311.467 li
195.326 311.555 194.957 311.6 194.585 311.6 cv
clp
192.054 306.156 mo
195.83 306.156 li
195.83 311.6 li
192.054 311.6 li
cp
.909804 .737255 .576471 rgb
f
grestore
201.243 301.722 mo
193.367 303.113 li
195.168 313.307 li
203.044 311.915 li
201.243 301.722 li
cp
f
201.574 310.222 mo
203.273 310.84 203.528 312.283 202.143 313.446 cv
200.758 314.609 198.258 315.05 196.559 314.432 cv
194.86 313.815 194.605 312.371 195.99 311.208 cv
197.374 310.046 199.874 309.604 201.574 310.222 cv
cp
f
191.168 301.032 mo
192.447 301.5 193.192 302.67 193.55 303.983 cv
193.909 305.297 193.95 306.68 194.304 307.994 cv
194.659 309.309 195.431 310.628 196.706 311.105 cv
197.598 311.44 198.591 311.311 199.527 311.134 cv
200.753 310.901 202.366 310.544 202.633 309.325 cv
206.16 293.185 196.472 293.849 195.336 293.95 cv
191.332 294.305 186.957 297.622 189.371 300.397 cv
189.741 300.823 190.728 300.872 191.168 301.032 cv
.235294 .235294 .231373 rgb
f
193.698 303.055 mo
193.266 303.144 193.02 303.594 192.957 304 cv
192.878 304.505 192.977 305.01 193.077 305.503 cv
193.203 306.132 193.339 306.783 193.749 307.283 cv
193.858 307.418 193.997 307.544 194.178 307.577 cv
194.449 307.627 194.734 307.442 194.87 307.208 cv
195.005 306.975 195.025 306.704 195.031 306.444 cv
195.05 305.694 194.986 304.946 194.841 304.215 cv
194.783 303.923 194.708 303.625 194.523 303.389 cv
194.338 303.153 194.017 302.989 193.698 303.055 cv
cp
1 .807843 .631373 rgb
f
184.74 300.382 mo
184.578 301.064 185.255 301.71 185.89 302.009 cv
186.524 302.309 189.74 302.611 190.439 302.671 cv
190.018 301.913 189.761 300.466 190.251 299.75 cv
190.741 299.034 194.099 297.253 194.965 297.304 cv
194.02 296.735 190.458 296.002 189.4 296.313 cv
188.227 296.657 185.409 297.557 184.74 300.382 cv
0 .333333 .419608 rgb
f
203.037 299.611 mo
202.748 300.162 202.294 300.705 201.642 301.21 cv
201.028 301.685 200.299 302.074 199.516 302.392 cv
199.516 303.416 li
200.064 303.232 200.592 303.02 201.062 302.749 cv
202.076 302.164 202.729 301.451 203.037 300.701 cv
203.037 299.611 li
cp
.929412 .929412 .929412 rgb
f
203.247 299.582 mo
203.238 299.582 li
203.292 300.238 203.085 300.913 202.618 301.533 cv
202.618 300.562 li
202.618 299.834 202.114 299.546 201.485 299.905 cv
200.855 300.265 200.343 301.155 200.343 301.875 cv
200.343 303.197 li
197.402 304.518 193.167 304.419 190.47 302.864 cv
189.067 302.055 188.348 301.003 188.285 299.951 cv
188.276 299.941 li
188.186 298.188 188.455 296.812 188.986 295.724 cv
189.175 295.338 189.409 294.978 189.66 294.654 cv
189.867 294.403 190.092 294.16 190.335 293.944 cv
191.729 292.694 194.201 292.208 196.072 292.253 cv
196.962 292.28 197.735 292.442 198.464 292.739 cv
198.526 292.766 li
199.327 293.081 200.064 293.566 200.819 294.187 cv
201.197 294.501 201.53 294.87 201.817 295.302 cv
201.826 295.311 li
202.681 296.551 203.184 298.17 203.247 299.582 cv
0 .415686 .521569 rgb
f
197.169 301.218 mo
196.782 299.249 195.505 297.478 193.761 296.498 cv
192.719 295.901 191.52 295.596 190.32 295.596 cv
189.873 295.596 189.425 295.639 188.986 295.724 cv
189.175 295.338 189.409 294.978 189.66 294.654 cv
189.804 294.654 li
189.831 294.654 189.857 294.654 189.884 294.654 cv
191.683 294.654 193.502 295.256 194.876 296.426 cv
196.26 297.604 197.169 299.384 197.169 301.218 cv
.0235294 .356863 .439216 rgb
f
202.339 297.694 mo
201.952 295.733 200.675 293.962 198.931 292.973 cv
198.796 292.901 198.661 292.829 198.526 292.766 cv
199.327 293.081 200.064 293.566 200.819 294.187 cv
201.197 294.501 201.53 294.87 201.817 295.302 cv
201.826 295.311 li
202.159 296.057 202.339 296.875 202.339 297.694 cv
f
178.414 71.2895 mo
160.95 61.207 li
160.95 37.7098 li
178.414 47.7923 li
178.414 71.2895 li
cp
.74902 .588235 .384314 rgb
f
201.8 57.7878 mo
178.414 71.2895 li
178.414 47.7923 li
201.8 34.2906 li
201.8 57.7878 li
cp
.792157 .619608 .403922 rgb
f
201.801 34.2906 mo
191.069 40.4876 li
190.07 41.0637 li
178.414 47.7922 li
160.951 37.7099 li
172.607 30.9816 li
173.606 30.4028 li
184.335 24.2084 li
201.801 34.2906 li
cp
.839216 .658824 .427451 rgb
f
184.063 120.878 mo
182.792 121.612 182.792 122.802 184.063 123.536 cv
191.273 127.699 li
192.544 128.433 194.605 128.433 195.877 127.699 cv
197.148 126.965 197.148 125.775 195.877 125.041 cv
188.667 120.878 li
187.395 120.144 185.334 120.144 184.063 120.878 cv
cp
.262745 .160784 .0941176 rgb
f
196.83 118.012 mo
189.97 119.586 li
185.869 118.502 183.109 119.796 183.109 122.14 cv
196.83 126.268 li
196.83 118.012 li
cp
f
198.745 112.324 mo
197.473 113.058 197.473 114.248 198.745 114.983 cv
205.955 119.145 li
207.226 119.879 209.287 119.879 210.558 119.145 cv
211.83 118.411 211.83 117.221 210.558 116.487 cv
203.349 112.324 li
202.077 111.59 200.016 111.59 198.745 112.324 cv
cp
f
211.512 109.458 mo
204.652 111.032 li
200.551 109.948 197.791 111.242 197.791 113.586 cv
211.512 117.714 li
211.512 109.458 li
cp
f
208.573 86.6359 mo
197.257 86.787 li
197.253 86.5373 li
197.079 73.5086 li
196.856 56.9851 li
208.17 56.8319 li
208.35 70.234 li
208.539 84.222 li
208.573 86.6359 li
0 .415686 .521569 rgb
f
202.34 110.605 mo
200.308 112.089 200.526 114.117 202.827 115.135 cv
205.128 116.154 208.641 115.776 210.673 114.293 cv
212.705 112.809 212.487 110.781 210.186 109.763 cv
207.885 108.745 204.373 109.122 202.34 110.605 cv
cp
f
212.055 111.853 mo
211.658 103.572 209.135 87.5361 208.572 86.6354 cv
207.933 85.6131 206.833 82.3434 205.791 81.736 cv
204.324 80.8804 202.622 80.1275 200.974 80.5375 cv
198.984 81.0323 197.499 84.5049 197.26 86.5412 cv
197.021 88.5775 200.532 111.909 200.959 113.045 cv
201.209 113.711 201.856 113.381 202.586 113.051 cv
203.1 112.819 203.656 112.586 204.144 112.703 cv
212.055 111.853 li
f
197.253 86.5373 mo
197.253 86.5373 li
197.079 73.5086 li
199.041 73.5065 201.006 72.82 202.523 71.5691 cv
199.589 75.2636 198.467 80.3756 197.444 85.5639 cv
197.368 85.8663 197.312 86.1558 197.275 86.4231 cv
197.268 86.4612 197.26 86.4992 197.253 86.5373 cv
.0235294 .356863 .439216 rgb
f
197.275 86.4231 mo
197.312 86.1558 197.368 85.8663 197.444 85.5639 cv
197.387 85.8503 197.331 86.1365 197.275 86.4231 cv
f
184.976 91.7681 mo
196.223 93.0101 li
199.495 63.3841 li
188.248 62.1421 li
184.976 91.7681 li
cp
0 .415686 .521569 rgb
f
188.066 117.836 mo
185.81 118.95 185.677 120.985 187.769 122.383 cv
189.861 123.78 193.387 124.011 195.643 122.898 cv
197.9 121.784 198.033 119.749 195.941 118.351 cv
193.849 116.954 190.323 116.723 188.066 117.836 cv
cp
f
197.423 120.731 mo
197.697 112.444 196.711 93.9534 196.223 93.0101 cv
195.669 91.9396 194.74 90.4081 193.751 89.7185 cv
192.358 88.7472 190.722 87.8592 189.046 88.1345 cv
187.023 88.467 185.357 89.9987 184.955 92.0091 cv
184.552 94.0196 185.953 118.836 186.287 120.003 cv
186.621 121.169 186.597 121.114 187.751 121.49 cv
197.423 120.731 li
cp
f
208.6 37.6497 mo
208.382 37.8783 208.158 38.0865 207.933 38.2948 cv
207.058 39.0928 206.103 39.7819 205.087 40.365 cv
203.403 41.332 201.57 42.0055 199.685 42.381 cv
198.745 42.5788 197.789 42.6968 196.836 42.7281 cv
192.617 42.9182 188.446 41.6252 185.564 38.7738 cv
185.192 35.834 184.944 33.6099 184.905 32.9071 cv
184.879 32.3709 184.854 31.8253 184.971 31.3009 cv
185.279 29.8954 186.891 28.5016 188.02 27.616 cv
188.109 27.5422 li
189.062 26.8043 190.072 26.1332 191.105 25.5042 cv
192.126 24.8927 193.18 24.3153 194.233 23.7473 cv
195.17 23.2394 196.038 22.8758 196.847 22.6392 cv
199.233 21.8937 201.114 22.1272 202.923 22.4564 cv
203.253 22.5156 203.583 22.5747 203.911 22.6433 cv
207.338 23.2828 208.177 26.9215 208.368 29.9019 cv
208.496 31.8275 208.569 34.5675 208.6 37.6497 cv
cp
.796078 .733333 .627451 rgb
f
208.6 37.6495 mo
202.341 42.6751 188.872 46.0392 185.247 36.2028 cv
186.222 43.9883 187.341 58.5805 188.02 64.0075 cv
189.733 65.4768 208.231 65.4758 208.326 63.0418 cv
208.398 61.1981 208.7 47.5989 208.6 37.6495 cv
cp
0 .415686 .521569 rgb
f
199.974 44.776 mo
197.114 45.0053 li
197.048 44.2793 196.96 43.5113 196.836 42.7281 cv
196.6 41.0765 196.252 39.3308 195.928 37.6177 cv
195.617 36.013 195.321 34.4977 195.102 33.052 cv
194.681 30.3082 192.356 28.5176 188.02 27.616 cv
188.109 27.5422 li
189.062 26.8043 190.072 26.1332 191.105 25.5042 cv
195.135 26.8923 197.423 29.2578 197.936 32.6154 cv
198.153 34.0029 198.442 35.4978 198.748 37.0727 cv
199.093 38.8374 199.442 40.6413 199.685 42.381 cv
199.814 43.194 199.906 44.0013 199.974 44.776 cv
cp
f
207.614 41.768 mo
205.032 42.0213 li
205.064 41.4842 204.753 31.3631 204.74 29.8998 cv
204.704 26.7783 202.094 24.5 196.753 22.9444 cv
196.847 22.6392 li
199.233 21.8937 201.114 22.1272 202.923 22.4564 cv
206.01 24.3321 207.582 26.8226 207.608 29.875 cv
207.62 31.28 207.693 40.5315 207.614 41.768 cv
cp
f
198.139 14.4111 mo
198.106 15.63 198.07 16.8549 197.826 18.0486 cv
197.583 19.2421 197.119 20.4148 196.317 21.3318 cv
195.412 22.3623 194.092 23.0015 192.729 23.1128 cv
192.302 23.1507 191.871 23.135 191.446 23.0621 cv
191.024 22.9891 190.603 22.8627 190.25 22.6176 cv
189.699 22.2384 189.375 21.6255 189.139 20.9878 cv
189.139 20.9838 li
189.086 20.8414 189.037 20.6992 188.992 20.557 cv
187.945 17.2788 187.705 13.787 187.832 10.347 cv
187.852 9.8381 187.879 9.32064 188.027 8.83057 cv
188.46 7.38416 189.907 6.39908 191.402 6.1734 cv
192.897 5.94804 194.421 6.36351 195.805 6.9732 cv
196.185 7.1418 196.565 7.32666 196.871 7.60774 cv
197.163 7.87486 197.377 8.21595 197.647 8.50626 cv
197.98 8.86246 198.19 12.5807 198.139 14.4111 cv
1 .807843 .631373 rgb
f
190.291 23.3938 mo
190.289 23.3426 li
190.291 23.3938 li
cp
f
192.28 23.1327 mo
192.001 23.1327 191.723 23.1096 191.446 23.0621 cv
191.024 22.9891 190.603 22.8627 190.25 22.6176 cv
189.699 22.2384 189.375 21.6255 189.139 20.9878 cv
189.139 20.9838 li
189.517 21.3304 189.857 21.5054 190.155 21.5054 cv
191 21.5054 191.521 20.109 191.69 17.2406 cv
191.705 17.3322 191.721 17.4173 191.739 17.497 cv
191.739 17.5015 191.739 17.506 191.739 17.5105 cv
191.739 17.9405 191.749 18.3605 191.779 18.7805 cv
191.789 18.9405 191.799 19.0905 191.819 19.2405 cv
191.939 20.2687 192.277 21.3266 192.935 22.1062 cv
192.935 22.2178 192.935 22.3295 192.935 22.4411 cv
192.935 22.599 192.936 22.763 192.874 22.9081 cv
192.729 23.1128 li
192.729 23.1128 li
192.58 23.126 192.43 23.1327 192.28 23.1327 cv
.909804 .737255 .576471 rgb
f
200.116 13.7311 mo
191.606 13.9528 li
191.893 24.9669 li
200.403 24.745 li
200.116 13.7311 li
cp
1 .807843 .631373 rgb
f
199.122 22.7308 mo
200.813 23.6492 200.854 25.2089 199.213 26.2143 cv
197.572 27.2195 194.871 27.2899 193.18 26.3715 cv
191.489 25.4529 191.448 23.8934 193.089 22.888 cv
194.73 21.8829 197.431 21.8125 199.122 22.7308 cv
cp
f
202.079 16.0505 mo
201.979 16.6405 201.839 17.2606 201.679 17.9105 cv
201.369 19.1405 200.939 20.4805 200.379 21.9505 cv
200.329 22.0605 li
200.149 22.4605 199.829 22.7305 199.429 22.9205 cv
198.679 23.2705 197.669 23.3406 196.829 23.3705 cv
195.809 23.4105 194.749 23.3806 193.859 22.8905 cv
193.739 22.8205 193.629 22.7505 193.519 22.6605 cv
193.299 22.5106 193.099 22.3206 192.939 22.1105 cv
192.279 21.3305 191.939 20.2706 191.819 19.2405 cv
191.799 19.0905 191.789 18.9405 191.779 18.7805 cv
191.749 18.3605 191.739 17.9405 191.739 17.5105 cv
191.739 16.6405 191.759 15.7705 191.659 14.9005 cv
191.629 14.6905 li
191.599 14.4905 191.569 14.3005 191.519 14.1105 cv
191.239 12.9805 190.649 11.9805 189.619 11.4205 cv
189.179 11.1805 188.149 10.9706 187.829 10.4606 cv
185.729 7.16047 190.859 4.36052 195.129 4.6205 cv
196.169 4.68052 203.989 5.31055 202.079 16.0505 cv
.235294 .235294 .231373 rgb
f
191.963 13.9439 mo
191.495 13.9695 191.165 14.4047 191.034 14.8214 cv
190.871 15.3414 190.897 15.888 190.923 16.4232 cv
190.957 17.1042 190.998 17.8112 191.35 18.4028 cv
191.444 18.5614 191.57 18.7168 191.755 18.7801 cv
192.032 18.8749 192.362 18.7254 192.541 18.5009 cv
192.721 18.2762 192.784 17.9947 192.832 17.7222 cv
192.97 16.9351 193.021 16.1375 192.984 15.346 cv
192.969 15.0292 192.937 14.7039 192.779 14.4259 cv
192.622 14.1478 192.31 13.925 191.963 13.9439 cv
cp
1 .807843 .631373 rgb
f
166.788 58.2134 mo
166.601 58.4856 166.413 58.759 166.263 59.0537 cv
166.074 59.4261 165.345 61.6517 165.216 62.0491 cv
165.003 62.71 165 63.7809 164.962 65.8655 cv
164.957 66.1277 165.068 66.4031 165.273 66.5674 cv
165.477 66.7315 165.854 66.6855 165.921 66.4322 cv
165.758 66.9481 165.968 67.5587 166.413 67.8661 cv
166.661 68.0375 167.091 68.0587 167.185 67.7721 cv
167.034 68.1051 167.282 68.5356 167.639 68.6168 cv
167.995 68.6979 168.38 68.4615 168.517 68.1225 cv
168.428 68.44 168.746 68.769 169.075 68.7704 cv
169.405 68.7718 169.695 68.5247 169.841 68.2293 cv
169.988 67.9339 170.018 67.5963 170.041 67.2674 cv
170.149 65.7006 169.947 64.7138 170.275 64.048 cv
170.422 63.7488 171.381 61.759 171.568 61.4826 cv
172.112 60.6752 171.965 61.0016 172.395 60.1279 cv
173.922 57.0264 170.415 53.4448 167.624 56.9783 cv
167.624 56.9783 167.382 57.3506 166.788 58.2134 cv
cp
f
164.155 61.3856 mo
164.348 61.7443 164.835 61.8517 165.227 61.7435 cv
165.62 61.6353 165.944 61.3652 166.266 61.1162 cv
166.566 60.8846 166.876 60.6657 167.194 60.46 cv
167.633 60.1763 168.096 59.9123 168.446 59.5237 cv
168.796 59.135 169.018 58.5844 168.867 58.0839 cv
168.752 57.7061 168.444 57.4136 168.099 57.221 cv
167.933 57.128 167.718 57.0568 167.562 57.1651 cv
167.406 57.3596 li
166.901 58.2208 166.315 59.0743 165.47 59.6063 cv
165.123 59.8252 164.733 59.9883 164.438 60.2735 cv
164.142 60.5587 163.96 61.0235 164.155 61.3856 cv
cp
f
192.429 34.8794 mo
191.234 37.1721 li
184.942 49.2436 li
184.676 49.7522 184.322 50.185 183.908 50.5311 cv
182.826 51.432 181.337 51.7515 179.958 51.3224 cv
179.72 51.2482 179.484 51.1507 179.255 51.0312 cv
178.152 50.4572 177.409 49.4611 177.122 48.3429 cv
176.87 47.37 176.965 46.3045 177.465 45.3456 cv
177.781 44.7385 li
178.196 43.944 li
183.117 34.5079 li
184.954 30.9821 li
185.91 29.147 188.03 28.3097 189.94 28.904 cv
190.177 28.9776 190.411 29.0724 190.64 29.1919 cv
192.705 30.2697 193.504 32.8156 192.429 34.8794 cv
cp
.796078 .733333 .627451 rgb
f
184.087 50.347 mo
183.908 50.5311 li
176.541 58.0873 li
175.211 59.4537 li
173.586 61.1224 172.394 61.6462 170.974 60.7274 cv
170.974 60.7274 165.35 57.2828 168.456 54.2858 cv
177.781 44.7385 li
178.044 44.4683 li
178.046 44.467 li
179.19 43.2907 180.854 42.9246 182.321 43.3811 cv
182.934 43.5719 183.513 43.9081 184.006 44.3868 cv
185.676 46.0096 185.711 48.6785 184.087 50.347 cv
cp
f
166.934 47.0805 mo
161.945 44.2004 li
161.945 40.2951 li
166.934 43.1752 li
166.934 47.0805 li
cp
.964706 .964706 .964706 rgb
f
202.079 16.0505 mo
201.979 16.6405 201.839 17.2605 201.679 17.9105 cv
201.209 18.1005 200.729 18.2305 200.239 18.3005 cv
199.859 18.3705 199.469 18.4005 199.089 18.4005 cv
198.689 18.4005 198.289 18.3705 197.899 18.3005 cv
197.779 18.2705 li
195.719 17.8805 193.899 16.5305 192.889 14.6905 cv
192.819 14.5705 192.759 14.4305 192.699 14.3005 cv
192.679 14.2705 li
193.489 13.9005 li
194.049 13.6505 li
194.169 13.8805 li
194.929 15.3605 196.379 16.4605 198.009 16.7905 cv
198.159 16.8205 li
198.839 16.9405 199.529 16.9305 200.199 16.7905 cv
200.869 16.6605 201.509 16.4105 202.079 16.0505 cv
cp
.854902 .854902 .854902 rgb
f
200.129 7.88693 mo
203.776 9.99243 204.374 13.061 201.464 14.7408 cv
198.555 16.4207 193.24 16.0756 189.593 13.9701 cv
185.947 11.8647 185.349 8.79605 188.259 7.1163 cv
191.168 5.43645 196.483 5.78153 200.129 7.88693 cv
.878431 .529412 0 rgb
f
196.743 15.0948 mo
194.34 15.0948 191.864 14.4603 189.948 13.3542 cv
188.181 12.3336 187.125 11.0215 187.125 9.8425 cv
187.125 8.80874 187.935 8.12415 188.614 7.73186 cv
189.697 7.10634 191.247 6.76262 192.98 6.76262 cv
195.382 6.76262 197.859 7.39654 199.774 8.50249 cv
201.542 9.52387 202.598 10.8367 202.598 12.0149 cv
202.597 13.0487 201.787 13.7327 201.108 14.1249 cv
200.025 14.7505 198.475 15.0948 196.743 15.0948 cv
.952941 .572549 0 rgb
f
202.58 11.7547 mo
202.471 12.6867 197.831 15.0536 197.831 15.0962 cv
197.831 15.0962 187.167 10.276 187.124 9.84932 cv
187.138 9.12423 187.154 8.44677 187.309 7.84454 cv
189.667 -1.31043 203.675 2.43956 202.58 11.7547 cv
f
195.636 15.2303 mo
195.987 15.4555 196.514 15.4612 197.163 15.3143 cv
197.164 13.5732 li
197.164 13.3689 197.057 13.2372 196.885 13.2277 cv
195.923 13.1748 li
195.732 13.2781 li
195.636 13.5004 li
195.636 15.2303 li
cp
.878431 .529412 0 rgb
f
188.172 12.1514 mo
188.428 12.5181 188.811 12.736 189.284 12.8505 cv
189.284 11.1095 li
189.284 10.9051 189.207 10.7307 189.081 10.6519 cv
188.381 10.2118 li
188.242 10.2378 li
188.172 10.4216 li
188.172 12.1514 li
cp
f
190.988 9.51 mo
190.988 9.80972 190.906 10.0527 190.804 10.0527 cv
190.703 10.0527 190.621 9.80972 190.621 9.51 cv
190.621 9.21028 190.703 8.96731 190.804 8.96731 cv
190.906 8.96731 190.988 9.21028 190.988 9.51 cv
cp
.235294 .235294 .231373 rgb
f
191.942 10.1967 mo
191.942 10.4964 191.86 10.7394 191.758 10.7394 cv
191.657 10.7394 191.575 10.4964 191.575 10.1967 cv
191.575 9.897 191.657 9.65403 191.758 9.65403 cv
191.86 9.65403 191.942 9.897 191.942 10.1967 cv
cp
f
192.896 10.8834 mo
192.896 11.1832 192.813 11.4261 192.712 11.4261 cv
192.611 11.4261 192.528 11.1832 192.528 10.8834 cv
192.528 10.5837 192.611 10.3407 192.712 10.3407 cv
192.813 10.3407 192.896 10.5837 192.896 10.8834 cv
cp
f
189.675 3.75199 mo
190.059 3.42506 190.601 3.15563 191.113 2.97077 cv
191.301 2.95415 191.49 2.94591 191.68 2.94578 cv
191.142 3.12198 190.628 3.36392 190.15 3.67525 cv
189.991 3.69506 189.832 3.72059 189.675 3.75199 cv
.909635 .909635 .908835 rgb
f
198.503 7.50198 mo
196.77 5.20407 193.799 3.62265 191.014 3.62265 cv
190.723 3.62265 190.435 3.63985 190.15 3.67525 cv
190.628 3.36392 191.142 3.12198 191.68 2.94578 cv
191.681 2.94578 191.683 2.94577 191.684 2.94577 cv
194.53 2.94577 197.537 4.76433 198.503 7.50198 cv
.866667 .52549 .0117647 rgb
f
199.775 4.68337 mo
198.96 4.00416 198.023 3.47671 197.035 3.12028 cv
196.66 2.89147 196.274 2.68646 195.876 2.5085 cv
196.057 2.54553 li
197.152 2.7987 198.112 3.21292 198.96 3.74947 cv
198.974 3.7523 li
199.261 4.04387 199.529 4.3555 199.775 4.68337 cv
.909635 .909635 .908835 rgb
f
200.874 6.59402 mo
199.731 5.21042 198.464 3.99247 197.035 3.12028 cv
198.023 3.47671 198.96 4.00416 199.775 4.68337 cv
200.219 5.27519 200.592 5.91982 200.874 6.59402 cv
.866667 .52549 .0117647 rgb
f
187.816 5.84574 mo
187.915 5.60401 188.203 5.27782 188.331 5.06452 cv
188.436 5.06039 188.539 5.0582 188.643 5.05789 cv
188.456 5.29495 188.283 5.54933 188.124 5.82291 cv
188.021 5.82851 187.919 5.8361 187.816 5.84574 cv
.909635 .909635 .908835 rgb
f
195.329 9.10293 mo
193.633 7.08392 191.165 5.81104 188.559 5.81104 cv
188.415 5.81104 188.27 5.81497 188.124 5.82291 cv
188.283 5.54933 188.456 5.29495 188.643 5.05789 cv
188.651 5.05786 188.659 5.05785 188.668 5.05785 cv
191.679 5.05785 194.231 6.67025 195.329 9.10293 cv
.866667 .52549 .0117647 rgb
f
345.953 388.755 mo
345.833 389.025 345.613 389.295 345.273 389.545 cv
345.143 389.625 li
345.013 389.715 344.873 389.795 344.723 389.865 cv
344.583 389.935 344.443 389.995 344.283 390.035 cv
343.183 390.435 341.813 390.445 340.833 390.015 cv
335.053 387.435 li
333.463 386.725 li
332.783 386.425 332.433 385.965 332.403 385.485 cv
332.233 383.855 333.503 382.605 335.743 382.275 cv
336.273 382.195 336.853 382.165 337.483 382.195 cv
337.663 382.205 li
338.013 382.225 338.373 382.265 338.753 382.325 cv
341.793 381.275 li
343.173 380.805 li
343.743 380.615 li
345.213 380.105 li
345.363 381.485 li
345.363 381.495 li
345.553 383.365 li
345.563 383.455 li
345.573 383.485 li
345.593 383.655 li
346.053 388.065 li
346.043 388.065 li
346.093 388.285 346.063 388.525 345.953 388.755 cv
.235294 .235294 .231373 rgb
f
348.523 362.545 mo
348.523 362.555 li
348.463 363.165 348.393 363.805 348.323 364.465 cv
348.293 364.655 348.273 364.855 348.253 365.055 cv
347.793 369.175 347.193 373.945 346.723 377.535 cv
346.573 378.625 346.433 379.615 346.313 380.435 cv
346.113 381.845 345.963 382.775 345.903 382.975 cv
345.903 382.985 li
345.843 383.165 345.723 383.285 345.553 383.365 cv
345.473 383.405 li
345.463 383.405 li
345.443 383.415 li
344.96 383.606 344.184 383.555 343.43 383.504 cv
342.764 383.458 342.116 383.413 341.703 383.535 cv
337.483 382.925 li
337.483 382.195 li
337.483 381.175 337.483 380.025 337.493 378.795 cv
337.503 377.115 337.523 375.265 337.553 373.385 cv
337.553 373.015 337.563 372.635 337.563 372.255 cv
337.573 371.725 337.583 371.195 337.593 370.665 cv
337.603 370.065 337.613 369.465 337.633 368.875 cv
337.673 366.795 337.733 364.785 337.793 363.025 cv
337.793 363.015 li
337.843 361.675 337.893 360.485 337.953 359.495 cv
338.043 357.895 338.143 356.835 338.253 356.635 cv
338.803 355.635 339.743 354.455 340.693 353.835 cv
342.043 352.945 343.653 353.285 345.233 353.585 cv
345.973 353.725 346.663 353.875 347.233 354.105 cv
348.133 354.475 348.773 355.055 348.973 356.225 cv
348.983 356.295 348.993 356.395 348.993 356.525 cv
349.023 357.425 348.823 359.695 348.523 362.545 cv
0 .364706 .458824 rgb
f
345.903 382.975 mo
345.893 383.015 li
345.853 383.185 345.783 383.355 345.673 383.525 cv
345.673 383.535 li
345.663 383.535 li
345.593 383.655 li
345.463 383.835 345.293 384.015 345.093 384.175 cv
344.993 384.255 344.883 384.335 344.763 384.415 cv
344.613 384.505 344.463 384.585 344.313 384.655 cv
344.163 384.735 344.003 384.795 343.833 384.855 cv
342.253 385.435 340.183 385.375 338.783 384.645 cv
338.503 384.495 338.253 384.315 338.063 384.135 cv
337.683 383.765 337.493 383.355 337.483 382.925 cv
337.483 382.915 li
337.483 382.675 337.543 382.435 337.663 382.205 cv
337.853 381.845 338.183 381.495 338.653 381.195 cv
339.163 380.875 339.793 380.645 340.463 380.515 cv
341.383 380.315 342.383 380.315 343.283 380.505 cv
343.443 380.535 343.593 380.565 343.743 380.615 cv
344.063 380.705 344.353 380.825 344.623 380.965 cv
344.923 381.125 345.163 381.295 345.363 381.485 cv
345.363 381.495 li
345.823 381.935 346.003 382.455 345.903 382.975 cv
f
337.578 361.11 mo
343.682 364.835 li
348.002 364.449 li
367.302 374.982 li
368.698 374.169 372.469 363.683 372.469 363.683 cv
369.478 365.274 362.654 361.869 356.154 358.463 cv
350.207 355.347 344.531 352.231 342.311 352.942 cv
337.21 354.577 337.493 357.991 337.578 361.11 cv
0 .415686 .521569 rgb
f
334.603 396.315 mo
334.703 396.805 334.453 397.345 333.843 397.785 cv
332.693 398.625 330.703 398.835 329.403 398.255 cv
326.633 397.025 li
326.603 397.005 li
324.233 395.955 li
322.033 394.975 li
321.873 394.895 li
321.293 394.595 320.993 394.175 320.973 393.725 cv
320.883 392.845 321.203 392.075 321.873 391.505 cv
322.433 391.025 323.233 390.685 324.233 390.535 cv
324.783 390.435 325.393 390.405 326.053 390.435 cv
326.233 390.445 li
326.353 390.455 326.473 390.465 326.603 390.475 cv
326.623 390.475 li
326.853 390.495 327.083 390.525 327.323 390.565 cv
332.293 388.865 li
333.773 388.355 li
333.913 389.725 li
334.113 391.615 li
334.153 391.915 li
334.613 396.315 li
334.603 396.315 li
.235294 .235294 .231373 rgb
f
337.253 369.085 mo
337.253 369.095 li
337.203 369.685 337.133 370.315 337.063 370.965 cv
337.063 370.975 li
337.043 371.285 337.003 371.595 336.973 371.915 cv
336.933 372.215 336.903 372.515 336.863 372.825 cv
336.863 372.835 li
336.693 374.465 336.483 376.205 336.283 377.945 cv
336.283 377.955 li
336.103 379.425 335.923 380.875 335.743 382.275 cv
335.493 384.195 335.263 385.975 335.053 387.435 cv
334.763 389.525 334.543 390.965 334.463 391.215 cv
334.463 391.225 li
334.453 391.255 li
334.383 391.415 334.273 391.535 334.113 391.615 cv
333.644 391.861 332.817 391.805 332.013 391.75 cv
331.344 391.704 330.691 391.658 330.273 391.785 cv
326.623 391.255 li
326.603 391.255 li
326.053 391.175 li
326.053 390.435 li
326.033 384.845 326.173 375.345 326.423 369.625 cv
326.423 369.615 li
326.493 368.125 326.563 366.885 326.643 366.055 cv
326.693 365.415 326.753 365.005 326.823 364.885 cv
327.373 363.885 328.303 362.705 329.263 362.075 cv
330.603 361.195 332.183 360.395 333.763 360.695 cv
334.233 360.785 334.673 360.945 335.083 361.165 cv
336.013 361.645 336.763 362.415 337.193 363.365 cv
337.193 363.375 li
337.353 363.725 337.473 364.085 337.533 364.475 cv
337.613 364.945 337.493 366.685 337.253 369.085 cv
0 .415686 .521569 rgb
f
334.463 391.215 mo
334.463 391.225 li
334.453 391.255 li
334.413 391.475 334.313 391.705 334.153 391.915 cv
334.023 392.095 333.853 392.265 333.653 392.415 cv
333.553 392.505 333.443 392.585 333.323 392.665 cv
333.183 392.755 333.033 392.835 332.873 392.905 cv
332.723 392.975 332.573 393.045 332.403 393.105 cv
330.813 393.685 328.743 393.625 327.353 392.885 cv
327.063 392.735 326.823 392.565 326.633 392.375 cv
326.623 392.365 li
326.603 392.345 li
326.233 391.995 326.053 391.585 326.053 391.175 cv
326.053 391.155 li
326.053 390.915 326.113 390.685 326.233 390.445 cv
326.323 390.275 326.443 390.115 326.603 389.955 cv
326.623 389.925 li
326.783 389.755 326.983 389.595 327.223 389.445 cv
328.573 388.595 330.663 388.385 332.293 388.865 cv
332.613 388.955 332.923 389.065 333.193 389.215 cv
333.483 389.365 333.723 389.535 333.913 389.725 cv
334.383 390.175 334.563 390.695 334.463 391.215 cv
f
369.006 394.989 mo
369.006 395.728 369.605 396.327 370.344 396.327 cv
371.083 396.327 371.682 395.728 371.682 394.989 cv
371.682 394.25 371.083 393.651 370.344 393.651 cv
369.605 393.651 369.006 394.25 369.006 394.989 cv
cp
.235294 .235294 .231373 rgb
f
372.154 408.526 mo
372.154 409.265 372.753 409.864 373.492 409.864 cv
374.231 409.864 374.83 409.265 374.83 408.526 cv
374.83 407.787 374.231 407.188 373.492 407.188 cv
372.753 407.188 372.154 407.787 372.154 408.526 cv
cp
f
350.615 414.744 mo
350.615 415.483 351.214 416.082 351.953 416.082 cv
352.692 416.082 353.291 415.483 353.291 414.744 cv
353.291 414.005 352.692 413.406 351.953 413.406 cv
351.214 413.406 350.615 414.005 350.615 414.744 cv
cp
f
334.46 405.142 mo
334.46 405.881 335.059 406.48 335.798 406.48 cv
336.537 406.48 337.136 405.881 337.136 405.142 cv
337.136 404.403 336.537 403.804 335.798 403.804 cv
335.059 403.804 334.46 404.403 334.46 405.142 cv
cp
f
347.053 392.125 mo
347.053 392.395 346.973 392.645 346.833 392.855 cv
346.633 393.165 346.313 393.385 345.943 393.435 cv
345.713 393.465 li
345.193 393.465 344.743 393.175 344.533 392.735 cv
344.423 392.555 344.373 392.345 344.373 392.125 cv
344.373 391.885 344.433 391.655 344.553 391.465 cv
344.733 391.145 345.033 390.905 345.403 390.825 cv
345.503 390.795 345.603 390.785 345.713 390.785 cv
346.153 390.785 346.543 390.995 346.783 391.325 cv
346.953 391.545 347.053 391.825 347.053 392.125 cv
f
375.173 404.915 mo
375.173 406.755 li
374.443 407.575 li
373.913 408.185 li
372.363 407.815 li
357.533 404.325 li
353.313 414.245 li
353.183 414.235 li
350.833 414.015 li
350.573 413.995 li
350.573 412.155 li
351.863 403.815 li
351.623 403.825 li
336.923 404.445 li
334.623 404.535 li
334.223 404.555 li
333.793 402.975 li
333.793 401.135 li
350.963 400.535 li
349.783 398.865 li
345.943 393.435 li
345.163 392.335 li
344.553 391.465 li
344.283 391.085 li
344.283 389.245 li
345.143 389.625 li
346.763 390.355 li
347.403 390.945 li
352.763 395.945 li
355.483 398.475 li
356.083 399.035 li
356.763 398.705 li
357.923 398.135 li
369.593 392.445 li
371.553 391.735 li
371.553 393.575 li
371.093 393.885 li
369.043 395.295 li
361.913 400.165 li
360.143 401.375 li
375.173 404.915 li
.341176 .341176 .337255 rgb
f
375.173 404.915 mo
373.913 406.345 li
357.533 402.485 li
353.313 412.405 li
350.573 412.155 li
351.623 403.825 li
351.863 401.965 li
334.223 402.715 li
333.793 401.135 li
349.783 398.865 li
350.963 398.695 li
346.833 392.855 li
346.073 391.775 li
345.403 390.825 li
344.723 389.865 li
344.283 389.245 li
345.953 388.755 li
346.763 388.515 li
348.583 390.215 li
352.763 394.105 li
356.083 397.195 li
357.923 396.295 li
369.593 390.605 li
371.553 391.735 li
360.143 399.535 li
361.913 400.165 li
375.173 404.915 li
.529412 .529412 .529412 rgb
f
353.515 398.893 mo
352.506 399.475 352.506 400.419 353.515 401.002 cv
354.524 401.584 356.159 401.584 357.168 401.002 cv
358.177 400.419 358.177 399.475 357.168 398.893 cv
356.159 398.31 354.524 398.31 353.515 398.893 cv
cp
.341176 .341176 .337255 rgb
f
352.759 383.314 mo
357.925 383.314 li
357.925 399.947 li
352.759 399.947 li
352.759 383.314 li
cp
f
358.605 390.327 mo
377.331 379.479 li
354.398 360.949 li
335.601 371.818 li
358.605 390.327 li
.235294 .235294 .231373 rgb
f
359.043 389.205 mo
359.043 389.265 li
359.043 389.735 358.893 390.095 358.653 390.295 cv
358.603 390.325 li
358.423 390.465 358.183 390.515 357.923 390.475 cv
357.743 390.445 357.543 390.375 357.333 390.255 cv
352.763 387.615 li
352.753 387.615 li
352.743 387.605 li
345.673 383.525 li
345.563 383.455 li
345.473 383.405 li
345.463 383.405 li
344.553 382.875 li
344.503 382.845 li
344.013 382.565 343.453 382.245 342.803 381.865 cv
341.793 381.275 li
340.463 380.515 li
337.493 378.795 li
336.903 378.455 li
336.683 378.325 336.473 378.165 336.283 377.955 cv
336.283 377.945 li
335.643 377.315 335.193 376.335 335.193 375.505 cv
335.193 372.855 li
335.193 372.365 335.343 372.005 335.603 371.815 cv
335.773 371.715 li
335.803 371.695 li
335.823 371.685 li
336.123 371.585 336.493 371.645 336.903 371.875 cv
336.973 371.915 li
337.563 372.255 li
344.673 376.355 li
346.723 377.535 li
355.103 382.375 li
355.533 382.625 355.943 382.945 356.333 383.315 cv
356.943 383.895 357.483 384.615 357.923 385.385 cv
358.613 386.605 359.043 387.965 359.043 389.205 cv
.439216 .435294 .435294 rgb
f
326.654 367.626 mo
332.758 371.351 li
337.078 370.965 li
357.925 378.73 li
359.32 377.917 363.225 365.734 363.225 365.734 cv
360.385 367.245 354.28 364.901 347.981 362.557 cv
341.576 360.174 334.97 357.79 331.387 359.458 cv
326.697 361.642 326.569 364.507 326.654 367.626 cv
0 .415686 .521569 rgb
f
294.157 390.524 mo
291.793 389.16 li
291.794 352.124 li
294.157 353.489 li
294.157 390.524 li
cp
.537255 .494118 .415686 rgb
f
296.521 389.16 mo
294.157 390.524 li
294.157 353.489 li
296.521 352.124 li
296.521 389.16 li
cp
.431373 .392157 .317647 rgb
f
366.358 383.257 mo
363.994 381.893 li
363.995 344.858 li
366.358 346.222 li
366.358 383.257 li
cp
.537255 .494118 .415686 rgb
f
368.722 381.893 mo
366.358 383.257 li
366.358 346.222 li
368.722 344.858 li
368.722 381.893 li
cp
.431373 .392157 .317647 rgb
f
370.254 340.754 mo
324.235 367.451 li
290.581 348.02 li
336.6 321.323 li
370.254 340.754 li
.419608 .376471 .298039 rgb
f
324.235 370.89 mo
290.58 351.46 li
290.581 348.021 li
324.235 367.451 li
324.235 370.89 li
cp
.603922 .556863 .478431 rgb
f
370.254 344.193 mo
324.235 370.89 li
324.235 367.451 li
370.254 340.755 li
370.254 344.193 li
.498039 .454902 .376471 rgb
f
324.235 370.89 mo
290.58 351.46 li
290.581 348.021 li
324.235 367.451 li
324.235 370.89 li
cp
.603922 .556863 .478431 rgb
f
324.235 370.892 mo
324.235 376.643 li
324.235 376.643 li
324.235 370.892 li
cp
.537255 .494118 .415686 rgb
f
295.048 354.041 mo
295.048 359.792 li
321.871 375.278 li
321.871 369.527 li
295.048 354.041 li
cp
.478431 .439216 .368627 rgb
f
365.787 346.773 mo
365.787 352.524 li
326.598 375.276 li
326.598 369.525 li
365.787 346.773 li
.419608 .376471 .298039 rgb
f
324.235 370.89 mo
321.871 369.525 li
321.871 369.527 li
321.871 375.278 li
321.871 406.561 li
324.235 407.925 li
324.235 376.643 li
324.235 370.892 li
324.235 370.89 li
cp
.537255 .494118 .415686 rgb
f
326.598 369.525 mo
324.235 370.89 li
324.235 370.892 li
324.235 376.643 li
324.235 407.925 li
326.599 406.561 li
326.598 378.007 li
326.598 372.256 li
326.598 369.525 li
.431373 .392157 .317647 rgb
f
344.656 341.246 mo
328.677 350.472 li
328.319 350.678 327.739 350.678 327.382 350.472 cv
317.289 344.645 li
317.129 344.552 317.045 344.434 317.028 344.313 cv
317.021 344.308 li
317.021 345.221 li
317.021 345.356 317.111 345.492 317.289 345.595 cv
319.341 346.779 li
319.618 346.966 li
319.618 346.94 li
327.382 351.422 li
327.56 351.525 327.795 351.577 328.029 351.577 cv
328.264 351.577 328.498 351.525 328.677 351.422 cv
344.656 342.196 li
344.837 342.092 344.925 341.954 344.923 341.818 cv
344.924 341.818 li
344.924 340.872 li
344.924 341.007 344.834 341.143 344.656 341.246 cv
cp
.341176 .341176 .337255 rgb
f
339.756 339.432 mo
337.682 340.629 li
336.403 341.368 li
336.184 341.494 li
335.788 341.723 li
334.752 342.321 li
334.617 342.399 li
334.529 342.45 li
332.918 343.38 li
332.831 343.43 li
332.722 343.493 li
329.041 345.618 li
327.474 346.523 li
325.688 347.554 li
319.784 344.146 li
319.784 343.725 li
321.351 342.82 li
321.569 342.694 li
323.137 341.789 li
323.355 341.663 li
324.923 340.758 li
325.141 340.631 li
325.141 340.631 li
326.708 339.727 li
326.962 339.58 li
328.494 338.695 li
328.713 338.569 li
330.28 337.664 li
330.499 337.538 li
332.066 336.633 li
332.285 336.507 li
333.852 335.602 li
335.383 336.486 li
336.913 337.37 li
337.241 337.559 li
338.204 338.115 li
338.444 338.254 li
339.756 339.011 li
339.756 339.432 li
cp
333.685 346.653 mo
331.156 345.193 li
335.513 342.677 li
338.042 344.138 li
333.685 346.653 li
cp
317.289 344.645 mo
327.382 350.472 li
327.739 350.678 328.319 350.678 328.677 350.472 cv
344.656 341.246 li
344.834 341.143 344.924 341.007 344.924 340.872 cv
344.924 340.737 344.835 340.601 344.656 340.498 cv
334.563 334.671 li
334.206 334.465 333.626 334.465 333.268 334.671 cv
333.187 334.718 li
333.4 334.49 li
333.331 334.583 333.252 334.667 333.168 334.736 cv
333.037 334.826 li
331.234 335.868 li
331.337 336.047 li
329.703 336.99 li
329.6 336.811 li
321.453 341.514 li
321.569 341.716 li
319.935 342.659 li
319.819 342.458 li
317.16 343.993 li
317.038 344.17 li
317.028 344.313 li
317.045 344.434 317.129 344.552 317.289 344.645 cv
cp
.929412 .929412 .929412 rgb
f
331.156 345.193 mo
333.685 346.653 li
338.042 344.138 li
335.513 342.677 li
331.156 345.193 li
cp
.341176 .341176 .337255 rgb
f
335.036 341.736 mo
334.617 341.978 li
334.398 342.104 li
332.831 343.009 li
332.613 343.135 li
331.046 344.04 li
329.26 345.071 li
327.948 344.314 li
329.733 343.283 li
331.301 342.378 li
331.519 342.252 li
333.086 341.347 li
333.305 341.221 li
333.724 340.979 li
334.872 340.316 li
336.184 341.073 li
335.036 341.736 li
cp
327.474 346.102 mo
326.162 345.345 li
327.729 344.44 li
329.041 345.198 li
327.474 346.102 li
cp
325.688 347.134 mo
324.376 346.376 li
325.943 345.471 li
327.255 346.229 li
325.688 347.134 li
cp
322.882 343.704 mo
324.194 344.461 li
322.626 345.366 li
321.314 344.608 li
322.882 343.704 li
cp
324.667 342.673 mo
325.979 343.43 li
324.412 344.335 li
323.1 343.577 li
324.667 342.673 li
cp
326.453 341.641 mo
327.765 342.399 li
326.198 343.304 li
324.886 342.546 li
326.453 341.641 li
cp
328.239 340.61 mo
329.551 341.368 li
327.984 342.273 li
326.672 341.515 li
328.239 340.61 li
cp
330.025 339.579 mo
331.337 340.337 li
329.77 341.242 li
328.458 340.484 li
330.025 339.579 li
cp
331.811 338.548 mo
333.123 339.306 li
331.556 340.21 li
330.244 339.453 li
331.811 338.548 li
cp
333.597 337.517 mo
334.909 338.275 li
333.342 339.179 li
332.03 338.422 li
333.597 337.517 li
cp
324.157 346.25 mo
322.845 345.492 li
324.412 344.587 li
325.724 345.345 li
324.157 346.25 li
cp
325.943 345.219 mo
324.631 344.461 li
326.198 343.556 li
327.51 344.314 li
325.943 345.219 li
cp
327.729 344.188 mo
326.417 343.43 li
327.984 342.525 li
329.296 343.283 li
327.729 344.188 li
cp
329.515 343.156 mo
328.203 342.399 li
329.77 341.494 li
331.082 342.252 li
329.515 343.156 li
cp
331.301 342.125 mo
329.989 341.368 li
331.556 340.463 li
332.868 341.221 li
331.301 342.125 li
cp
334.654 340.19 mo
333.086 341.094 li
331.774 340.337 li
333.342 339.432 li
334.654 340.19 li
cp
336.658 339.285 mo
337.97 340.042 li
336.403 340.947 li
335.091 340.19 li
336.658 339.285 li
cp
338.189 339.916 mo
336.877 339.158 li
338.444 338.254 li
338.204 338.115 li
338.225 338.127 li
337.096 338.78 li
336.658 339.032 li
334.872 340.063 li
333.56 339.306 li
335.346 338.275 li
333.815 337.391 li
335.383 336.486 li
333.852 335.602 li
335.164 336.36 li
333.597 337.265 li
332.285 336.507 li
332.066 336.633 li
333.378 337.391 li
331.811 338.296 li
330.499 337.538 li
330.28 337.664 li
331.592 338.422 li
330.025 339.327 li
328.713 338.569 li
328.494 338.695 li
329.806 339.453 li
328.239 340.358 li
326.927 339.6 li
326.962 339.58 li
326.708 339.727 li
328.02 340.484 li
326.453 341.389 li
325.141 340.631 li
324.923 340.758 li
326.235 341.515 li
324.667 342.42 li
323.355 341.663 li
323.137 341.789 li
324.449 342.546 li
322.882 343.451 li
321.569 342.694 li
321.351 342.82 li
322.663 343.577 li
321.096 344.482 li
319.784 343.725 li
319.784 344.146 li
325.688 347.554 li
327.474 346.523 li
329.041 345.618 li
332.722 343.493 li
332.831 343.43 li
332.918 343.38 li
334.529 342.45 li
334.617 342.399 li
334.752 342.321 li
335.788 341.723 li
336.184 341.494 li
336.403 341.368 li
337.682 340.629 li
339.756 339.432 li
339.756 339.011 li
338.189 339.916 li
cp
f
321.096 344.482 mo
322.663 343.577 li
321.351 342.82 li
319.784 343.725 li
321.096 344.482 li
cp
.776471 .776471 .776471 rgb
f
322.882 343.451 mo
324.449 342.546 li
323.137 341.789 li
321.569 342.694 li
322.882 343.451 li
cp
f
324.667 342.42 mo
326.235 341.515 li
324.923 340.758 li
323.355 341.663 li
324.667 342.42 li
cp
f
326.453 341.389 mo
328.02 340.484 li
326.708 339.727 li
325.141 340.631 li
325.141 340.631 li
326.453 341.389 li
cp
f
328.239 340.358 mo
329.806 339.453 li
328.494 338.695 li
326.962 339.58 li
326.927 339.6 li
328.239 340.358 li
cp
f
330.025 339.327 mo
331.592 338.422 li
330.28 337.664 li
328.713 338.569 li
330.025 339.327 li
cp
f
331.811 338.296 mo
333.378 337.391 li
332.066 336.633 li
330.499 337.538 li
331.811 338.296 li
cp
f
333.597 337.265 mo
335.164 336.36 li
333.852 335.602 li
332.285 336.507 li
333.597 337.265 li
cp
f
322.626 345.366 mo
324.194 344.461 li
322.882 343.704 li
321.314 344.608 li
322.626 345.366 li
cp
f
324.412 344.335 mo
325.979 343.43 li
324.667 342.673 li
323.1 343.577 li
324.412 344.335 li
cp
f
326.198 343.304 mo
327.765 342.399 li
326.453 341.641 li
324.886 342.546 li
326.198 343.304 li
cp
f
327.984 342.273 mo
329.551 341.368 li
328.239 340.61 li
326.672 341.515 li
327.984 342.273 li
cp
f
329.77 341.242 mo
331.337 340.337 li
330.025 339.579 li
328.458 340.484 li
329.77 341.242 li
cp
f
331.556 340.21 mo
333.123 339.306 li
331.811 338.548 li
330.244 339.453 li
331.556 340.21 li
cp
f
333.342 339.179 mo
334.909 338.275 li
333.597 337.517 li
332.03 338.422 li
333.342 339.179 li
cp
f
324.412 344.587 mo
322.845 345.492 li
324.157 346.25 li
325.724 345.345 li
324.412 344.587 li
cp
f
326.198 343.556 mo
324.631 344.461 li
325.943 345.219 li
327.51 344.314 li
326.198 343.556 li
cp
f
327.984 342.525 mo
326.417 343.43 li
327.729 344.188 li
329.296 343.283 li
327.984 342.525 li
cp
f
329.77 341.494 mo
328.203 342.399 li
329.515 343.156 li
331.082 342.252 li
329.77 341.494 li
cp
f
331.556 340.463 mo
329.989 341.368 li
331.301 342.125 li
332.868 341.221 li
331.556 340.463 li
cp
f
331.774 340.337 mo
333.086 341.094 li
334.654 340.19 li
333.342 339.432 li
331.774 340.337 li
cp
f
333.815 337.391 mo
335.346 338.275 li
333.56 339.306 li
334.872 340.063 li
336.658 339.032 li
337.096 338.78 li
338.225 338.127 li
338.204 338.115 li
337.241 337.559 li
336.913 337.37 li
335.383 336.486 li
333.815 337.391 li
cp
f
325.943 345.471 mo
324.376 346.376 li
325.688 347.134 li
327.255 346.229 li
325.943 345.471 li
cp
f
329.041 345.198 mo
327.729 344.44 li
326.162 345.345 li
327.474 346.102 li
329.041 345.198 li
cp
f
334.872 340.316 mo
333.724 340.979 li
333.305 341.221 li
333.086 341.347 li
331.519 342.252 li
331.301 342.378 li
329.733 343.283 li
327.948 344.314 li
329.26 345.071 li
331.046 344.04 li
332.613 343.135 li
332.831 343.009 li
334.398 342.104 li
334.617 341.978 li
335.036 341.736 li
336.184 341.073 li
334.872 340.316 li
cp
f
336.403 340.947 mo
337.97 340.042 li
336.658 339.285 li
335.091 340.19 li
336.403 340.947 li
cp
f
338.444 338.254 mo
336.877 339.158 li
338.189 339.916 li
339.756 339.011 li
338.444 338.254 li
cp
f
316.411 343.678 mo
316.411 332.024 li
316.411 331.921 316.429 331.812 316.462 331.704 cv
316.527 331.487 316.651 331.272 316.806 331.107 cv
317.058 330.902 li
333.037 321.677 li
333.171 321.6 333.296 321.575 333.399 321.596 cv
333.49 321.63 li
332.754 321.201 li
332.752 321.203 li
332.633 321.12 332.464 321.122 332.274 321.232 cv
316.295 330.457 li
315.982 330.637 315.72 331.045 315.66 331.42 cv
315.647 331.578 li
315.647 341.578 li
315.647 341.578 li
315.647 341.58 li
315.647 343.232 li
315.647 343.387 315.688 343.507 315.758 343.586 cv
315.837 343.651 li
316.589 344.089 li
316.589 344.088 li
316.479 344.017 316.411 343.877 316.411 343.678 cv
.341176 .341176 .337255 rgb
f
333.511 321.642 mo
333.5 321.636 li
333.508 321.643 li
333.511 321.642 li
cp
f
333.672 333.863 mo
333.655 333.97 333.621 334.08 333.574 334.187 cv
333.621 334.08 333.655 333.97 333.672 333.863 cv
cp
.929412 .929412 .929412 rgb
f
316.806 331.107 mo
316.651 331.272 316.527 331.487 316.462 331.704 cv
316.527 331.487 316.651 331.272 316.806 331.107 cv
cp
f
317.636 331.686 mo
332.459 323.128 li
332.664 323.01 332.829 323.106 332.829 323.341 cv
332.829 333.403 li
332.829 333.639 332.664 333.925 332.46 334.043 cv
317.636 342.601 li
317.432 342.719 317.267 342.623 317.267 342.388 cv
317.267 332.326 li
317.267 332.09 317.432 331.804 317.636 331.686 cv
325.048 326.598 mo
325.177 326.524 325.281 326.584 325.281 326.733 cv
325.281 326.882 325.177 327.063 325.048 327.137 cv
324.919 327.212 324.814 327.151 324.814 327.002 cv
324.814 326.854 324.919 326.673 325.048 326.598 cv
319.819 342.458 mo
319.73 342.304 li
321.364 341.36 li
321.453 341.514 li
329.6 336.811 li
329.498 336.635 li
331.132 335.691 li
331.234 335.868 li
333.037 334.826 li
333.168 334.736 li
333.252 334.667 333.331 334.583 333.4 334.49 cv
333.469 334.396 333.528 334.293 333.574 334.187 cv
333.621 334.08 333.655 333.97 333.672 333.863 cv
333.685 333.705 li
333.685 322.051 li
333.672 321.908 li
333.647 321.784 333.589 321.695 333.508 321.643 cv
333.5 321.636 li
333.49 321.63 li
333.399 321.596 li
333.296 321.575 333.171 321.6 333.037 321.677 cv
317.058 330.902 li
316.806 331.107 li
316.651 331.272 316.527 331.487 316.462 331.704 cv
316.429 331.812 316.411 331.921 316.411 332.024 cv
316.411 343.678 li
316.411 343.877 316.479 344.017 316.589 344.088 cv
316.707 344.163 316.873 344.159 317.058 344.052 cv
317.16 343.993 li
319.819 342.458 li
.854902 .854902 .854902 rgb
f
319.591 332.41 mo
329.614 326.623 li
329.614 326.623 li
330.504 326.109 li
330.504 333.319 li
319.591 339.62 li
319.591 336.341 li
319.591 336.093 li
319.591 333.42 li
319.591 333.42 li
319.591 332.41 li
cp
317.636 342.601 mo
332.46 334.043 li
332.664 333.925 332.829 333.639 332.829 333.403 cv
332.829 323.341 li
332.829 323.106 332.664 323.01 332.459 323.128 cv
317.636 331.686 li
317.432 331.804 317.267 332.09 317.267 332.326 cv
317.267 342.388 li
317.267 342.623 317.432 342.719 317.636 342.601 cv
cp
.160784 .415686 .682353 rgb
f
325.048 327.137 mo
325.177 327.063 325.281 326.882 325.281 326.733 cv
325.281 326.584 325.177 326.524 325.048 326.598 cv
324.919 326.673 324.814 326.854 324.814 327.002 cv
324.814 327.151 324.919 327.212 325.048 327.137 cv
cp
.341176 .341176 .337255 rgb
f
323.978 334.74 mo
323.978 334.538 li
329.814 331.169 li
329.814 331.371 li
323.978 334.74 li
cp
329.814 332.09 mo
325.223 334.74 li
325.223 334.538 li
329.814 331.887 li
329.814 332.09 li
cp
329.814 332.808 mo
325.67 335.201 li
325.67 334.998 li
329.814 332.606 li
329.814 332.808 li
cp
324.445 331.27 mo
320.301 333.662 li
320.301 333.46 li
324.445 331.068 li
324.445 331.27 li
cp
324.445 331.988 mo
320.301 334.381 li
320.301 334.178 li
324.445 331.786 li
324.445 331.988 li
cp
324.445 332.707 mo
320.301 335.099 li
320.301 334.897 li
324.445 332.505 li
324.445 332.707 li
cp
329.614 327.634 mo
329.614 327.634 li
319.591 333.42 li
319.591 336.093 li
330.504 329.792 li
330.504 330.04 li
319.591 336.341 li
319.591 339.62 li
330.504 333.319 li
330.504 326.109 li
330.504 327.12 li
329.614 327.634 li
cp
.964706 .964706 .964706 rgb
f
329.614 327.634 mo
329.614 326.623 li
319.591 332.41 li
319.591 333.42 li
319.591 333.42 li
329.614 327.634 li
cp
.211765 .662745 .882353 rgb
f
330.504 329.792 mo
319.591 336.093 li
319.591 336.341 li
330.504 330.04 li
330.504 329.792 li
cp
f
329.614 327.634 mo
330.504 327.12 li
330.504 326.109 li
329.614 326.623 li
329.614 326.623 li
329.614 327.634 li
cp
1 .372549 .341176 rgb
f
320.301 333.662 mo
324.445 331.27 li
324.445 331.068 li
320.301 333.46 li
320.301 333.662 li
cp
.341176 .341176 .337255 rgb
f
320.301 334.381 mo
324.445 331.988 li
324.445 331.786 li
320.301 334.178 li
320.301 334.381 li
cp
f
320.301 335.099 mo
324.445 332.707 li
324.445 332.505 li
320.301 334.897 li
320.301 335.099 li
cp
f
323.978 334.538 mo
323.978 334.74 li
329.814 331.371 li
329.814 331.169 li
323.978 334.538 li
cp
f
325.223 334.74 mo
329.814 332.09 li
329.814 331.887 li
325.223 334.538 li
325.223 334.74 li
cp
f
325.67 335.201 mo
329.814 332.808 li
329.814 332.606 li
325.67 334.998 li
325.67 335.201 li
cp
f
321.364 341.36 mo
319.73 342.304 li
319.819 342.458 li
319.935 342.659 li
321.569 341.716 li
321.453 341.514 li
321.364 341.36 li
cp
f
331.132 335.691 mo
329.498 336.635 li
329.6 336.811 li
329.703 336.99 li
331.337 336.047 li
331.234 335.868 li
331.132 335.691 li
cp
f
332.176 348.051 mo
331.552 348.904 330.33 349.124 329.301 348.88 cv
328.272 348.636 327.378 348.023 326.479 347.467 cv
325.579 346.911 325.315 346.776 324.305 346.464 cv
323.791 346.305 323.561 346.31 323.076 346.197 cv
322.56 346.077 322.194 345.18 323.114 345.215 cv
321.484 344.874 321.845 343.826 322.405 343.867 cv
321.832 343.645 321.913 342.586 322.868 342.703 cv
322.118 342.473 322.562 341.869 323.285 341.817 cv
325.713 341.641 328.198 342.202 330.269 343.483 cv
331.06 343.971 331.811 344.582 332.243 345.406 cv
332.674 346.229 332.725 347.301 332.176 348.051 cv
cp
1 .807843 .631373 rgb
f
327.78 340.493 mo
327.641 340.264 327.382 340.077 327.116 340.098 cv
326.806 340.122 326.617 340.459 326.566 340.766 cv
326.442 341.519 327.29 342.497 327.851 343.015 cv
328.411 343.534 328.663 343.631 329.386 343.877 cv
330.109 344.124 330.853 344.324 331.53 344.678 cv
329.903 343.285 328.624 341.89 327.78 340.493 cv
cp
f
339.532 335.609 mo
339.131 335.439 338.716 335.273 338.28 335.264 cv
337.97 335.257 337.664 335.331 337.362 335.405 cv
336.584 335.594 335.805 335.784 335.027 335.973 cv
334.791 336.031 334.553 336.088 334.327 336.178 cv
333.813 336.383 333.366 336.756 333.074 337.226 cv
332.986 337.367 332.909 337.536 332.957 337.696 cv
333.099 337.902 li
333.41 338.172 333.873 338.114 334.284 338.114 cv
335.048 338.114 335.79 338.371 336.484 338.69 cv
337.179 339.009 337.844 339.393 338.556 339.671 cv
338.059 339.417 337.53 339.19 336.972 339.176 cv
336.414 339.161 335.819 339.401 335.549 339.889 cv
335.507 340.039 li
335.562 340.154 li
335.75 340.407 336.05 340.575 336.365 340.601 cv
336.601 340.621 336.839 340.565 337.076 340.585 cv
337.368 340.611 337.636 340.751 337.907 340.865 cv
339.035 341.339 340.343 341.37 341.492 340.948 cv
341.711 340.867 341.926 340.77 342.116 340.634 cv
342.57 340.31 342.845 339.793 343.051 339.275 cv
343.097 339.158 343.142 339.037 343.143 338.912 cv
343.143 338.816 343.118 338.722 343.089 338.631 cv
342.846 337.865 342.298 337.223 341.654 336.741 cv
341.011 336.26 340.272 335.923 339.532 335.609 cv
cp
f
335.562 340.154 mo
335.75 340.407 336.05 340.575 336.365 340.601 cv
336.601 340.621 336.839 340.565 337.076 340.585 cv
337.368 340.611 337.636 340.751 337.907 340.865 cv
339.035 341.339 340.343 341.37 341.492 340.948 cv
341.711 340.867 341.926 340.77 342.116 340.634 cv
342.57 340.31 342.845 339.793 343.051 339.275 cv
343.097 339.158 343.142 339.037 343.143 338.912 cv
343.143 338.816 343.118 338.722 343.089 338.631 cv
342.846 337.865 342.298 337.223 341.654 336.741 cv
341.011 336.26 340.272 335.923 339.532 335.609 cv
339.291 335.507 339.044 335.407 338.791 335.34 cv
338.26 338.626 li
338.26 338.626 338.021 339.201 337.822 339.347 cv
337.547 339.25 337.263 339.188 336.972 339.176 cv
335.043 339.094 335.536 340.119 335.562 340.154 cv
cp
f
344.03 338.493 mo
343.445 342.397 li
341.099 340.874 li
342.143 338.075 li
344.03 338.493 li
cp
f
298.75 348.711 mo
298.546 349.383 299.181 350.069 299.796 350.408 cv
300.41 350.747 303.601 351.251 304.295 351.354 cv
303.922 350.571 303.757 349.111 304.29 348.427 cv
304.824 347.743 308.288 346.176 309.149 346.282 cv
308.241 345.655 304.732 344.699 303.656 344.943 cv
302.465 345.214 299.596 345.934 298.75 348.711 cv
0 .333333 .419608 rgb
f
317.06 349.091 mo
316.737 349.623 316.25 350.137 315.567 350.599 cv
314.925 351.035 314.173 351.378 313.371 351.646 cv
313.306 352.668 li
313.865 352.518 314.406 352.34 314.892 352.099 cv
315.941 351.578 316.637 350.908 316.992 350.179 cv
317.06 349.091 li
cp
.929412 .929412 .929412 rgb
f
317.271 349.075 mo
317.262 349.075 li
317.275 349.733 317.026 350.393 316.521 350.983 cv
316.582 350.014 li
316.627 349.287 316.143 348.968 315.492 349.288 cv
314.841 349.607 314.274 350.463 314.229 351.181 cv
314.146 352.5 li
311.128 353.635 306.908 353.27 304.313 351.548 cv
302.964 350.653 302.312 349.558 302.315 348.504 cv
302.307 348.494 li
302.327 346.738 302.683 345.382 303.281 344.33 cv
303.493 343.956 303.749 343.611 304.021 343.304 cv
304.243 343.066 304.483 342.838 304.738 342.638 cv
306.208 341.478 308.706 341.148 310.57 341.311 cv
311.457 341.393 312.219 341.604 312.927 341.945 cv
312.988 341.976 li
313.767 342.341 314.472 342.871 315.187 343.538 cv
315.544 343.876 315.853 344.265 316.113 344.714 cv
316.122 344.723 li
316.896 346.015 317.297 347.662 317.271 349.075 cv
0 .415686 .521569 rgb
f
311.102 350.327 mo
310.84 348.337 309.677 346.489 307.997 345.401 cv
306.872 344.66 305.525 344.272 304.177 344.272 cv
303.877 344.272 303.578 344.291 303.281 344.33 cv
303.493 343.956 303.749 343.611 304.021 343.304 cv
304.164 343.313 li
305.987 343.41 307.798 344.127 309.115 345.4 cv
310.423 346.662 311.217 348.496 311.102 350.327 cv
.0235294 .356863 .439216 rgb
f
316.484 347.133 mo
316.221 345.153 315.058 343.305 313.379 342.208 cv
313.249 342.128 313.118 342.048 312.988 341.976 cv
313.767 342.341 314.472 342.871 315.187 343.538 cv
315.544 343.876 315.853 344.265 316.113 344.714 cv
316.122 344.723 li
316.407 345.489 316.535 346.317 316.484 347.133 cv
f
367.173 342.085 mo
366.993 342.335 366.803 342.575 366.613 342.815 cv
365.863 343.745 365.023 344.565 364.093 345.295 cv
362.573 346.505 360.853 347.445 359.043 348.095 cv
358.143 348.435 357.213 348.695 356.273 348.865 cv
352.113 349.675 347.793 349.015 344.513 346.615 cv
343.703 343.755 343.133 341.595 342.983 340.905 cv
342.883 340.375 342.773 339.835 342.813 339.295 cv
342.903 337.865 344.303 336.235 345.283 335.195 cv
345.363 335.105 li
346.193 334.235 347.103 333.415 348.033 332.645 cv
348.953 331.885 349.913 331.155 350.873 330.435 cv
351.723 329.795 352.533 329.305 353.293 328.945 cv
355.303 327.975 357.033 327.825 358.683 327.855 cv
358.883 327.855 359.093 327.855 359.293 327.865 cv
359.623 327.875 359.963 327.885 360.303 327.905 cv
363.793 328.025 365.163 331.505 365.793 334.435 cv
366.213 336.325 366.683 339.035 367.173 342.085 cv
.796078 .733333 .627451 rgb
f
370.673 367.295 mo
370.943 369.715 353.443 370.635 351.523 369.435 cv
351.063 368.355 350.123 365.465 349.023 361.885 cv
348.683 360.775 348.323 359.605 347.963 358.405 cv
346.473 353.405 344.863 347.865 343.813 344.115 cv
345.273 346.775 347.373 348.215 349.763 348.785 cv
350.473 348.965 351.213 349.055 351.963 349.075 cv
357.453 349.255 363.763 345.785 367.173 342.085 cv
368.753 351.925 370.473 365.455 370.673 367.295 cv
0 .415686 .521569 rgb
f
359.685 350.427 mo
356.884 351.079 li
356.712 350.369 356.51 349.621 356.27 348.863 cv
355.791 347.261 355.172 345.587 354.611 343.932 cv
353.249 339.916 351.385 335.099 345.287 335.193 cv
345.364 335.107 li
346.198 334.234 346.73 333.731 347.661 332.954 cv
354.837 333.42 356.788 341.457 357.326 342.973 cv
357.93 344.671 358.544 346.407 359.043 348.096 cv
359.292 348.882 359.503 349.669 359.685 350.427 cv
cp
f
367.153 346.695 mo
364.293 346.945 li
364.243 346.405 364.173 345.865 364.093 345.295 cv
363.843 343.465 363.443 341.475 363.053 339.545 cv
361.793 333.255 358.773 330.015 353.253 329.265 cv
353.293 328.945 li
355.303 327.975 357.033 327.825 358.683 327.855 cv
361.863 329.285 364.503 331.915 365.883 338.985 cv
366.133 340.255 366.403 341.545 366.613 342.815 cv
366.853 344.145 367.053 345.455 367.153 346.695 cv
cp
f
353.355 320.601 mo
353.502 321.814 353.649 323.034 353.585 324.253 cv
353.521 325.472 353.235 326.703 352.576 327.732 cv
351.833 328.887 350.619 329.717 349.285 330.03 cv
348.867 330.131 348.438 330.18 348.006 330.17 cv
347.577 330.161 347.14 330.098 346.754 329.908 cv
346.151 329.614 345.739 329.054 345.411 328.457 cv
345.41 328.453 li
345.336 328.32 345.267 328.186 345.201 328.052 cv
343.676 324.958 342.919 321.533 342.534 318.104 cv
342.478 317.597 342.428 317.079 342.501 316.572 cv
342.717 315.074 344.004 313.882 345.453 313.437 cv
346.901 312.991 348.474 313.176 349.936 313.575 cv
350.337 313.686 350.741 313.812 351.087 314.046 cv
351.416 314.267 351.679 314.573 351.989 314.821 cv
352.373 315.124 353.133 318.779 353.355 320.601 cv
1 .807843 .631373 rgb
f
346.909 330.671 mo
346.901 330.62 li
346.909 330.671 li
f
348.11 330.172 mo
348.075 330.172 348.041 330.171 348.006 330.17 cv
347.577 330.161 347.14 330.098 346.754 329.908 cv
346.151 329.614 345.739 329.054 345.411 328.457 cv
345.41 328.453 li
345.78 328.702 346.101 328.828 346.373 328.828 cv
347.302 328.828 347.654 327.367 347.383 324.364 cv
347.938 326.114 348.719 325.346 349.04 327.155 cv
349.17 327.879 349.28 328.606 349.39 329.334 cv
349.413 329.49 349.438 329.653 349.398 329.806 cv
349.285 330.03 li
349.285 330.03 li
348.901 330.123 348.506 330.172 348.11 330.172 cv
.909804 .737255 .576471 rgb
f
355.213 319.633 mo
346.81 321.117 li
348.731 331.992 li
357.134 330.508 li
355.213 319.633 li
cp
1 .807843 .631373 rgb
f
355.565 328.702 mo
357.378 329.361 357.65 330.901 356.173 332.141 cv
354.696 333.381 352.029 333.852 350.216 333.193 cv
348.403 332.534 348.131 330.994 349.608 329.754 cv
351.086 328.514 353.753 328.042 355.565 328.702 cv
cp
f
344.465 318.898 mo
345.829 319.396 346.624 320.645 347.006 322.046 cv
347.389 323.447 347.432 324.923 347.81 326.325 cv
348.189 327.727 349.012 329.134 350.372 329.644 cv
351.324 330 352.383 329.864 353.382 329.674 cv
354.69 329.425 356.411 329.045 356.695 327.745 cv
360.459 310.526 350.123 311.235 348.911 311.342 cv
344.64 311.721 339.972 315.259 342.547 318.22 cv
342.942 318.674 343.995 318.726 344.465 318.898 cv
cp
.235294 .235294 .231373 rgb
f
347.163 321.055 mo
346.703 321.15 346.44 321.631 346.373 322.063 cv
346.289 322.603 346.395 323.141 346.501 323.668 cv
346.635 324.338 346.781 325.032 347.218 325.566 cv
347.335 325.71 347.482 325.845 347.675 325.88 cv
347.965 325.933 348.269 325.736 348.414 325.487 cv
348.558 325.237 348.579 324.949 348.586 324.672 cv
348.606 323.871 348.537 323.073 348.383 322.294 cv
348.321 321.982 348.241 321.664 348.044 321.412 cv
347.846 321.16 347.504 320.985 347.163 321.055 cv
cp
1 .807843 .631373 rgb
f
379.839 377.534 mo
384.191 342.654 li
384.307 341.723 383.908 340.787 383.286 340.533 cv
381.102 339.641 li
380.446 339.373 379.797 339.965 379.671 340.946 cv
375.279 375.25 li
375.172 376.082 375.479 376.938 376.01 377.288 cv
378.234 378.755 li
378.929 379.214 379.703 378.625 379.839 377.534 cv
cp
.235294 .235294 .231373 rgb
f
360.101 351.499 mo
380.328 339.719 li
379.149 378.79 li
358.825 390.602 li
360.101 351.499 li
cp
f
359.418 389.41 mo
363.771 354.531 li
363.887 353.6 363.487 352.663 362.865 352.409 cv
360.681 351.518 li
360.025 351.25 359.376 351.841 359.251 352.823 cv
354.858 387.127 li
354.751 387.959 355.058 388.814 355.589 389.164 cv
357.813 390.631 li
358.509 391.09 359.282 390.502 359.418 389.41 cv
cp
.439216 .435294 .435294 rgb
f
349.12 362.2 mo
349.118 362.194 349.116 362.187 349.114 362.18 cv
349.116 362.187 349.118 362.193 349.12 362.2 cv
349.12 362.2 349.12 362.2 349.12 362.2 cv
347.978 358.453 mo
347.973 358.437 347.968 358.421 347.963 358.405 cv
347.963 358.405 li
347.968 358.421 347.973 358.437 347.978 358.453 cv
.388235 .34902 .278431 rgb
f
351.963 349.075 mo
351.213 349.055 350.473 348.965 349.763 348.785 cv
351.303 340.555 li
351.963 349.075 li
.72549 .670588 .572549 rgb
f
349.12 362.2 mo
349.118 362.193 349.116 362.187 349.114 362.18 cv
348.779 361.087 348.333 359.637 347.978 358.453 cv
347.973 358.437 347.968 358.421 347.963 358.405 cv
349.763 348.785 li
350.473 348.965 351.213 349.055 351.963 349.075 cv
351.963 349.075 li
352.593 357.205 li
352.9 360.289 349.131 362.195 349.12 362.2 cv
.0117647 .384314 .478431 rgb
f
348.409 352.998 mo
348.407 352.996 li
348.106 352.805 li
342.579 349.765 336.051 345.658 332.77 345.009 cv
330.916 344.91 329.231 347.965 329.86 349.67 cv
329.929 349.856 330.065 350.002 330.223 350.123 cv
334.437 353.32 343.931 359.603 343.931 359.603 cv
344.045 359.674 li
345.74 360.744 348.019 360.491 349.308 358.955 cv
349.863 358.293 350.17 357.522 350.244 356.746 cv
350.382 355.299 349.72 353.829 348.409 352.998 cv
cp
.796078 .733333 .627451 rgb
f
347.891 337.063 mo
347.648 337.042 347.409 337.044 347.175 337.066 cv
345.291 337.242 342.86 337.883 342.693 339.833 cv
342.267 355.965 li
342.179 356.985 342.485 357.949 343.059 358.707 cv
343.717 359.579 344.728 360.179 345.9 360.278 cv
346.144 360.299 346.385 360.299 346.62 360.277 cv
347.98 360.149 349.164 359.328 349.782 358.148 cv
350.017 357.695 350.169 357.188 350.216 356.647 cv
351.525 341.378 li
351.712 339.184 350.087 337.252 347.891 337.063 cv
cp
f
331.109 398.583 mo
331.108 398.583 331.108 398.583 331.107 398.583 cv
331.108 398.583 331.108 398.583 331.109 398.583 cv
331.109 398.583 li
331.113 398.583 mo
332.084 398.582 333.093 398.315 333.801 397.815 cv
333.093 398.315 332.084 398.582 331.113 398.583 cv
329.419 398.262 mo
329.414 398.26 329.409 398.258 329.403 398.255 cv
326.633 397.025 li
329.403 398.255 li
329.409 398.258 329.414 398.26 329.419 398.262 cv
333.803 397.814 mo
333.811 397.808 333.819 397.802 333.828 397.797 cv
333.819 397.802 333.811 397.808 333.803 397.814 cv
334.153 391.915 mo
334.153 391.915 li
334.313 391.705 334.413 391.475 334.453 391.255 cv
334.463 391.225 li
334.463 391.215 li
334.463 391.215 li
334.543 390.965 334.763 389.525 335.053 387.435 cv
335.053 387.435 li
340.833 390.015 li
340.841 390.019 340.849 390.022 340.856 390.025 cv
340.849 390.022 340.841 390.019 340.833 390.015 cv
335.053 387.435 li
334.763 389.525 334.543 390.965 334.463 391.215 cv
334.463 391.225 li
334.453 391.255 li
334.413 391.475 334.313 391.705 334.153 391.915 cv
342.524 390.336 mo
342.523 390.336 342.522 390.336 342.521 390.336 cv
342.522 390.336 342.523 390.336 342.524 390.336 cv
342.524 390.336 li
342.528 390.336 mo
343.126 390.336 343.738 390.234 344.283 390.035 cv
344.283 390.035 li
343.738 390.234 343.126 390.336 342.528 390.336 cv
340.886 390.038 mo
340.876 390.034 340.866 390.03 340.857 390.025 cv
340.866 390.03 340.876 390.034 340.886 390.038 cv
335.743 382.275 mo
335.923 380.875 336.103 379.425 336.283 377.955 cv
336.283 377.945 li
336.283 377.945 li
336.283 377.955 li
336.473 378.165 336.683 378.325 336.903 378.455 cv
337.493 378.795 li
337.493 378.795 li
336.903 378.455 li
336.683 378.325 336.473 378.165 336.283 377.955 cv
336.103 379.425 335.923 380.875 335.743 382.275 cv
335.743 382.275 li
335.81 382.265 mo
336.184 382.212 336.582 382.184 337.005 382.184 cv
336.582 382.184 336.184 382.212 335.81 382.265 cv
337.013 382.184 mo
337.012 382.184 337.011 382.184 337.011 382.184 cv
337.011 382.184 li
337.011 382.184 337.012 382.184 337.013 382.184 cv
.909635 .909635 .908835 rgb
f
342.524 390.336 mo
342.523 390.336 342.522 390.336 342.521 390.336 cv
341.937 390.336 341.367 390.238 340.886 390.038 cv
340.876 390.034 340.866 390.03 340.857 390.025 cv
340.856 390.025 li
340.849 390.022 340.841 390.019 340.833 390.015 cv
335.053 387.435 li
335.263 385.975 335.493 384.195 335.743 382.275 cv
335.743 382.275 li
335.743 382.275 li
335.743 382.275 li
335.765 382.272 335.788 382.269 335.81 382.265 cv
336.184 382.212 336.582 382.184 337.005 382.184 cv
337.007 382.184 337.009 382.184 337.011 382.184 cv
337.011 382.184 337.012 382.184 337.013 382.184 cv
337.166 382.184 337.323 382.188 337.483 382.195 cv
337.483 382.925 li
337.493 383.355 337.683 383.765 338.063 384.135 cv
338.253 384.315 338.503 384.495 338.783 384.645 cv
339.556 385.048 340.532 385.247 341.517 385.247 cv
342.318 385.247 343.125 385.115 343.833 384.855 cv
344.003 384.795 344.163 384.735 344.313 384.655 cv
344.463 384.585 344.613 384.505 344.763 384.415 cv
344.883 384.335 344.993 384.255 345.093 384.175 cv
345.293 384.015 345.463 383.835 345.593 383.655 cv
345.593 383.655 li
346.053 388.065 li
346.043 388.065 li
346.043 388.065 li
346.059 388.134 346.067 388.205 346.067 388.276 cv
346.067 388.434 346.029 388.597 345.953 388.755 cv
345.953 388.755 li
344.283 389.245 li
344.283 390.035 li
344.283 390.035 li
343.738 390.234 343.126 390.336 342.528 390.336 cv
342.527 390.336 342.525 390.336 342.524 390.336 cv
.223529 .223529 .219608 rgb
f
337.483 382.925 mo
337.483 382.925 li
337.483 382.195 li
337.483 382.195 li
337.483 381.175 337.483 380.025 337.493 378.795 cv
337.493 378.795 li
337.493 378.795 li
340.463 380.515 li
339.793 380.645 339.163 380.875 338.653 381.195 cv
338.183 381.495 337.853 381.845 337.663 382.205 cv
337.543 382.435 337.483 382.675 337.483 382.915 cv
337.483 382.925 li
.0117647 .337255 .423529 rgb
f
341.517 385.247 mo
340.532 385.247 339.556 385.048 338.783 384.645 cv
338.503 384.495 338.253 384.315 338.063 384.135 cv
337.683 383.765 337.493 383.355 337.483 382.925 cv
337.483 382.925 li
337.483 382.915 li
337.483 382.675 337.543 382.435 337.663 382.205 cv
337.853 381.845 338.183 381.495 338.653 381.195 cv
339.163 380.875 339.793 380.645 340.463 380.515 cv
340.463 380.515 li
341.793 381.275 li
342.803 381.865 li
342.803 381.865 li
342.803 381.865 li
343.453 382.245 344.013 382.565 344.503 382.845 cv
344.553 382.875 li
344.883 383.075 345.173 383.245 345.443 383.415 cv
345.573 383.485 li
345.663 383.535 li
345.593 383.655 li
345.463 383.835 345.293 384.015 345.093 384.175 cv
344.993 384.255 344.883 384.335 344.763 384.415 cv
344.613 384.505 344.463 384.585 344.313 384.655 cv
344.163 384.735 344.003 384.795 343.833 384.855 cv
343.125 385.115 342.318 385.247 341.517 385.247 cv
f
337.063 370.973 mo
337.063 370.967 li
337.076 370.965 li
337.063 370.973 li
.909635 .909635 .908835 rgb
f
348.913 362.904 mo
348.712 362.829 348.511 362.754 348.31 362.679 cv
348.523 362.555 li
348.673 362.465 li
349.122 362.206 li
349.122 362.207 349.122 362.207 349.123 362.208 cv
349.054 362.437 348.984 362.669 348.913 362.904 cv
.0117647 .384314 .478431 rgb
f
331.109 398.583 mo
331.108 398.583 331.108 398.583 331.107 398.583 cv
330.502 398.583 329.912 398.479 329.419 398.262 cv
329.414 398.26 329.409 398.258 329.403 398.255 cv
326.633 397.025 li
326.623 392.365 li
326.633 392.375 li
326.823 392.565 327.063 392.735 327.353 392.885 cv
328.122 393.295 329.099 393.496 330.088 393.496 cv
330.886 393.496 331.693 393.364 332.403 393.105 cv
332.573 393.045 332.723 392.975 332.873 392.905 cv
333.033 392.835 333.183 392.755 333.323 392.665 cv
333.443 392.585 333.553 392.505 333.653 392.415 cv
333.853 392.265 334.023 392.095 334.153 391.915 cv
334.153 391.915 li
334.153 391.915 li
334.613 396.315 li
334.603 396.315 li
334.603 396.315 li
334.617 396.384 334.624 396.454 334.625 396.524 cv
334.626 396.955 334.367 397.407 333.843 397.785 cv
333.843 397.785 li
333.838 397.789 333.833 397.793 333.828 397.797 cv
333.819 397.802 333.811 397.808 333.803 397.814 cv
333.802 397.815 333.802 397.815 333.801 397.815 cv
333.093 398.315 332.084 398.582 331.113 398.583 cv
331.112 398.583 331.11 398.583 331.109 398.583 cv
.223529 .223529 .219608 rgb
f
334.463 391.215 mo
334.563 390.695 334.383 390.175 333.913 389.725 cv
333.723 389.535 333.483 389.365 333.193 389.215 cv
332.923 389.065 332.613 388.955 332.293 388.865 cv
331.719 388.696 331.088 388.613 330.452 388.613 cv
329.282 388.613 328.098 388.895 327.223 389.445 cv
326.983 389.595 326.783 389.755 326.623 389.925 cv
326.623 389.925 li
326.603 378.205 li
326.603 375.275 li
333.477 371.287 li
337.063 370.967 li
337.063 370.973 li
335.84 371.68 li
335.835 371.681 335.829 371.683 335.823 371.685 cv
335.803 371.695 li
335.773 371.715 li
335.603 371.815 li
335.343 372.005 335.193 372.365 335.193 372.855 cv
335.193 375.505 li
335.193 376.335 335.643 377.315 336.283 377.945 cv
336.283 377.955 li
336.103 379.425 335.923 380.875 335.743 382.275 cv
335.743 382.275 li
335.493 384.195 335.263 385.975 335.053 387.435 cv
335.053 387.435 li
334.763 389.525 334.543 390.965 334.463 391.215 cv
.0117647 .384314 .478431 rgb
f
330.088 393.496 mo
329.099 393.496 328.122 393.295 327.353 392.885 cv
327.063 392.735 326.823 392.565 326.633 392.375 cv
326.623 392.365 li
326.623 389.925 li
326.783 389.755 326.983 389.595 327.223 389.445 cv
328.098 388.895 329.282 388.613 330.452 388.613 cv
331.088 388.613 331.719 388.696 332.293 388.865 cv
332.613 388.955 332.923 389.065 333.193 389.215 cv
333.483 389.365 333.723 389.535 333.913 389.725 cv
334.383 390.175 334.563 390.695 334.463 391.215 cv
334.463 391.215 li
334.463 391.225 li
334.453 391.255 li
334.413 391.475 334.313 391.705 334.153 391.915 cv
334.153 391.915 li
334.023 392.095 333.853 392.265 333.653 392.415 cv
333.553 392.505 333.443 392.585 333.323 392.665 cv
333.183 392.755 333.033 392.835 332.873 392.905 cv
332.723 392.975 332.573 393.045 332.403 393.105 cv
331.693 393.364 330.886 393.496 330.088 393.496 cv
f
344.533 392.735 mo
344.533 392.735 li
344.423 392.555 344.373 392.345 344.373 392.125 cv
344.373 391.885 344.433 391.655 344.553 391.465 cv
344.553 391.465 li
344.553 391.465 li
345.163 392.335 li
344.533 392.735 li
.223529 .223529 .219608 rgb
f
345.163 392.335 mo
345.163 392.335 li
344.553 391.465 li
344.283 391.085 li
344.283 390.035 li
344.283 390.035 li
344.283 389.245 li
344.723 389.865 li
345.403 390.825 li
346.073 391.775 li
345.163 392.335 li
.317647 .317647 .313725 rgb
f
346.073 391.775 mo
346.073 391.775 li
345.403 390.825 li
344.723 389.865 li
344.283 389.245 li
345.953 388.755 li
345.953 388.755 li
346.763 388.515 li
348.583 390.215 li
347.403 390.945 li
346.783 391.325 li
346.073 391.775 li
.486274 .486274 .486274 rgb
f
344.673 376.355 mo
344.673 376.355 li
337.563 372.255 li
336.973 371.915 li
336.903 371.875 li
336.62 371.716 336.356 371.639 336.121 371.639 cv
336.022 371.639 335.928 371.652 335.84 371.68 cv
337.063 370.973 li
337.076 370.965 li
337.078 370.965 li
345.413 374.07 li
345.164 374.844 344.917 375.608 344.673 376.355 cv
.223529 .223529 .219608 rgb
f
342.803 381.865 mo
342.803 381.865 li
341.793 381.275 li
340.463 380.515 li
337.493 378.795 li
336.903 378.455 li
336.683 378.325 336.473 378.165 336.283 377.955 cv
336.283 377.945 li
336.283 377.945 li
335.643 377.315 335.193 376.335 335.193 375.505 cv
335.193 372.855 li
335.193 372.365 335.343 372.005 335.603 371.815 cv
335.773 371.715 li
335.803 371.695 li
335.823 371.685 li
335.829 371.683 335.835 371.681 335.84 371.68 cv
335.928 371.652 336.022 371.639 336.121 371.639 cv
336.356 371.639 336.62 371.716 336.903 371.875 cv
336.973 371.915 li
337.563 372.255 li
344.673 376.355 li
344.673 376.355 li
344.423 377.105 344.183 377.835 343.953 378.535 cv
343.713 379.225 343.493 379.875 343.283 380.505 cv
343.243 380.605 343.213 380.705 343.173 380.805 cv
343.043 381.165 342.923 381.525 342.803 381.865 cv
.407843 .403922 .4 rgb
f
345.413 374.07 mo
337.078 370.965 li
337.076 370.965 li
337.063 370.967 li
333.477 371.287 li
334.083 370.935 li
337.253 369.095 li
337.473 368.965 li
337.633 368.875 li
348.31 362.679 li
348.511 362.754 348.712 362.829 348.913 362.904 cv
348.767 363.383 348.618 363.872 348.463 364.375 cv
348.463 364.385 li
348.393 364.605 348.323 364.825 348.253 365.055 cv
347.37 367.903 346.38 371.06 345.413 374.07 cv
.0117647 .384314 .478431 rgb
f
349.123 362.208 mo
349.122 362.207 349.122 362.207 349.122 362.206 cv
349.123 362.205 li
349.123 362.206 349.123 362.207 349.123 362.208 cv
f
378.687 181.657 mo
379.016 183.52 377.953 185.712 377.953 185.712 cv
377.329 187.195 376.11 187.423 373.939 186.984 cv
358.833 183.914 li
358.648 183.876 358.468 183.826 358.295 183.764 cv
358.241 183.746 li
356.414 183.074 355.299 181.152 355.701 179.185 cv
355.865 178.367 356.269 177.658 356.824 177.116 cv
356.934 177.008 357.048 176.908 357.169 176.815 cv
358.06 176.123 359.237 175.81 360.43 176.053 cv
361 176.168 li
375.536 179.12 li
377.655 179.345 378.473 180.428 378.687 181.657 cv
cp
.796078 .733333 .627451 rgb
f
328.277 267.704 mo
326.997 268.443 326.997 269.641 328.277 270.38 cv
335.534 274.57 li
336.813 275.309 338.888 275.309 340.168 274.57 cv
341.447 273.831 341.447 272.633 340.168 271.894 cv
332.911 267.704 li
331.631 266.966 329.556 266.966 328.277 267.704 cv
cp
.262745 .160784 .0941176 rgb
f
335.131 263.456 mo
329.78 262.951 li
328.632 264.493 327.626 266.23 327.317 268.933 cv
341.107 273.442 li
341.454 271.558 339.27 268.87 336.645 266.989 cv
335.573 266.221 336.103 264.497 335.131 263.456 cv
cp
f
343.928 258.68 mo
342.648 259.419 342.648 260.617 343.928 261.356 cv
351.185 265.546 li
352.465 266.284 354.539 266.284 355.819 265.546 cv
357.099 264.807 357.099 263.609 355.819 262.87 cv
348.562 258.68 li
347.282 257.941 345.208 257.941 343.928 258.68 cv
cp
f
350.782 254.431 mo
345.431 253.926 li
344.284 255.468 343.277 257.206 342.968 259.909 cv
356.758 264.418 li
357.105 262.533 354.922 259.845 352.297 257.965 cv
351.224 257.197 351.754 255.472 350.782 254.431 cv
cp
f
353.994 229.699 mo
342.708 231.229 li
342.382 228.823 li
340.491 214.868 li
338.681 201.499 li
349.967 199.972 li
353.994 229.699 li
cp
0 .415686 .521569 rgb
f
351.611 252.902 mo
353.804 254.169 353.804 256.222 351.611 257.488 cv
349.417 258.755 345.861 258.755 343.668 257.488 cv
341.475 256.222 341.475 254.169 343.668 252.902 cv
345.861 251.636 349.417 251.636 351.611 252.902 cv
cp
f
342.023 255.195 mo
341.53 246.864 342.24 232.19 342.707 231.228 cv
343.237 230.136 343.962 226.527 344.939 225.807 cv
346.315 224.794 347.938 223.857 349.631 224.09 cv
351.676 224.372 353.535 227.687 353.993 229.7 cv
354.451 231.712 353.561 254.013 353.256 255.195 cv
352.95 256.378 351.182 254.787 350.031 255.195 cv
342.023 255.195 li
cp
f
341.01 237.395 mo
329.621 237.395 li
329.621 207.395 li
341.01 207.395 li
341.01 237.395 li
f
361.418 176.542 mo
355.688 171.185 li
350.525 166.678 li
348.771 165.147 346.09 165.317 344.537 167.059 cv
342.984 168.8 343.147 171.454 344.902 172.984 cv
356.011 182.576 li
359.321 184.998 361.299 183.724 362.437 182.516 cv
364.036 180.816 363.172 178.073 361.418 176.542 cv
.796078 .733333 .627451 rgb
f
351.35 175.638 mo
350.6 204.668 li
350.46 209.138 334.05 213.058 329.9 207.798 cv
329.8 207.668 329.71 207.538 329.62 207.398 cv
329.38 202.458 329.23 199.018 328.63 190.998 cv
328.56 189.998 328.49 188.998 328.41 188.008 cv
327.89 180.728 327.39 174.188 327.39 174.188 cv
328.37 172.728 329.93 171.608 331.74 170.628 cv
332.71 170.108 333.76 169.618 334.81 169.148 cv
335.98 168.628 337.14 168.118 338.28 167.578 cv
340.5 166.488 342.32 165.768 343.8 165.388 cv
349.78 163.798 350.42 167.458 351.23 172.818 cv
351.25 172.838 li
351.38 173.728 351.42 174.668 351.35 175.638 cv
0 .415686 .521569 rgb
f
336.304 261.705 mo
338.497 262.972 338.497 265.025 336.304 266.291 cv
334.111 267.558 330.555 267.558 328.361 266.291 cv
326.168 265.025 326.168 262.972 328.361 261.705 cv
330.555 260.439 334.111 260.439 336.304 261.705 cv
cp
f
326.716 263.998 mo
326.986 255.657 329.068 238.311 329.621 237.395 cv
330.248 236.356 331.287 235.144 332.325 234.517 cv
333.788 233.633 335.49 232.848 337.155 233.235 cv
339.165 233.702 340.737 235.35 341.01 237.395 cv
341.282 239.441 338.361 262.849 337.949 263.998 cv
337.537 265.148 337.564 265.094 336.381 265.395 cv
326.716 263.998 li
cp
f
348.276 179.071 mo
348.276 179.071 342.561 182.395 340.298 183.504 cv
339.94 181.098 339.869 174.869 338.712 172.739 cv
337.867 171.157 336.483 169.752 334.808 169.146 cv
335.977 168.624 337.144 168.121 338.275 167.576 cv
340.499 166.484 342.324 165.773 343.796 165.389 cv
343.907 165.475 344.038 165.543 344.17 165.61 cv
349.948 168.632 348.276 179.071 348.276 179.071 cv
.796078 .733333 .627451 rgb
f
336.123 188.987 mo
335.488 189.976 334.408 190.622 333.255 190.931 cv
332.122 191.222 330.933 191.197 329.749 191.114 cv
329.38 191.088 328.993 191.041 328.625 190.996 cv
328.025 182.621 327.39 174.185 327.39 174.185 cv
328.37 172.732 329.932 171.613 331.738 170.628 cv
333.298 170.914 334.764 171.719 335.626 173.048 cv
336.772 174.788 336.813 176.976 336.824 179.045 cv
336.841 181.017 336.857 183.009 336.855 184.98 cv
336.874 186.366 336.85 187.809 336.123 188.987 cv
f
329.621 207.399 mo
329.62 207.399 329.62 207.399 329.62 207.398 cv
329.62 207.398 li
329.38 202.458 329.23 199.018 328.63 190.998 cv
328.63 190.998 328.63 190.997 328.63 190.996 cv
328.996 191.041 329.381 191.088 329.749 191.114 cv
330.206 191.146 330.664 191.17 331.119 191.17 cv
331.581 191.17 332.04 191.145 332.492 191.081 cv
331.057 199.569 329.693 207.399 329.621 207.399 cv
.0117647 .384314 .478431 rgb
f
328.412 188.033 mo
328.411 188.025 328.41 188.016 328.41 188.008 cv
328.41 188.008 li
328.41 188.016 328.411 188.025 328.412 188.033 cv
f
331.119 191.17 mo
330.664 191.17 330.206 191.146 329.749 191.114 cv
329.381 191.088 328.996 191.041 328.63 190.996 cv
328.63 190.996 li
328.56 190.005 328.491 189.014 328.412 188.033 cv
328.412 188.033 li
328.411 188.025 328.41 188.016 328.41 188.008 cv
331.88 177.288 li
334.75 177.488 li
334.117 181.39 333.294 186.338 332.492 191.081 cv
332.04 191.145 331.581 191.17 331.119 191.17 cv
.72549 .670588 .572549 rgb
f
331.969 172.65 mo
329.727 171.968 327.356 173.233 326.674 175.475 cv
324.607 182.27 li
321.962 191.37 li
321.28 193.612 323.107 195.663 325.349 196.345 cv
327.59 197.027 328.64 194.923 329.505 192.915 cv
334.793 177.945 li
335.475 175.703 334.211 173.332 331.969 172.65 cv
cp
.796078 .733333 .627451 rgb
f
345.174 169.788 mo
345.138 169.955 345.068 170.123 344.969 170.282 cv
344.747 170.644 344.364 170.974 343.826 171.236 cv
343.734 171.281 343.638 171.324 343.539 171.361 cv
341.796 172.062 339.28 171.836 337.758 170.808 cv
336.15 169.723 336.26 168.155 338.004 167.306 cv
338.219 167.2 338.45 167.111 338.692 167.038 cv
338.889 166.98 339.092 166.93 339.302 166.891 cv
339.311 166.889 li
339.559 166.842 339.814 166.81 340.076 166.791 cv
341.494 166.696 343.02 167.023 344.073 167.733 cv
344.622 168.104 344.97 168.531 345.122 168.966 cv
345.217 169.24 345.235 169.518 345.174 169.788 cv
1 .807843 .631373 rgb
f
345.988 158.466 mo
337.406 157.862 li
336.624 168.969 li
345.206 169.573 li
345.988 158.466 li
f
343.539 171.361 mo
342.019 171.228 340.558 170.417 339.654 169.182 cv
341.189 169.29 li
341.993 169.799 342.927 170.103 343.879 170.133 cv
343.928 170.134 343.978 170.135 344.029 170.135 cv
344.405 170.135 344.784 170.087 345.131 169.944 cv
345.091 170.059 345.037 170.173 344.969 170.282 cv
344.747 170.644 344.364 170.974 343.826 171.236 cv
343.734 171.281 343.638 171.324 343.539 171.361 cv
343.539 171.361 li
.909804 .737255 .576471 rgb
f
341.189 169.29 mo
339.654 169.182 li
339.597 169.104 339.542 169.024 339.49 168.943 cv
339.189 168.475 338.962 167.969 338.8 167.439 cv
338.76 167.307 338.724 167.174 338.692 167.038 cv
338.56 166.514 338.488 165.975 338.458 165.438 cv
338.437 165.079 338.435 164.72 338.446 164.362 cv
338.49 164.183 338.53 164.003 338.568 163.822 cv
338.568 163.843 338.568 163.864 338.568 163.885 cv
338.569 165.116 338.793 166.371 339.404 167.44 cv
339.834 168.193 340.457 168.827 341.189 169.29 cv
f
338.99 160.22 mo
338.779 161.433 338.567 162.654 338.568 163.885 cv
338.569 165.116 338.793 166.371 339.404 167.44 cv
340.306 169.02 342.061 170.076 343.879 170.133 cv
344.312 170.146 344.755 170.105 345.153 169.935 cv
345.915 169.609 346.804 169.207 347.208 168.484 cv
348.906 165.447 349.582 161.162 349.383 156.763 cv
349.281 154.5 348.684 154.938 347.249 154.413 cv
345.814 153.889 344.22 153.994 342.728 154.32 cv
342.317 154.409 341.904 154.518 341.544 154.733 cv
341.2 154.939 340.92 155.234 340.594 155.467 cv
340.193 155.754 339.307 158.395 338.99 160.22 cv
1 .807843 .631373 rgb
f
336.537 164.432 mo
336.802 165.192 337.632 165.993 337.799 165.897 cv
338.044 165.756 338.148 165.461 338.227 165.189 cv
338.799 163.213 339.05 161.144 338.967 159.089 cv
339.242 159.33 340.482 160.595 340.538 160.534 cv
340.799 160.255 340.709 158.849 340.794 156.834 cv
340.794 156.825 340.811 156.907 340.887 156.988 cv
341.106 157.224 341.823 157.46 344.085 155.505 cv
347.129 152.874 338.884 149.298 336.723 153.896 cv
335.914 155.436 335.322 160.955 336.537 164.432 cv
.262745 .160784 .0941176 rgb
f
338.851 158.159 mo
339.323 158.211 339.632 158.668 339.74 159.095 cv
339.875 159.629 339.82 160.18 339.763 160.718 cv
339.692 161.404 339.611 162.115 339.223 162.692 cv
339.119 162.847 338.983 162.997 338.793 163.05 cv
338.508 163.131 338.184 162.961 338.015 162.725 cv
337.846 162.488 337.798 162.2 337.765 161.923 cv
337.669 161.121 337.662 160.314 337.744 159.517 cv
337.776 159.198 337.826 158.871 338.001 158.6 cv
338.176 158.328 338.503 158.12 338.851 158.159 cv
cp
1 .807843 .631373 rgb
f
340.794 156.834 mo
340.816 156.146 340.382 155.713 339.823 155.312 cv
339.374 154.989 338.744 154.776 338.62 154.237 cv
338.52 153.803 338.637 153.244 338.847 152.851 cv
339.943 150.809 348.83 150.032 349.383 156.763 cv
349.458 157.676 340.724 159.058 340.794 156.834 cv
f
337.958 159.783 mo
335.694 160.984 li
335.55 159.232 li
337.922 157.973 li
337.958 159.783 li
cp
.929412 .929412 .929412 rgb
f
348.269 153.963 mo
351.758 156.32 352.139 159.423 349.119 160.894 cv
346.098 162.365 340.821 161.648 337.331 159.291 cv
333.841 156.935 333.461 153.832 336.481 152.361 cv
339.501 150.889 344.779 151.607 348.269 153.963 cv
.878431 .529412 0 rgb
f
344.384 160.916 mo
341.988 160.747 339.562 159.94 337.729 158.702 cv
336.037 157.56 335.076 156.177 335.159 155.001 cv
335.232 153.969 336.087 153.343 336.792 153 cv
337.917 152.452 339.487 152.218 341.215 152.34 cv
343.612 152.508 346.038 153.315 347.871 154.553 cv
349.562 155.695 350.524 157.079 350.441 158.255 cv
350.367 159.286 349.512 159.911 348.807 160.255 cv
347.683 160.803 346.113 161.037 344.384 160.916 cv
.952941 .572549 0 rgb
f
350.442 157.994 mo
350.376 158.93 345.472 160.951 345.469 160.993 cv
345.469 160.993 335.17 155.436 335.157 155.007 cv
335.223 154.285 335.326 153.622 335.483 153.021 cv
335.639 152.419 335.834 151.876 336.068 151.394 cv
336.184 151.16 336.313 150.941 336.456 150.737 cv
336.808 150.192 337.238 149.752 337.733 149.402 cv
338.139 149.102 338.611 148.879 339.135 148.73 cv
339.981 148.448 340.97 148.375 342.089 148.468 cv
342.274 148.481 li
343.392 148.588 344.399 148.873 345.31 149.294 cv
345.324 149.295 li
348.128 150.561 349.891 153.066 350.333 155.891 cv
350.456 156.569 350.492 157.285 350.442 157.994 cv
f
346.054 152.696 mo
343.73 150.754 341.153 149.383 338.302 149.383 cv
338.113 149.383 337.924 149.389 337.733 149.402 cv
338.139 149.102 338.611 148.879 339.135 148.73 cv
341.84 148.764 344.56 150.424 346.054 152.696 cv
.866667 .52549 .0117647 rgb
f
347.581 151.863 mo
345.922 150.32 344.1 149.066 342.089 148.468 cv
342.274 148.481 li
343.392 148.588 344.399 148.873 345.31 149.294 cv
345.324 149.295 li
346.229 150 347.008 150.881 347.581 151.863 cv
f
342.652 155.051 mo
340.686 153.216 338.519 151.809 336.068 151.394 cv
336.184 151.16 336.313 150.941 336.456 150.737 cv
338.982 151.1 341.368 152.836 342.652 155.051 cv
f
349.944 159.666 mo
349.34 160.268 348.47 160.657 347.416 160.898 cv
347.605 158.202 li
347.628 157.886 347.817 157.606 348.102 157.467 cv
349.694 156.691 li
349.792 156.644 349.908 156.652 349.999 156.713 cv
350.09 156.774 350.141 156.879 350.133 156.988 cv
349.944 159.666 li
cp
.878431 .529412 0 rgb
f
340.385 160.06 mo
340.724 160.386 341.255 160.545 341.921 160.586 cv
342.043 158.849 li
342.058 158.646 341.96 158.484 341.787 158.424 cv
340.82 158.093 li
340.619 158.14 li
340.506 158.334 li
340.385 160.06 li
cp
f
335.227 156.13 mo
335.44 156.642 335.783 157.08 336.217 157.465 cv
336.339 155.728 li
336.353 155.524 336.293 155.306 336.182 155.155 cv
335.559 154.315 li
335.427 154.261 li
335.349 154.405 li
335.227 156.13 li
cp
f
337.766 154.162 mo
337.745 154.461 337.646 154.698 337.545 154.691 cv
337.444 154.684 337.379 154.436 337.4 154.137 cv
337.421 153.838 337.52 153.601 337.621 153.608 cv
337.722 153.615 337.787 153.863 337.766 154.162 cv
cp
.235294 .235294 .231373 rgb
f
338.669 154.914 mo
338.648 155.213 338.549 155.45 338.448 155.443 cv
338.347 155.436 338.282 155.188 338.303 154.889 cv
338.324 154.59 338.423 154.353 338.524 154.36 cv
338.626 154.367 338.69 154.616 338.669 154.914 cv
cp
f
339.573 155.667 mo
339.552 155.965 339.453 156.202 339.351 156.195 cv
339.25 156.188 339.185 155.94 339.206 155.641 cv
339.227 155.342 339.326 155.105 339.428 155.112 cv
339.529 155.119 339.594 155.368 339.573 155.667 cv
cp
f
379.271 181.13 mo
377.916 181.16 376.981 180.487 375.948 181.607 cv
375.029 182.603 374.736 183.538 375.758 184.428 cv
376.385 184.974 378.624 187.942 379.476 188.065 cv
379.952 188.135 380.261 188.024 380.711 188.192 cv
381.076 188.327 381.465 188.534 381.721 188.827 cv
381.976 189.121 382.448 189.337 382.735 189.075 cv
382.845 188.974 383.168 188.222 381.606 186.936 cv
381.271 186.661 384.166 188.228 386.51 190.085 cv
386.903 190.396 387.957 190.205 387.478 189.118 cv
386.758 188.098 385.816 187.44 384.82 186.687 cv
385.163 186.177 385.65 185.111 385.576 184.501 cv
385.487 183.774 383.615 181.639 382.927 181.287 cv
382.376 181.005 379.889 181.116 379.271 181.13 cv
cp
1 .807843 .631373 rgb
f
344.682 206.249 mo
345.139 206.548 345.615 206.847 346.151 206.956 cv
346.533 207.034 346.927 207.011 347.316 206.988 cv
348.319 206.928 349.322 206.868 350.326 206.809 cv
350.631 206.791 350.937 206.772 351.236 206.712 cv
351.917 206.574 352.552 206.214 353.018 205.699 cv
353.158 205.544 353.291 205.353 353.268 205.145 cv
353.256 205.039 353.205 204.941 353.138 204.858 cv
352.815 204.456 352.23 204.424 351.723 204.332 cv
350.779 204.161 349.921 203.677 349.135 203.128 cv
348.349 202.579 347.614 201.956 346.798 201.453 cv
347.354 201.877 347.957 202.276 348.642 202.419 cv
349.327 202.562 350.116 202.399 350.558 201.857 cv
350.644 201.682 li
350.602 201.527 li
350.427 201.172 350.093 200.898 349.711 200.795 cv
349.423 200.718 349.117 200.734 348.83 200.655 cv
348.474 200.558 348.175 200.325 347.866 200.124 cv
346.58 199.286 344.972 198.956 343.459 199.219 cv
343.17 199.269 342.882 199.341 342.617 199.466 cv
341.984 199.765 341.529 200.341 341.159 200.935 cv
341.075 201.069 340.993 201.208 340.964 201.363 cv
340.942 201.481 340.952 201.603 340.967 201.722 cv
341.096 202.722 341.63 203.637 342.316 204.376 cv
343.002 205.115 343.839 205.696 344.682 206.249 cv
cp
f
367.225 201.249 mo
356.876 207.224 li
356.629 207.367 356.324 207.367 356.076 207.224 cv
341.417 198.76 li
340.884 198.452 340.884 197.683 341.417 197.376 cv
351.766 191.4 li
352.013 191.258 352.318 191.258 352.566 191.4 cv
367.225 199.864 li
367.758 200.172 367.758 200.941 367.225 201.249 cv
cp
.529412 .529412 .529412 rgb
f
365.251 199.837 mo
355.714 205.343 li
342.736 197.85 li
352.273 192.344 li
365.251 199.837 li
cp
.929412 .929412 .929412 rgb
f
350.602 201.527 mo
350.427 201.172 350.093 200.898 349.711 200.795 cv
349.423 200.718 349.117 200.734 348.83 200.655 cv
348.474 200.558 348.175 200.325 347.866 200.124 cv
346.58 199.286 344.972 198.956 343.459 199.219 cv
343.17 199.269 342.882 199.341 342.617 199.466 cv
341.984 199.765 341.529 200.341 341.159 200.935 cv
341.075 201.069 340.993 201.208 340.964 201.363 cv
340.942 201.481 340.952 201.603 340.967 201.722 cv
341.096 202.722 341.63 203.637 342.316 204.376 cv
343.002 205.115 343.838 205.696 344.682 206.249 cv
344.958 206.429 345.24 206.609 345.538 206.747 cv
346.929 202.809 li
346.929 202.809 347.353 202.153 347.631 202.017 cv
347.949 202.199 348.285 202.339 348.642 202.419 cv
351.005 202.952 350.626 201.576 350.602 201.527 cv
cp
1 .807843 .631373 rgb
f
343.652 199.524 mo
343.43 201.403 341.778 203.195 341.778 203.195 cv
340.754 204.435 339.521 204.301 337.568 203.254 cv
323.991 195.956 li
323.825 195.867 323.667 195.767 323.519 195.657 cv
323.473 195.624 li
321.918 194.453 321.405 192.292 322.357 190.524 cv
322.75 189.789 323.342 189.226 324.029 188.867 cv
324.165 188.796 324.304 188.733 324.447 188.679 cv
325.499 188.273 326.717 188.314 327.788 188.89 cv
328.301 189.165 li
341.367 196.186 li
343.331 197.013 343.802 198.286 343.652 199.524 cv
cp
.796078 .733333 .627451 rgb
f
364.086 201.866 mo
358.816 204.909 li
358.436 205.128 358.56 205.499 359.054 205.622 cv
359.9 205.831 li
360.272 205.923 360.704 205.875 360.99 205.71 cv
361.716 205.29 li
363.188 205.401 li
364.968 204.373 li
364.747 203.541 li
365.473 203.121 li
365.759 202.956 365.842 202.707 365.683 202.492 cv
365.32 202.004 li
365.109 201.718 364.466 201.647 364.086 201.866 cv
cp
.854902 .854902 .854902 rgb
f
364.27 203.191 mo
364.27 203.315 li
361.253 205.057 li
361.039 205.057 li
361.039 204.933 li
364.056 203.191 li
364.27 203.191 li
cp
.341176 .341176 .337255 rgb
f
363.836 202.941 mo
363.836 203.064 li
360.819 204.806 li
360.605 204.806 li
360.605 204.683 li
363.622 202.941 li
363.836 202.941 li
cp
f
363.402 202.69 mo
363.402 202.814 li
360.385 204.556 li
360.171 204.556 li
360.171 204.432 li
363.188 202.69 li
363.402 202.69 li
cp
f
359.553 205.036 mo
359.68 205.11 359.68 205.229 359.553 205.302 cv
359.426 205.375 359.22 205.375 359.093 205.302 cv
358.966 205.229 358.966 205.11 359.093 205.036 cv
359.22 204.963 359.426 204.963 359.553 205.036 cv
cp
.529412 .529412 .529412 rgb
f
364.83 201.99 mo
364.957 202.063 364.957 202.182 364.83 202.255 cv
364.703 202.328 364.497 202.328 364.37 202.255 cv
364.243 202.182 364.243 202.063 364.37 201.99 cv
364.497 201.916 364.703 201.916 364.83 201.99 cv
cp
f
201.248 218.062 mo
201.121 218.754 199.746 218.66 199.877 217.865 cv
203.323 193.802 li
204.694 193.998 li
201.248 218.062 li
cp
.615686 .615686 .611765 rgb
f
205.738 193.567 mo
205.605 194.498 204.742 195.144 203.811 195.011 cv
202.88 194.878 202.234 194.015 202.367 193.084 cv
202.5 192.153 203.363 191.507 204.294 191.64 cv
205.225 191.773 205.871 192.636 205.738 193.567 cv
cp
.913725 .305882 .105882 rgb
f
235.599 240.865 mo
235.594 245.643 238.946 251.457 243.088 253.852 cv
247.228 256.247 250.588 254.314 250.59 249.535 cv
250.594 244.757 247.243 238.943 243.1 236.546 cv
238.96 234.153 235.601 236.085 235.599 240.865 cv
cp
.235294 .235294 .231373 rgb
f
237.793 236.018 mo
248.395 254.381 li
243.492 257.212 li
232.89 238.849 li
237.793 236.018 li
cp
f
233.41 245.27 mo
233.41 242.222 235.549 240.985 238.191 242.51 cv
240.833 244.036 242.972 247.742 242.972 250.79 cv
242.972 253.84 240.833 255.075 238.191 253.55 cv
235.549 252.025 233.41 248.319 233.41 245.27 cv
cp
.607843 .607843 .607843 rgb
f
238.195 242.704 mo
240.743 244.178 242.808 247.758 242.806 250.699 cv
242.804 253.642 240.735 254.831 238.187 253.357 cv
235.638 251.883 233.574 248.303 233.576 245.361 cv
233.578 242.419 235.647 241.231 238.195 242.704 cv
cp
238.185 256.683 mo
242.325 259.078 245.684 257.145 245.687 252.366 cv
245.691 247.588 242.339 241.773 238.197 239.377 cv
234.057 236.983 230.697 238.916 230.695 243.695 cv
230.691 248.473 234.042 254.288 238.185 256.683 cv
cp
.235294 .235294 .231373 rgb
f
235.298 246.36 mo
235.298 244.516 236.593 243.768 238.191 244.691 cv
239.789 245.613 241.084 247.856 241.084 249.7 cv
241.084 251.545 239.789 252.293 238.191 251.37 cv
236.593 250.448 235.298 248.205 235.298 246.36 cv
cp
.839216 .839216 .839216 rgb
f
208.494 188.904 mo
208.23 188.807 207.965 188.71 207.69 188.65 cv
207.343 188.573 205.353 188.447 204.998 188.426 cv
204.408 188.39 203.525 188.616 201.799 189.029 cv
201.582 189.081 201.379 189.232 201.287 189.435 cv
201.195 189.638 201.313 189.939 201.537 189.941 cv
201.077 189.917 200.618 190.219 200.46 190.652 cv
200.371 190.893 200.445 191.251 200.702 191.268 cv
200.395 191.215 200.093 191.511 200.102 191.822 cv
200.111 192.133 200.388 192.4 200.697 192.44 cv
200.416 192.435 200.213 192.766 200.282 193.038 cv
200.351 193.31 200.617 193.497 200.891 193.555 cv
201.166 193.612 201.45 193.565 201.726 193.514 cv
203.041 193.269 203.811 192.893 204.429 193.021 cv
204.707 193.078 206.551 193.444 206.819 193.539 cv
207.601 193.816 207.3 193.764 208.112 193.932 cv
210.993 194.53 213.197 190.876 209.69 189.329 cv
209.69 189.329 209.332 189.209 208.494 188.904 cv
cp
1 .807843 .631373 rgb
f
227.19 196.265 mo
226.633 198.163 224.132 200.285 222.229 199.726 cv
222.021 199.665 li
220.04 199.084 li
218.844 198.735 li
213.444 197.157 li
211.888 196.699 li
210.331 196.241 209.469 195.699 209.273 194.733 cv
209.242 194.485 li
209.225 194.339 209.227 194.186 209.242 194.02 cv
209.242 194.02 209.413 191.295 210.702 190.036 cv
211.259 189.486 212.03 189.212 213.086 189.558 cv
221.313 191.978 li
223.939 192.748 li
224.254 192.839 li
224.73 192.978 225.26 192.932 225.753 192.867 cv
226.652 192.753 227.437 192.594 227.593 193.42 cv
227.671 193.84 227.481 194.988 227.317 195.742 cv
227.271 195.959 227.227 196.139 227.19 196.265 cv
cp
.74902 .690196 .592157 rgb
f
230.968 204.185 mo
226.419 222.105 li
195.376 204.183 li
195.376 216.323 li
253.524 249.692 li
253.524 237.551 li
253.524 217.006 li
230.968 204.185 li
.235294 .235294 .231373 rgb
f
253.524 217.006 mo
253.524 249.692 li
220.45 268.787 li
220.45 236.101 li
253.524 217.006 li
cp
.615686 .615686 .611765 rgb
f
226.419 222.105 mo
195.376 204.183 li
162.302 223.278 li
193.345 241.2 li
226.419 222.105 li
cp
.698039 .698039 .698039 rgb
f
170.177 192.344 mo
139.347 173.168 li
138.756 172.801 138.292 172.095 138.292 171.563 cv
170.177 189.972 li
170.177 192.344 li
cp
.776471 .776471 .776471 rgb
f
138.292 171.563 mo
170.177 192.344 li
164.308 195.733 li
132.422 174.952 li
138.292 171.563 li
cp
.854902 .854902 .854902 rgb
f
164.308 195.733 mo
133.477 176.557 li
132.886 176.189 132.422 175.483 132.422 174.952 cv
164.308 193.361 li
164.308 195.733 li
cp
.529412 .529412 .529412 rgb
f
191.619 180.259 mo
160.789 161.083 li
160.198 160.716 159.734 160.01 159.734 159.478 cv
191.62 177.887 li
191.619 180.259 li
cp
.776471 .776471 .776471 rgb
f
159.734 159.478 mo
191.619 180.259 li
185.75 183.648 li
153.864 162.867 li
159.734 159.478 li
f
185.75 183.648 mo
154.919 164.472 li
154.328 164.105 153.864 163.399 153.864 162.867 cv
185.75 181.276 li
185.75 183.648 li
.529412 .529412 .529412 rgb
f
162.27 190.389 mo
134.938 174.609 li
134.938 146.175 li
162.27 161.955 li
162.27 190.389 li
.839216 .745098 .596078 rgb
f
159.43 174.809 mo
155.454 172.514 li
155.454 171.66 li
157.072 172.595 li
157.072 168.937 li
155.929 168.077 155.038 166.472 155.038 165.096 cv
155.038 159.836 li
159.846 162.612 li
159.846 167.871 li
159.846 168.934 159.315 169.52 158.546 169.52 cv
158.319 169.52 158.072 169.469 157.812 169.364 cv
157.812 173.021 li
159.43 173.956 li
159.43 174.809 li
.537255 .490196 .411765 rgb
f
189.602 174.609 mo
162.271 190.389 li
162.27 161.955 li
189.602 146.175 li
189.602 174.609 li
cp
.768627 .682353 .545098 rgb
f
162.27 130.395 mo
134.938 146.175 li
162.27 161.955 li
189.602 146.175 li
162.27 130.395 li
cp
.929412 .85098 .72549 rgb
f
166.677 197.101 mo
164.308 195.733 li
164.308 184.788 li
166.678 186.156 li
166.677 197.101 li
cp
.529412 .529412 .529412 rgb
f
193.866 181.404 mo
166.678 197.101 li
166.678 186.156 li
193.866 170.459 li
193.866 181.404 li
cp
.615686 .615686 .611765 rgb
f
191.496 169.091 mo
164.308 184.788 li
166.678 186.156 li
193.866 170.459 li
191.496 169.091 li
cp
.854902 .854902 .854902 rgb
f
177.737 153.798 mo
174.642 152.011 li
174.642 222.791 li
177.737 224.578 li
177.737 153.798 li
cp
.235294 .235294 .231373 rgb
f
186.338 219.612 mo
177.737 224.578 li
177.737 153.798 li
186.338 148.832 li
186.338 219.612 li
cp
.341176 .341176 .337255 rgb
f
183.243 147.045 mo
174.642 152.011 li
177.737 153.798 li
186.338 148.832 li
183.243 147.045 li
cp
.439216 .435294 .435294 rgb
f
190.796 207.535 mo
167.378 221.055 li
167.378 201.814 li
190.795 188.295 li
190.796 207.535 li
cp
.341176 .341176 .337255 rgb
f
175.805 206.679 mo
167.378 201.814 li
167.378 221.055 li
175.805 225.921 li
175.805 206.679 li
cp
.235294 .235294 .231373 rgb
f
199.222 212.401 mo
175.805 225.921 li
175.805 206.68 li
199.222 193.16 li
199.222 212.401 li
cp
.341176 .341176 .337255 rgb
f
190.795 188.295 mo
167.378 201.814 li
175.805 206.68 li
199.222 193.16 li
190.795 188.295 li
cp
.439216 .435294 .435294 rgb
f
208.605 220.365 mo
202.938 222.309 li
199.37 221.757 197.149 223.098 197.358 225.083 cv
197.363 225.083 li
197.382 225.512 197.748 226.507 198.345 226.772 cv
204.819 229.654 li
205.961 230.162 207.706 229.978 208.717 229.243 cv
209.259 228.849 209.422 227.785 209.334 227.353 cv
209.341 227.354 li
208.605 220.365 li
cp
.235294 .235294 .231373 rgb
f
203.429 219.044 mo
201.293 219.207 200.542 220.772 201.75 222.54 cv
202.959 224.309 205.67 225.61 207.806 225.447 cv
209.942 225.285 210.693 223.719 209.484 221.951 cv
208.276 220.183 205.564 218.881 203.429 219.044 cv
cp
0 .364706 .458824 rgb
f
209.94 224.201 mo
212.788 217.743 217.881 202.827 217.794 201.927 cv
217.697 200.905 217.45 199.401 216.887 198.542 cv
216.096 197.333 215.086 196.112 213.675 195.797 cv
211.971 195.417 210.169 196.098 209.213 197.558 cv
208.257 199.018 201.483 219.063 201.376 220.09 cv
201.27 221.117 201.269 221.066 202.06 221.729 cv
209.94 224.201 li
cp
f
198.913 225.959 mo
193.246 227.903 li
189.678 227.351 187.457 228.692 187.666 230.677 cv
187.67 230.678 li
187.689 231.106 187.981 232.085 188.578 232.351 cv
195.052 235.232 li
196.194 235.74 197.939 235.556 198.95 234.822 cv
199.492 234.428 199.729 233.378 199.641 232.947 cv
199.649 232.948 li
198.913 225.959 li
cp
.235294 .235294 .231373 rgb
f
193.736 224.638 mo
191.601 224.801 190.849 226.366 192.058 228.134 cv
193.267 229.902 195.978 231.204 198.113 231.041 cv
200.249 230.879 201.001 229.313 199.792 227.545 cv
198.583 225.777 195.872 224.475 193.736 224.638 cv
cp
0 .415686 .521569 rgb
f
200.248 229.795 mo
203.095 223.337 208.188 208.421 208.102 207.521 cv
208.004 206.499 207.757 204.995 207.195 204.136 cv
206.403 202.927 205.393 201.706 203.982 201.391 cv
202.279 201.011 200.477 201.692 199.52 203.152 cv
198.564 204.612 191.79 224.657 191.684 225.684 cv
191.577 226.711 191.576 226.66 192.368 227.323 cv
200.248 229.795 li
cp
f
169.113 238.74 mo
169.109 243.518 172.46 249.332 176.602 251.727 cv
180.742 254.122 184.102 252.19 184.104 247.41 cv
184.108 242.632 180.757 236.818 176.615 234.422 cv
172.475 232.028 169.115 233.961 169.113 238.74 cv
cp
.235294 .235294 .231373 rgb
f
171.308 233.893 mo
181.909 252.256 li
177.006 255.087 li
166.404 236.724 li
171.308 233.893 li
cp
f
166.924 243.145 mo
166.924 240.097 169.064 238.86 171.705 240.386 cv
174.347 241.911 176.487 245.618 176.487 248.666 cv
176.487 251.715 174.347 252.95 171.705 251.425 cv
169.063 249.9 166.924 246.194 166.924 243.145 cv
cp
.607843 .607843 .607843 rgb
f
171.709 240.58 mo
174.258 242.053 176.323 245.633 176.32 248.575 cv
176.318 251.517 174.249 252.706 171.701 251.232 cv
169.153 249.758 167.088 246.179 167.09 243.236 cv
167.092 240.295 169.161 239.106 171.709 240.58 cv
cp
171.699 254.558 mo
175.839 256.953 179.199 255.02 179.201 250.241 cv
179.205 245.463 175.854 239.649 171.712 237.252 cv
167.571 234.859 164.212 236.791 164.21 241.571 cv
164.205 246.349 167.557 252.163 171.699 254.558 cv
cp
.235294 .235294 .231373 rgb
f
168.812 244.235 mo
168.812 242.391 170.107 241.644 171.705 242.566 cv
173.303 243.489 174.598 245.732 174.598 247.575 cv
174.598 249.42 173.303 250.168 171.705 249.246 cv
170.107 248.323 168.812 246.08 168.812 244.235 cv
cp
.839216 .839216 .839216 rgb
f
204.312 258.839 mo
204.308 263.617 207.659 269.431 211.802 271.826 cv
215.942 274.221 219.301 272.288 219.303 267.509 cv
219.308 262.731 215.956 256.917 211.814 254.52 cv
207.674 252.127 204.314 254.059 204.312 258.839 cv
cp
.235294 .235294 .231373 rgb
f
206.507 253.992 mo
217.109 272.355 li
212.206 275.186 li
201.604 256.823 li
206.507 253.992 li
cp
f
202.123 263.244 mo
202.123 260.196 204.263 258.959 206.905 260.484 cv
209.546 262.01 211.686 265.716 211.686 268.764 cv
211.686 271.814 209.546 273.049 206.905 271.524 cv
204.263 269.999 202.123 266.293 202.123 263.244 cv
cp
.607843 .607843 .607843 rgb
f
206.909 260.678 mo
209.457 262.152 211.522 265.732 211.52 268.673 cv
211.518 271.616 209.449 272.805 206.9 271.331 cv
204.352 269.857 202.287 266.277 202.289 263.335 cv
202.292 260.393 204.36 259.205 206.909 260.678 cv
cp
206.898 274.657 mo
211.038 277.052 214.398 275.119 214.4 270.34 cv
214.405 265.562 211.053 259.747 206.911 257.351 cv
202.771 254.957 199.411 256.89 199.409 261.669 cv
199.405 266.447 202.756 272.262 206.898 274.657 cv
cp
.235294 .235294 .231373 rgb
f
204.012 264.334 mo
204.012 262.49 205.307 261.742 206.905 262.665 cv
208.503 263.587 209.797 265.83 209.797 267.674 cv
209.797 269.519 208.503 270.267 206.905 269.345 cv
205.307 268.422 204.012 266.179 204.012 264.334 cv
cp
.839216 .839216 .839216 rgb
f
197.894 223.281 mo
193.345 241.2 li
162.302 223.278 li
162.302 235.419 li
220.45 268.787 li
220.45 256.646 li
220.45 236.101 li
197.894 223.281 li
cp
.439216 .435294 .435294 rgb
f
253.524 217.006 mo
230.968 204.185 li
197.894 223.281 li
220.45 236.101 li
253.524 217.006 li
.776471 .776471 .776471 rgb
f
229.988 204.751 mo
229.864 202.759 229.734 200.713 229.627 198.884 cv
229.545 197.471 229.475 196.188 229.434 195.159 cv
229.514 195.44 229.662 196.133 229.845 197.056 cv
229.939 197.532 230.041 198.068 230.15 198.641 cv
230.49 200.438 230.879 202.587 231.188 204.311 cv
230.968 204.185 li
229.988 204.751 li
.822745 .822745 .821176 rgb
f
231.33 218.769 mo
231.024 218.59 230.747 218.365 230.508 218.104 cv
230.558 217.892 230.576 217.679 230.561 217.468 cv
230.54 216.709 li
230.551 216.645 li
230.551 216.645 230.518 215.714 230.468 214.223 cv
230.415 212.335 li
230.404 212.328 li
230.397 212.135 li
230.329 210.297 230.165 207.578 229.988 204.751 cv
230.968 204.185 li
231.188 204.311 li
231.509 206.099 231.742 207.428 231.742 207.428 cv
231.742 207.428 231.66 217.368 231.33 218.769 cv
.643137 .643137 .643137 rgb
f
220.05 210.548 mo
236.645 220.129 li
237.411 220.571 238.031 220.212 238.031 219.329 cv
238.031 219.275 li
238.031 217.234 236.598 214.752 234.831 213.732 cv
220.05 205.199 li
219.285 204.757 218.664 205.115 218.664 205.999 cv
218.664 208.147 li
218.664 209.031 219.285 210.106 220.05 210.548 cv
cp
.615686 .615686 .611765 rgb
f
222.545 228.937 mo
237.754 220.125 li
219.128 205.074 li
203.859 213.903 li
222.545 228.937 li
cp
f
204.917 219.295 mo
221.512 228.876 li
222.277 229.318 222.898 228.96 222.898 228.076 cv
222.898 228.022 li
222.898 225.982 221.465 223.5 219.698 222.479 cv
204.917 213.946 li
204.152 213.504 203.531 213.862 203.531 214.746 cv
203.531 216.895 li
203.531 217.779 204.151 218.853 204.917 219.295 cv
cp
.235294 .235294 .231373 rgb
f
204.396 201.511 mo
200.847 209.637 li
222.922 222.144 li
230.024 212.664 li
204.396 201.511 li
cp
0 .415686 .521569 rgb
f
235.211 189.637 mo
235.21 189.703 235.173 208.325 235.118 208.537 cv
235.045 208.809 215.449 210.759 215.368 210.141 cv
215.36 210.072 li
215.29 194.098 li
216.081 192.174 230.16 187.681 235.211 189.637 cv
cp
f
246.339 251.161 mo
233.075 258.819 li
233.075 248.222 li
246.339 240.565 li
246.339 251.161 li
cp
.929412 .929412 .929412 rgb
f
235.193 189.64 mo
234.988 189.79 234.784 189.94 234.572 190.09 cv
233.707 190.717 232.8 191.351 231.866 191.951 cv
230.367 192.919 228.799 193.805 227.238 194.467 cv
226.352 194.842 225.465 195.135 224.593 195.332 cv
222.596 195.782 220.674 195.694 218.956 194.753 cv
216.713 192.51 215.943 189.675 215.295 186.832 cv
215.288 185.21 li
215.288 184.712 215.956 184.024 217.013 183.26 cv
217.831 182.667 218.887 182.026 220.046 181.386 cv
222.119 180.227 224.518 179.082 226.481 178.209 cv
227.913 177.575 229.106 177.091 229.767 176.866 cv
230.033 176.778 230.21 176.73 230.285 176.73 cv
235.445 176.73 235.165 183.669 235.111 183.226 cv
235.145 183.642 235.193 189.477 235.193 189.64 cv
.796078 .733333 .627451 rgb
f
221.054 188.835 mo
220.869 189.208 li
220.07 190.806 li
214.904 201.178 li
214.764 201.453 214.598 201.699 214.402 201.919 cv
214.294 202.054 214.173 202.177 214.042 202.288 cv
213.135 203.073 211.872 203.366 210.691 203.022 cv
210.491 202.964 210.287 202.887 210.09 202.787 cv
209.762 202.623 209.469 202.414 209.215 202.174 cv
208.74 201.724 208.403 201.152 208.233 200.535 cv
208.022 199.764 208.061 198.927 208.398 198.154 cv
208.479 197.977 li
208.738 197.455 li
209.078 196.773 li
213.119 188.665 li
214.629 185.635 li
215.413 184.059 217.205 183.313 218.842 183.791 cv
219.042 183.849 219.246 183.926 219.439 184.024 cv
221.217 184.91 221.933 187.065 221.054 188.835 cv
cp
f
227.326 195.659 mo
224.6 195.53 li
224.593 195.332 li
224.504 193.567 222.507 187.595 220.619 185.237 cv
219.678 184.064 218.315 183.485 217.013 183.26 cv
217.831 182.667 218.888 182.026 220.046 181.386 cv
221.042 181.87 221.975 182.572 222.746 183.533 cv
224.654 185.919 226.767 191.488 227.238 194.467 cv
227.306 194.937 227.34 195.339 227.326 195.659 cv
cp
0 .415686 .521569 rgb
f
234.593 192.183 mo
231.866 192.053 li
231.866 191.951 li
231.948 189.886 231.553 184.964 230.21 181.876 cv
229.385 179.995 228.206 178.775 226.706 178.27 cv
226.481 178.209 li
227.913 177.575 229.106 177.091 229.767 176.866 cv
230.817 177.671 231.88 178.904 232.705 180.786 cv
233.952 183.642 234.443 187.48 234.572 190.09 cv
234.613 190.949 234.613 191.672 234.593 192.183 cv
cp
f
239.792 218.546 mo
243.327 190.214 li
243.421 189.458 243.097 188.697 242.591 188.491 cv
240.818 187.767 li
240.285 187.549 239.758 188.03 239.656 188.827 cv
236.088 216.691 li
236.001 217.366 236.25 218.061 236.681 218.345 cv
238.488 219.537 li
239.053 219.91 239.681 219.432 239.792 218.546 cv
cp
.439216 .435294 .435294 rgb
f
223.759 197.398 mo
240.189 187.83 li
239.231 219.566 li
222.723 229.161 li
223.759 197.398 li
cp
f
223.205 228.192 mo
226.74 199.861 li
226.835 199.104 226.51 198.344 226.005 198.138 cv
224.231 197.413 li
223.698 197.196 223.171 197.676 223.069 198.473 cv
219.501 226.337 li
219.414 227.013 219.664 227.708 220.095 227.992 cv
221.901 229.184 li
222.466 229.556 223.095 229.079 223.205 228.192 cv
cp
.235294 .235294 .231373 rgb
f
225.2 171.433 mo
225.263 172.494 225.325 173.561 225.205 174.616 cv
225.084 175.671 224.771 176.725 224.143 177.582 cv
223.437 178.545 222.339 179.201 221.164 179.401 cv
220.796 179.467 220.42 179.486 220.046 179.455 cv
219.674 179.423 219.298 179.346 218.973 179.16 cv
218.466 178.872 218.138 178.365 217.885 177.829 cv
217.884 177.826 li
217.828 177.706 217.774 177.586 217.725 177.466 cv
216.566 174.699 216.091 171.685 215.941 168.689 cv
215.919 168.245 215.903 167.794 215.994 167.357 cv
216.261 166.068 217.442 165.103 218.723 164.793 cv
220.004 164.483 221.359 164.728 222.607 165.153 cv
222.949 165.27 223.293 165.402 223.581 165.622 cv
223.855 165.832 224.067 166.112 224.323 166.343 cv
224.64 166.627 225.105 169.84 225.2 171.433 cv
1 .807843 .631373 rgb
f
221.938 179.89 mo
221.821 179.89 221.704 179.885 221.587 179.875 cv
221.215 179.844 220.839 179.766 220.514 179.58 cv
220.454 179.546 220.397 179.509 220.341 179.469 cv
220.36 179.469 220.379 179.469 220.397 179.469 cv
220.654 179.469 220.911 179.446 221.164 179.401 cv
221.609 179.325 222.044 179.184 222.45 178.985 cv
222.571 179.018 222.694 179.043 222.819 179.061 cv
222.823 179.115 222.828 179.169 222.833 179.222 cv
222.845 179.36 222.858 179.502 222.815 179.633 cv
222.705 179.821 li
222.452 179.866 222.195 179.89 221.938 179.89 cv
.909635 .909635 .908835 rgb
f
220.397 179.469 mo
220.379 179.469 220.36 179.469 220.341 179.469 cv
219.93 179.172 219.649 178.722 219.426 178.249 cv
219.425 178.246 li
219.753 178.497 220.041 178.624 220.287 178.624 cv
220.586 178.624 220.825 178.437 221.001 178.06 cv
221.282 178.387 221.62 178.656 222.02 178.834 cv
222.16 178.897 222.303 178.946 222.45 178.985 cv
222.044 179.184 221.609 179.325 221.164 179.401 cv
220.911 179.446 220.654 179.469 220.397 179.469 cv
.909804 .737255 .576471 rgb
f
226.864 170.693 mo
219.492 171.533 li
220.579 181.075 li
227.951 180.235 li
226.864 170.693 li
cp
1 .807843 .631373 rgb
f
226.686 178.583 mo
228.225 179.252 228.379 180.603 227.03 181.601 cv
225.682 182.599 223.341 182.865 221.803 182.196 cv
220.265 181.528 220.111 180.176 221.459 179.179 cv
222.808 178.181 225.148 177.914 226.686 178.583 cv
cp
f
217.466 169.191 mo
218.623 169.696 219.247 170.823 219.504 172.059 cv
219.761 173.296 219.72 174.579 219.973 175.817 cv
220.227 177.054 220.867 178.319 222.02 178.834 cv
222.827 179.195 223.754 179.132 224.631 179.021 cv
225.78 178.875 227.294 178.637 227.61 177.523 cv
231.796 162.778 222.786 162.841 221.729 162.87 cv
218.001 162.971 213.76 165.793 215.838 168.501 cv
216.156 168.916 217.067 169.017 217.466 169.191 cv
.235294 .235294 .231373 rgb
f
219.801 171.498 mo
219.396 171.556 219.143 171.959 219.061 172.33 cv
218.96 172.794 219.023 173.267 219.087 173.73 cv
219.168 174.319 219.257 174.929 219.608 175.416 cv
219.702 175.547 219.823 175.672 219.988 175.713 cv
220.237 175.774 220.511 175.619 220.65 175.411 cv
220.789 175.202 220.822 174.953 220.843 174.713 cv
220.903 174.019 220.886 173.322 220.794 172.638 cv
220.757 172.364 220.705 172.084 220.547 171.854 cv
220.388 171.625 220.101 171.455 219.801 171.498 cv
cp
1 .807843 .631373 rgb
f
217.253 238.603 mo
217.253 239.24 216.806 239.498 216.255 239.18 cv
209.102 235.05 li
208.55 234.732 208.103 233.958 208.103 233.321 cv
208.103 232.684 208.55 232.426 209.102 232.744 cv
216.255 236.874 li
216.806 237.192 217.253 237.967 217.253 238.603 cv
cp
.235294 .235294 .231373 rgb
f
217.253 242.533 mo
217.253 243.17 216.806 243.428 216.255 243.11 cv
209.102 238.98 li
208.55 238.662 208.103 237.888 208.103 237.251 cv
208.103 236.614 208.55 236.356 209.102 236.674 cv
216.255 240.804 li
216.806 241.122 217.253 241.897 217.253 242.533 cv
cp
f
217.253 246.463 mo
217.253 247.1 216.806 247.358 216.254 247.04 cv
209.102 242.91 li
208.55 242.592 208.103 241.818 208.103 241.181 cv
208.103 240.544 208.55 240.286 209.102 240.604 cv
216.254 244.734 li
216.806 245.052 217.253 245.827 217.253 246.463 cv
cp
f
217.253 250.393 mo
217.253 251.03 216.806 251.288 216.254 250.97 cv
209.102 246.84 li
208.55 246.522 208.103 245.748 208.103 245.111 cv
208.103 244.474 208.55 244.216 209.102 244.534 cv
216.254 248.664 li
216.806 248.982 217.253 249.757 217.253 250.393 cv
cp
f
211.661 168.83 mo
211.512 169.459 212.136 170.053 212.72 170.329 cv
213.305 170.605 216.268 170.884 216.912 170.939 cv
216.524 170.241 216.287 168.907 216.739 168.248 cv
217.19 167.588 220.284 165.947 221.082 165.994 cv
220.211 165.47 216.929 164.794 215.954 165.081 cv
214.874 165.398 212.278 166.227 211.661 168.83 cv
0 .333333 .419608 rgb
f
228.519 168.12 mo
228.252 168.627 227.834 169.128 227.233 169.593 cv
226.668 170.03 225.997 170.389 225.274 170.682 cv
225.274 171.625 li
225.78 171.456 226.266 171.261 226.699 171.011 cv
227.633 170.471 228.235 169.815 228.519 169.124 cv
228.519 168.12 li
cp
.929412 .929412 .929412 rgb
f
228.712 168.093 mo
228.704 168.093 li
228.754 168.698 228.563 169.319 228.132 169.89 cv
228.132 168.996 li
228.132 168.325 227.669 168.06 227.089 168.391 cv
226.509 168.722 226.036 169.543 226.036 170.205 cv
226.036 171.423 li
223.327 172.641 219.425 172.55 216.94 171.117 cv
215.648 170.371 214.985 169.402 214.927 168.432 cv
214.919 168.424 li
214.836 166.809 215.084 165.541 215.573 164.539 cv
215.747 164.182 215.963 163.851 216.194 163.553 cv
216.385 163.321 216.592 163.097 216.816 162.898 cv
218.1 161.747 220.378 161.3 222.101 161.341 cv
222.921 161.366 223.634 161.515 224.305 161.788 cv
224.363 161.813 li
225.1 162.103 225.78 162.55 226.475 163.122 cv
226.824 163.412 227.13 163.752 227.395 164.149 cv
227.403 164.158 li
228.19 165.301 228.654 166.792 228.712 168.093 cv
0 .415686 .521569 rgb
f
223.112 169.6 mo
222.756 167.786 221.579 166.154 219.972 165.251 cv
219.013 164.702 217.908 164.421 216.802 164.421 cv
216.39 164.421 215.978 164.46 215.573 164.539 cv
215.747 164.182 215.963 163.851 216.194 163.553 cv
216.327 163.553 li
216.351 163.553 216.376 163.552 216.4 163.552 cv
218.058 163.552 219.734 164.107 220.999 165.185 cv
222.275 166.27 223.112 167.91 223.112 169.6 cv
.0235294 .356863 .439216 rgb
f
227.876 166.353 mo
227.519 164.547 226.343 162.915 224.736 162.004 cv
224.612 161.937 224.487 161.871 224.363 161.813 cv
225.1 162.103 225.78 162.55 226.475 163.122 cv
226.824 163.412 227.13 163.752 227.395 164.149 cv
227.403 164.158 li
227.71 164.845 227.876 165.599 227.876 166.353 cv
f
191.156 222.097 mo
192.285 222.749 192.285 223.807 191.156 224.459 cv
190.027 225.111 188.195 225.111 187.066 224.459 cv
185.937 223.807 185.937 222.749 187.066 222.097 cv
188.195 221.445 190.027 221.445 191.156 222.097 cv
cp
.341176 .341176 .337255 rgb
f
189.96 222.935 mo
189.833 223.627 188.458 223.533 188.589 222.738 cv
192.035 198.675 li
193.405 198.871 li
189.96 222.935 li
cp
.615686 .615686 .611765 rgb
f
194.45 198.44 mo
194.316 199.371 193.454 200.017 192.523 199.884 cv
191.592 199.751 190.945 198.888 191.079 197.957 cv
191.212 197.026 192.075 196.38 193.005 196.513 cv
193.936 196.646 194.583 197.509 194.45 198.44 cv
cp
.913725 .305882 .105882 rgb
f
196.171 198.655 mo
195.971 198.669 li
195.824 198.673 195.713 198.675 195.622 198.678 cv
195.215 198.683 195.3 198.657 194.624 198.588 cv
194.339 198.556 192.462 198.627 192.178 198.634 cv
191.549 198.656 190.887 199.197 189.662 199.74 cv
189.574 199.779 189.481 199.82 189.39 199.853 cv
189.218 199.918 189.042 199.965 188.861 199.972 cv
188.581 199.98 188.278 199.862 188.147 199.61 cv
188.018 199.363 188.139 198.993 188.413 198.932 cv
188.104 198.966 187.772 198.771 187.694 198.471 cv
187.611 198.169 187.834 197.812 188.147 197.792 cv
187.891 197.837 187.737 197.502 187.768 197.25 cv
187.824 196.793 188.198 196.39 188.652 196.309 cv
188.434 196.356 188.25 196.094 188.292 195.876 cv
188.336 195.653 188.498 195.462 188.694 195.361 cv
190.28 194.56 191.087 194.134 191.667 194.034 cv
191.726 194.021 191.829 194.005 191.965 193.98 cv
192.629 193.866 194.041 193.634 194.338 193.626 cv
194.589 193.631 li
194.592 193.632 li
194.79 193.643 194.984 193.665 195.182 193.689 cv
196.065 193.793 196.444 193.826 196.444 193.826 cv
196.663 193.864 196.865 193.919 197.051 193.982 cv
199.981 194.956 198.802 198.414 196.171 198.655 cv
cp
1 .807843 .631373 rgb
f
191.745 192.97 mo
191.552 193.258 191.665 193.667 191.903 193.92 cv
192.141 194.172 192.473 194.308 192.788 194.451 cv
193.082 194.585 193.37 194.731 193.652 194.888 cv
194.04 195.106 194.423 195.349 194.855 195.457 cv
195.286 195.566 195.789 195.514 196.105 195.2 cv
196.344 194.964 196.441 194.615 196.449 194.279 cv
196.453 194.118 196.421 193.927 196.277 193.853 cv
196.069 193.813 li
195.22 193.776 194.344 193.675 193.608 193.251 cv
193.304 193.077 193.027 192.849 192.694 192.74 cv
192.362 192.631 191.94 192.68 191.745 192.97 cv
cp
f
215.081 200.63 mo
214.523 202.529 212.023 204.651 210.12 204.092 cv
209.911 204.031 li
207.93 203.449 li
206.734 203.101 li
201.335 201.522 li
199.778 201.064 li
198.222 200.606 197.36 200.065 197.163 199.099 cv
197.133 198.851 li
197.116 198.705 197.118 198.552 197.132 198.385 cv
197.132 198.385 197.303 195.661 198.592 194.402 cv
199.149 193.852 199.921 193.577 200.977 193.924 cv
209.204 196.343 li
211.83 197.113 li
212.145 197.205 li
212.621 197.344 213.151 197.298 213.643 197.232 cv
214.543 197.119 215.328 196.959 215.483 197.786 cv
215.562 198.205 215.372 199.354 215.208 200.108 cv
215.161 200.325 215.118 200.504 215.081 200.63 cv
cp
.796078 .733333 .627451 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.1.0
%%For: (Agor) ()
%%Title: (1603.i105.016.S.m007.c11.delivery man.eps)
%%CreationDate: 3/13/2016 5:55 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBjVOso)Ja[rI"$[L^T(IEI*qB)*fJn"Ar,$g_UAjJ4MT)S9)=RI]r]Whl<8YZ2hd&HBW;h]gn8YG>EF*FmWJ@YcuO=ek;;)
%a[Y<oQ'C=)Q<hO(\[J&4<o1Uk[BT/-Z<(oS2+kK3AYZ)k[K>PeF%%0%NBV's;ApQsNFK@tY'5%nNFKHSc8M\^<dQ-XrE6(s?5-/u
%QU9t)\QWkJRG+STMJ(EdZgAdq/(J[SdAdpB.@mmakT"X+2f7hK"5kuQrPS"@JbI9X%aC!Q7e;>IXc<*#$-I`55OF_3.d^!3d&Ake
%?gaV%Am<I*qrMEUI\=MX;MtH)dZ:A4q7+eRG3#'jIOk9I\X1/E%oTU"J@)kRV?\RLA!oRP9a*[FoOh=cs8?Q)TCCN/&U*7r]=U'c
%_j1M\9"?#ACmtoLj8jc^ng&e&K6"(s/Tf.JK=:0D^!s@c'E8\&VENjlbJ'Ou[&r'Td\0E]2Le^M^6uG.D(bic.K?rAH<Mqcat9rh
%R9!t8nfQRCf>E7n"5`?EbH3_r8r(b?",4#m0,g[-Q'U+lT!&oSCLaF+^J0W=6L1H&+VJWk]@_n(<+&/0^$O<n$9u_,3b9B'W`cJH
%1u@dkQQ9FCp"1?jWDjH&2G.+i8icD^N5id9kT13"@rlgM$=C1j-^FPNE^9N%D.NupX&UVAl-mVmk&4Qog@ss\<F\5r^39H0+3[=_
%0:bkK*\C+>LY3KKP@14olsje"ohr4q_ZmO=Fb@t)SW64JEFOCaJ)T9uLi1\CPlZXn)q:QZa2%`Sf1Yok38CWZl,To,UYFS,+#j2t
%YJj27EE#]H/JgL.(2\=Gp$1a&ICY\JjAVL.BGHC]#(>sJ8J`l$H^>.3lYMhbngjCpYOq9<r_:h5N\GI:rW!#UXT)/#2O^n%H]US-
%P^6DE23SH_>:n>4XVCf^)geLR#Q7OCPk@Q8_\*DOUt$_9E@5W[oS<kn`-t>NW'][3pi!]LCA12aY="Ki@$2]-J(BVueOmI))__cd
%I82c6::XAS<L7F.]'[tr6).<E,=3<9TDG&4l:@PHGt>./\-LBAdlVf_:p!bn>(u*QV)WAj0u*H(FAC^]<)dD0O*fmE:VDOCp6_`?
%6q"CbWY"b`k?)*DB)g1DVg(i#jeu0m<Q^Yu7;VF4V,!aE[GS*.b5M9Re='4s;Z!AG-GX;_O1">8lQ).=L^Sapj\&$pZK0()[p,ZN
%FeB%'m!VX2d'ra&G$^?!kKg\2&Q66fqK^1YX/X(QC=PBD\4fG.<K=Y]13'BAC7&_C$H$_<Vj2"r<N^BN48!Q^QuVRbr71V"[F:1p
%f##,M_gNH/IPTR:O$^6igAH(gPBroL/b!GAc*T+^B7_H-SD4aAQ"1JV<_Aq3":HsOVL(%qjiY\Z-c'PlL6Ge9K,(qa%=%^&Nqp2k
%L7_k)"0ErYb09QfVV4-a*3.2K=",Ft'cJYMS+3lU`(mda6mc*N=M>akdd'eIoELorLJ1q/j\%T`[*/8Gq+$cPSqLG\[@bt.YZmGI
%Y#T@`X%Cr<e8S=/YqKHW]j#h`lkKFI-fH]J`fjS)]s6IoOS3kndb<Id*ge3g)ebe(fpoMQFjUOKkP4.kbEtb8iYV($7(*B4rFLn'
%1s<!&WTFM1VVcJn1q2B+[Yj/uZ+^jl[.Dj5+OfW)cK6VLoD$Aa3p_]q(H04cCmlY00#)*9XEe)8JVUf,EGBW6b"]hfk,-q@/S8nC
%9rBH'c:tk0<e6LmlH;YnI=7'b"=F!#QCA(_0#7RYgN%@>DJmYBD7QppR+lZ]X1$fhI1<9gA;cguHd9<"p0=?2b`"\TQHhtqO)fCC
%ZqtN83=fCaP*4))CEOu<kg/Wk.9HMD_Ki,;[*3dd8Zh<Wg-&50rBiARP$5Y%U"aHd$MBDM=#\r]ErpA4,n[\a$-M$KCIfXh9+r#M
%ac=EkF0EUREP(#:i&&[I=b"D+S&nT8L!G9d^*6pGq"+-*]4F7Qr2_78%@VI(U:CD@*pmk2\54aF(CS>#1sgWq')p96OIQ6LHeu<$
%72KS<SK!LT<XZ$GUYbDQl:G#6g1=aZZ]Zt\o<2c$?G=hhqd!g`i)o\(.fkO)h,C#K7*Cs<?cB=AC`37EY`/TU>fYK6<9g$FA?L`b
%h`$OCF&[@BhCt-cca=,e,aP6)Y7k0gATO-(^i]%hXP#^;MfMK1#=osQcH]ANigYKg;ljf,3D%f[9Pt;2p>J+]cG1@Rl/%1@I-PO"
%CoYj^FA?W5:6L.u9M*7i(+d4PUn;td=KQ]?)Z3i"rZgK"Rr#cqVtV\(D3>k7U>.dY"-YO?m3Fo0f5j0*lR_1$5/5<e[P7T]ZU?5g
%;slVDC7aL-hJ+C.jRYTWBd;AG<&\"Bnp_:*,HlG8P=d44#Mgko.bu@3*&X89k*@JF5'JUGbj1F,Q=(.X'9c.r+2=1mr&/u0d;#8I
%6sg!!@LCAA3?+H62Kg+.f6+Y\QfMW"S9b'W/A(5096qV=GCk(_m%!MNgsYt'#CM94@'AP.pdC?(m:Y6IU+ssWmJ`k+b4)M%YlpKG
%o=Os5D8USpVj@0k7I\NGJV*K6FQ*FhoQnB-mj23DR?QiF9Rh*%;$+%l)=`l#0j!=7'3W7[K'6h?Zr!rmX8D!.^DA+dY]HV`Ut1l(
%&GWp7qF8(j=PDgcm:Nb&/E8lC0+,sl'KNQ&%@82Z3"qTQs#!<GOcO88j5g[2O%GSGW8U]s`2OQ\$%-Ko,GQS^@.8C13-kPT78.1%
%q-0T,R.f!kj>,snf)&"r/=;u,T3sD*4[%md@@GJ]V-6TZJQ/2qL*kR!:*YTje<lmuFIi[MpR7CD&og1cDGj+V<<"NI9X#Mr"._b/
%+if\1P?Lkl;D/h!jMhuDeKWk$R:&bfVNY1_!_F)1>4:E'GnHCGDlEUK9B>,6UR$SREO/6=UY_ps@+U*AZ!6O#OQ81$6a=Xp>#q]J
%L3\B9PtDe('JmkBH;,b6O:lNI;N_r.dV>MB7A4%e-).<6h_g%%:mc)[QtN-eKn3:;:73M%(,IK/Mg6Yl2#1bt;:`+HokXNS^uBK/
%77gCPCn?Poei"8R-qVKu<^b8mkFs4u/S?=Fj]Y3G6mlL@F&@hH.2O;P@ck3Lo3@O[L:!B3U.guWF%HGUouoir`"AnRe6]%XPU)0T
%'odOjF&<S;`O)7tl^E`0]M?!c8JX*4VuBaeBkB)t-IH.+JSRr"05%nA?D7k3q+f.?EJiH&Lu17O8^?6teM#-_+6L'[bi(5K&C$sI
%9&fB1=8J>0_6Vrr(ji!9okIK=k'ZPGHqhr_=ooD^q:_@Bc2$'en?pLV60@IdohsDaf[Mo_Rrc";D6>cueuk:D2WngrY4b*)e`%17
%_[48jV[XpY;".7JZ833qS0+N,+!Z8aN"VdkIZ3F0BRj\W/*/'Ji0-Uu--G2)[@NO?p-8.`U#!jujm$`knFLT#G93ZAQ<WHSj4p-n
%ZW=`8;D4;r/+rL@]K)))eLVLt\O8C>@r3U$[!>B4M_jfK>LTG)6rfSsQS_Vu>qV=JZX;'j?3k+s$DFCD/F[D>:aWN/PZkJsPk+$V
%.n0K?dV&E#Q$u:&SnfL5ZTtZknR^ERU[.SJ^]/nZ4.6$%6n]INR3_cBbP>L=j.DE%EQqrF$0c6Z\_3688(2rZ^/8Z(g17e/lCQ%o
%rZOLq,U:B"X.)[5OMKOnG+L?9^):T@0srgR)U:tX)H_VJ5po3T24PI!)d%_Sh><:e=e/9K<u"o(c=sE98]#dd8ig:<$."El9PhPh
%P`5N7`>>_3OIX9T`"i#iAs.`-2uVn/hg,-D3odsg-p0J+ZojELcJu\2q!UFQd^=J#a#s?:(,q<ScJu[S=F3F=fX=foC6J1Un!&,l
%VVM2-O87(2^@R`\Pm'l[db7K!$@ST?UknAM\QWkJH25mgQ'9Z,2-;K*n7I:&%<n2,IZQfVW#Qn'gZ<7H:A.";$#:CB0eodR!A!WI
%N_/V28sP%RVk!KU];.<+EfG`MiYB^$A3G!ZmNJ'HaF;*+jrUh]n;nsEQ0)ti\XVs#W<WD!(WK4s?<KF*Q-8i#dLsa(,eGNRNR^6C
%NG?#1g+&Fi)m)I*gpm(5Il<.H3siQfjXP[Ok\l?dS_/K#'!/)%T1Z6?3Ucoo!urM"3FOj@Y/1tA%Rer;F&R*gB^?R=3g4)Mbih*7
%<p%\_WHLJ4S)kjY;Q\i"F'q?)^'%DJ<dk45hIr7T5#u:(Rt!:e$,=miqd&?EQau-fmWb-]?KR97\`78hGaUX"/sTCTZ\[Y\G[]8)
%13^B)Ym!14]NiGG1-)%NII_c_`dtL8%%`m\+C2TG'3B3H9YHAG]%s1\m4P/*Ei.MB2Nae#^pFoI85cBp?>O(3ehAa80i=A0>@)e6
%jV`^"0-@6[c>K=rY.oB;*2f0t9tPA7=(7U.iAe$Z1r[<d3<Pk!\TgP9G\1LH]E6RTWk`_1I@XGHRTEjb'UesHe1'*9/X.0'c<jIj
%h/;=%W&cfNPs7,U_9?8!:[k+"dWmrs+=Z9QacTVe2'dG$.Q<gaj"^5^X)WOB/pD7Q>3/XKQ98qqrY;X,J'eJq41fi&NIbfuRHs^T
%m(%gnm4>VUjXj_4Th0?d$*"ue(6M#LR%V`u>V!W7riD=sA^Hig'3gEZA21"DA-lt`L(dL]rl=pRo4#npb`AI\IZ,/MBkH4_&R5E&
%7ZoXQr>8IKl-A"NTDLA*IZ/!qRCODLm`1\,5K<_`L"7[uarn=ap=XGd;!\mr0,p0%C!>#o;LJ+kT?*1Q^Gq]q1>/Ph"Jo"V$LMlJ
%<W:Atf8E4Bkb7\`gRn[uO_[t'Vr"PhU/UbUU3kkh`fjS*]s6IoFGf7,8-dojBQm:P-<f.hlY.]\ld#4eKn^5FQH9p]8gekW8Z.\=
%-9!9\MKt2T,[/[XCCDN:-YC-3:a4HT\CIN(@=6jHEaj?$/88^R-2m[D8X"5p>bu8`mrJ=GFB_8k.WMKAF:)?dl6hG<l=i2hIq-li
%8\/Z?G0+Of-r$@&/BiLQ=-=k'Ha8u\SW^Z!/S:U@'luE074=k5L`E!f_r-$cZdcNZ/Xs.eJsEdIY:C[+FcDp]$'L;1^3Hum@:/pX
%p!^H'2dNjs1:AmGjsG.Qk18>CR[[N&F),Z2c2Csa/qM`+h6"5'Ql]k9'9lObRrd%dc6_,A\N)T-kN:p^gmjk'F)uCT<lj2;(j*k8
%1$p<YGF_F=7#RJ&FOOjM]k]Gs-`o]JZ$tNr\a/qjL'/:/]HG,Q%Cq-.k\&s6E&1j&@U:-t?<:S?lUjiiES#tkrL*d*PAs&n8Wf52
%?`tGL$cTI&P^j[s6F"u7\WY%Ag[>!@-Lk!'G*AZ4KWk3CR<+U34gT0fnfYT54@RlI]:"nhY+li)JTp9^C[Ie>Kc[SPMmpt)qskB7
%UM7JF8>HM"[%7u*rHXjqH@+2T&:F9tVAN[qE/.#e0>XfZQYg=RFaa^F'&.<6a.ub&+HrVWD&jFMjeP:)fR.SPrhF$MIZ<[;aJIrN
%VS2+%Dk3O`:Us*T'"Wj.D(!=QSHS;Tn=N=TRjb5dCH8BeYR$[_9qL7=5347FD0D(r!LJ8u7$n;I(_Jurg>$i&Hfgd5<,2\>HBIU=
%BEnj.m:bH[d'cHV9Pf+`KRPc4c+f^,HML/@m!"jJ7<><h2_%7;S`lD9AD`p9R9#3JSI>ITmu*fYV;XAq.8U!3bh<FLY._1=m(>7H
%bs8$qO]MTqjQsOr.KaI*VL&d8jX(D;_4C!O,iMa9'4b*s<i'k@.jlh65>r3c\g?bkG>M)MI&p@0]7nD<-KJDk:,,,*G2\fV^s@_p
%FR6nM3)2U=SpIql78%kX)eWM9cCtPhrj'@S<I0*)0:\U3poUli8W($4212RY>K*deJ_<[h_9?HfI/_F#H"!ERCf.<"_^-_[0G?QR
%V(D4Ngnu4So%!<O,a9-'S-<4Yog3GPHFGOu8XjG;Y1dR&\EL"g2k.<`g<k$pnaZKp`(fe2c$YM0jm,_g@l]*K1%eO%I\2s@,0P9)
%?b-b0ajWJl74,0CDVZ$A[;1&2AfsWr:]_DTnCu)E?].1k%.)6gT-0E[ji90V:WGCD_/7%l4%1s/:gYS1"Bp/%>]/XRXU4hgVJV)M
%Kqfp*3tpIB4-dV%cO52keGVARHG\G_hlR^hAs/-Y-R)4\.4]Psa_Y`fAs4PtFo@`]`^H"XfYkUki.G((hEF^*-A<nEq.o0i\=/jE
%oigODmsrW8j$Qj)=\X51qA?\'SFVuF<p(7DhkeqMMWO:uZ2@<P\Dg/C(,FXe3o$g'H7qWpQj;!sb=6oH7c>7Qb6G[X5,m&l^\mt9
%0:RI':FNth>+L)+WbrKD4Kg^CXReAIbMjn<BS"I`(L#9\RQhJ7I\kVsQ@"Ume1:G3jko"BqZ7meoN0aj*SVq60s07s"T^g>Tk-=X
%+]+23\b&0:a1&a5&!e"7G3XJ[j$Ymjmsj?O1]$a7@"5&<Q$SShoYjFfr_5WF@Ir^1-(6"?0*B%19S^D[Cos$KD7<=nG<0;<h<kl@
%'.Vc00kW`?2,@5Q0Q>)A98C6^I5BEm:O=o`]@15U-=IFcGlJjnFRY'8s(f)7s)%D+dsL</2K+?T*S@UD2+s.J8Lm3,r8[e&g/4W&
%U&JDhIYXTZ4i'fQf-kfXV!R4N*MSdP_hSg(oRsCMgj%f)8j1r[(TOIRNG?"/g*n+fhY%F"230K_0qHX'Mq#8W)#mgXr1^*Za1iB"
%09e[/LPpBAmDD-qXnM%V_M9&iLJ*W;hJCnu?Y:E[FgB)O@&_j.Ss:t2UVemERf5prrVHsbWmpS$Y00`hW@cNAI_#'5=-I$cn`ITL
%./l5)/emg`LWN@iJbLA9a[i_d'.8I61PM)YP-Y>!SIU7l3fDg;Vbrobp@hc_FJW8nQ3IXgk:eomr\r-IroKP2s6]VeYG9l:rc8G1
%HNlHT]36Xi+#`OHBfE9_86J-+gQQLMPVDK9f5]7T)2jiald@mpT#K#)=dKfsBl/t5I+be<^"eo$dXSstjHo&0+RT'"J*HNe^$_2!
%&prU)j;1ABB;<kaBOs\n%VZh8='r?b-^VI9GVZ%bVFIOmDCOF8Id-<CBGDfZVICUSEi2_XFmBi;-N(oJ\Q(C+PsdGFCX"!JG4!)h
%+gW2d$E_TNUX1Ke\CPrJ:7\c7]uaU7po$D1m<O_9ITnZ`n>2,J12s:,F^I2eIT(B,Z`&Fu!iOWunmZ/<ofifNrQ9UZ=@Hh+WRPgd
%gb-)8.&RQtIs"YYV+RY)<2inZO^PJ@"&e0NB8i))DDS\!W1S/>-friqUY0MX4%-uAWFhi,DPc'P>.<53VsH2q2!H.&gaogOZ(!FR
%.8f]n>XoX1@mq%\2(RpI],M;),Jo/0,?E\QPY/hlWtj?$_luJ8dN6D)]@lE?#rAoYb&f_)e6\j).C]/;Zj%'[;/ba$hC+sQ\fFsR
%@iT[OD(FuX+fJ(&<+[LK^NIcN\-I9mpGI9EcWer>;5(R&DK`)J5*cG#+#KGV^5PVY)8#C<gM,)8US[KmV=r%gX_qt4PW-tR7Cdhm
%=dR*'0?U+`[hel&98j==,HEr#U/S3.i@o7p;DH4O(\D=D>Ag.I:oEkSH&Kc+OO:E1=/XA)"qe)UZ>9Mjk77cZ2_\;4oI9ZVTBJVE
%<AmJ0W5)"GpXVSD:p&6jW=GK&0hlelBqaC_UkfKg&KrbV;E!"oCmVKPG.q1_7MpJFdjC%%YNHpn+`Y/%Y!+FZW;B>b=Ju;+D/M%6
%GkYCjd`\c[gd'Whmg$(%n`V\iAfNS[SQ=dPV_Yb:G$m3MMgaD5J.\W$b(#YV@g;X*qqYkJ8>Mf&L\GPZ?N!`=2-Z@BA[<dc.o##n
%E(Tsr%/,AD'hu[9oBh)]/Z/+#5DV^`/^n,Yn@dum+4H0NCEo9Lhe4=A.lLS-EbWb+V&m?eF9[5UW,IHgOYOLu4#_''a)paS_M<PN
%m:#U^G*]9G>%d6BnSqb)]HL/pBmt_FK]_*6R5UU3<KC,>dCG':j!,+VY*O@)Z/[t7;=.+9?';H0C#t/Z"';<dHgG41X`UC/P%\eX
%j!THKc+l'Qj+=_a;N6]^2:gCf]sMkK9]CfQq88*QNs<?)lSP%r`K3&#DC)&(`+nb/(LqR&^p,N3H^4A;ZBh%N1D(D!FmH=^'SeEW
%89@BRVNa.<REDpnT=<)h89BgXl1q)]NX(t?oPX'>L)Y"hZ<,p&8$l@bb"4b!1lZ:m"0r+gUfe-;`rpm&m%b"2bUjdSQ"i<N_a=7!
%d]!tM(Qpj`%q9j,+k9W)2BY]62CUQL[%SN(AJ_HN9m]R#hlV<(j&RVbBN7Tl`j+p%dukB;0%gqRG"a+B[*e`rL"*mK5"V@nBbWuf
%P]^k"^5`gJD=#L#`FcOQ1[/S&>ej75<O(DpLmHGe6O(N.:-5aRg9>=cR/e8)i?&m+7*$l6/4jB;/o0$f2>VS$bftg[`X]ulD2I76
%Ptq>bV/>[++\Z,Y3`2E&SNBi;^m?o.[MmE6g,+Ys<pI_bbM'@5#pP^"(E2g@U"-kj!s]Qt9?"n9lV;h5QSjdrNW^7sCaKHlpLfY^
%EI9+ncI$XFP:figiI94RffF$#04]KEfBs^QcD376\(\4E!M+OAPG8IAb)80kSZ\;T$F#pND?X#ZCAK55KSCaulBdH1<>_pd>Ms`A
%7LelGlZ0%R&[p&dgk!USVtp#U0m:4'B)Xb%nQ.M0BH6Xb(.6>MXg-IM\>CXK9uf2O`$8Jf(G*2UFO2KXf+:D#gSB65IbrOFk$:)M
%UKP6cj)BqM,nk2R9AKu?*GWt[<[#4onNp:/.^dtt;W8==`R(A4d;!q(j)2PT&S4NY@l<tYC]#Efm=;?h6+]IshRJC1'Ph]RCU(R^
%[?92"b\@l-]kjUsH%oR`<55qp3,T\6&M1$+M#V!r,dEJi[@\9#B`46Vc=tTK4ARgLSTNrB,`ioHp>]o67u@`#9[kF)F*,?+3F:U*
%[9NI->hq!@Nm$Hf,5['YatLgIX#-m=aI7$[Wn%&'/E@BDT@ig_R3UX;m6'qeP9k3hRGJHA^<jEl<JpuRX'N`o>8NA$R^UNl9iBF*
%B:#t=K;2V`ORfq*+XXpdb6Eo+h]BDucPf=.Ua`.[]=5XV^!V&nUagM1/=B]TA%[5/,/_Zl).]_5]1Hj]]uW&LG=-B1/DOK5j6#&7
%E-%#GI:XC>qZDj=lb$g7IBaCYQuO'b#X<\eY-O$q=4ojn=2UW7,js[:h>I]n0o0eU*f':%0F1i.`0W<p*+=KecG>l)8r,5Yi\8X^
%]^g[+X]D+uM`+S6Q].D_Ql-A:!2S3V-;"]'HZ;13P$To;"Pj9[.,>N[dCP!D-KKO6GZ:Mg<c*&:R<@hdTjtiC5>*/HI-ANC>gu-B
%\65d)<9_@qWGt="3L;[H#tqMMlj,$L*bXI_WE8XhS9fTJ[,Ru/hJ?F2D`DdB?gi8M*c=q$S7M?"gY7:G,J999il$HGjOKes&(]T#
%]";-j^\#a\o4iP\]sUj%>renAGa?+L[!4N6.AY_-op_kKqUWgcS#s^aga=U6TC9KrDfpteIa``X/1B,`AQeEUpY<lRFaJQ0C\n&,
%g/>8jhL9?,UrTR?mbDJEXe'Yn:7f2V=^Q6nqq9,ea2M:EIJ7:5=Z`GjoKYX-?Wch_DKU!W^MLD%Q^9J8`_N!OTl^(gZ+ec5kM4h\
%2SN8]^8&a0Nicqa@n4/uLWBDKf:P6>%^P?.k<Ci\DWT(<g0+EuqFWhTH]VH8kiN\j9#pQ@``N/oiN$kaprbaKUUjc[^N-u,g<#r_
%+4U?\^>6mGe]s6K[3p1UaZq]IG4t7Df*6Z7o-:_Mg:jhs*.5MlfjDHnQV"hCPe-LSnGD3tib$Sb]pLs*%p.@<$dP:J)_[Pl4]p%e
%I?W!C]D!D^I<Opu[9+uMiD\jSk4-`r4Bbku$\#-sqqFa)la,#/FlCHujjo(1h9=1DSKCtL^%KogV[bjZYJ0t@SuEOpefHr"Z22hN
%I=>/crJ0cM-dsP_Ws<8fW]+HCpT4=Z0^%=FqsPN*Zr5"0/C5`E(QT>uQc^7IJ%$b?poq*/T&!_boknh"oPh2a\,AnUHL,8`?QZA_
%/U^g-O)BC)E?EdKBM"9XrEIp?:\pW2>mIANDk,Y4bD&:>Q?FhPjjo@F_nt,ur/Cq'>Bl+H%psSrDF0DhNc&aHr8kcTr0mGgp29K4
%[*L@AIZr1G&,%nYn9aK;j2[W^G4*Jo,;[]Y7r,0%mk;HHDY@[9j1X19U;p*2NG#pRI-FEm/O%lUX0To&n&@ibOO9UL\"C2,U]+TD
%*9=gua;mKmraW92\9iQi+2)s5p,%!g3-0%Blst9X(LL\_C^25In\9I]7@d$m2rB+3dd:I7Lj+AQ^Rk*g$``IBdqI2o1igY6RjCNQ
%NE`pei:3r"GHsjYR3&\[W#iV-E8Nn'YI@]5DqpTon"0#$"^\%%Ba=)[4kOG$?\bmH\F_cG,?2eI@OQQHl@VU_`I+hg2QUQJ$N7AD
%<FhcCqP^[5HI03j3I'->Nad'C2e/eIG5m!V#%.\oBg:%2bV6'.HXSqLGc,g?H`Hg(DB;qrpN,FsCWS'p5$I?u6nm%Va3I`Jn<maS
%>?h)ma,teAc>A(*$\f&1Xp4bfC<n]>^2CU)B9/YgQ?n!Zb%FAT&'RVcm).CD<Bkf]+'a#5*duggH>r2tcm7g01lq4.gt(.FR@a(t
%%EuhsN`Y'p7cukgY"51N3a9ju7q)1#eU9H2PL]&Dj#C7W=#@8/j\NM^]j'5eqs.E;YM?,)RGPO\,(&k<dBen[U8OT1-D'AHY7!Gd
%[lT;@>%[fhZeWI@UW'kSE.%DZc5aK1S?0IgfIl5DK@fSV0l%<$c-JP31cLa>0CAZX^%.aQ^)Lr*c[OZ+T"kT-=qET?kL86-ig#Sm
%B(i7Lqsej5$VuTohKAe1e,/CRo+1_@H;'9m7h#s[&,\MmZ9(8\e:7h8Ij]H1\bgM7,jaXaL\G\Vnj8-5f?89C]VD0-,8*7oZN8/]
%l[GJEl;hD9l(Ig-&Gc/C*V&m5+$>"J*W@q&^U.=n<[t:G=PO?B3QO@5rcC08[cuW.?[4LVpZp9,i5PQ07eN17`dW@$+&kIL;Ru8!
%^HHo,mll0)ViJL*aZ+K^gtoF,h>WjC>M5QiI!SJNXr^a-UQm3ABefL\#CB.*)=/VC)2>=6i/h+0a^=`?Nr9m252u"D-Y*84OJ+FF
%bB_uLcL';?+.Ja5Z3Ceup424Mce:XbQi2Kr0mMX7)!em"5OS2HjX-A?0$fA%J^r+4)4:n6.Vm&2J=m"[<dD(O@sEr@/7HueT#tCb
%Ug_@C6%j9V<W'uIH.'a11rekbOnFpgf0(DG1J3"T=c9J\^OqS#gu$&>0shVdR%_cd:;Bq\E*`gFC(MVNG[:9O4B1ds>Q%.?@g4ma
%nMnCtE*Hl$r2I.XH#!A[TsV)cOao@:Gc/$R5.qA'Y$'#[pj+3$jV&>:jACEWB`)Tb?AFOl4f4"S7mefoTk.eSN$j8,anGW&Y<u*F
%p83<>@rsN2[?(4'bDh(3ba9W]g7.)>O,XFERapI:QTT.`FN5_J+ji!p5m"i5Dt(g-\03N.G=Jc*N4^MBBktC0n1=<UT^KMQ:U1/;
%[JK`:qO#q2GK1!+0N6<a*M5GAL%BS28:G(ZhEJ.+f9JCla)!>D*>2Pg730iZ\uuq$nqWcgqs1<6mYqI@Dr3d=AD?\BR#Vd-'Sal2
%GWQHnlip=%81Hi[)/guMKBDua^.UNG]hdg[>Q3p.SUAF;]D[\jKY\rt@.Spj'/Z:`roWe"Z($+>jG+\(bf4'OZWH%6PM,D@f/=`;
%4Brm([@1G5(RgK2Z$3BiT#hYS599[C]ZP-YZ=[URY1`kna@q;22Rq>*#3)g%hs=qPcd2<*cW^(XN>j##4oM[WH2d4hFD*J>2[a8&
%m8rD8d0Y$h#)Vosl(2UO^=]g&fWJVI,;Li)Rd\#e;LY3!Ibik1=P<X@.eVqbX=3+hIIkq,f$_++&j7RZ/bKDbM\AJUIHFNnp\ioV
%[dm]g>Wo5AS<3#_?P-H_J+NWP;?O70m]0&O_qhMFkmmrL2PXP2_aE>M3=[+n:6t?3OXIeb*e,C<ma^.[l%9N"LR#o@<m6"%U2%JC
%3@!fbkPNgcGZoJ:G+\=@cr6K>n1s>9m2Ht'c/_!Vj3D-Xp\m2*I9M?`d5MR?D1gJ?_mAq*/1mjn+TLiuEL>MWi#e05^1ggFQMY-9
%gt+LQI3,\&%&If1&,u8`GPpU>(3/_hcG!B6PbZ=^/4;fQ9^M*!S[7q5Q_4<Sjo2C[B"e)d?3k=46iq-s[i^&+r8Q#.NRtf.[$hN5
%Qc9WarNMB/rGqpT5'O1ErQqJ<`Z<5elQ5Fs43rtVI7nn=3FRD"_qnp"5MoRgn9F9g0VYa(C"gT!o8U'm%nQ6J4mjEK'mO<(DOfC@
%DY/GB3=N!S;QX\"VS!&K5PG%"0FGi_rDu5;-r;SWLU`b$rSYfP_N3me#QFSbo+*e%`&t^f3;BPur`88FmEMDl^&I.`aSWcBn7](B
%QU,l:qu_2tPLF]AG<1+G/=%@K[6S4AZo8Mbl=bV=c/!KcWFgM-S#aTch=$ba2h_e7KU&R&s1IdHFIk,ZGkJ;A"9,ZB^2\NAh5FZ/
%KBO/m7n\)cSH1,!`@'?EFllHea=ZjfHAl>i_(e+S60I_(<`elQn"]j>nV8dl7u'dr%>^"U'0F2Q4,9_m;XDY<rN)J]n!03j='g>?
%lcH41I5>6V)K-g^i,\EZUQU!!IW[e?l.tpJe+2+/5\\usDCbJ&Yg[fW4@jpJU\<t-`7f`&o$Z?=eTF%g](apJ&+8cDQjE"V*sbKr
%^@`^Q?[;C@Z?lH@k[],'I6KiZn8C&O_^"rM+iW'!53Sn,GYF]uVUcrZo:7)miQ'JR\bTuqFUW\6a1VYDSU5hTib&5drnH_`!D1!Q
%[l4i"qNp"-5n4Cac)&F<DT5o,I+g.><ppK3;9#)NZ>`:g28&1_+23,l3S7KTGmp$0Vn][MhHCE$RGGQ3?WJX`K4EX.GPA@$0s*t,
%e"_[d2`pb*D>F)VJ%0h$E;6F+iu^/4l'!(P5FrS4r?&7Nh+Ve;4@uTODjLlk[MaDF_<i>fq8GgJDs0-&['OWDa68@b9`!lA7^ZhK
%'@E=ue;m[;I99inL2(gMVB,+72>)URNVhnIi[-1Pda=-'-6JRq<qu3&5$QTNR=ea1D,c-lJRpM5W3!28H<oW,M_gh7>2nbcUZ2/H
%FEhgZ14'8l5=Pt?<]aN2oV0%5P$]X$-i3dBp1<sbPFgL,,C/=Q<JmDhgVpk^%JQFL);4tl[r.9]Z!QT0T0:j6T75(0N.Pk(1/6j'
%>d$?+SN4udh"p%,/'W1%PbcJ#r_T=!@^P09"17f:mG@5a6P0(Ik0_)-bsAaBjq\rl\\4V"]QIkZ<qtVEk1B'm,.fEs;7b<24PI<[
%8<6o!n\Fsb3B4Ni@t8*]D"ks*0hs;f)`tp"UT^<9Tou=_o%D5'dN-rKi>p/*Q4CR!Ro/;eSn0ej14H`W'"ZsYC:)1oleEhK$O,0\
%pQk,<#<fJSm'MDS:X7PC*]FZXg8NT)4(H8YDk,YN4POg>gjJ_cd:`2kU9tp<Dd\gKoOiWsg%J&o:Gs0^"/sfjOH7`G+Jf6gc7Q=E
%5)0"j<`F%uAcCPAh+m,.#??XEp!NAtV-Ku8/e(32BPraHoO"/[oXV62jMnZ-06UlQYn(9X%ph0.kDmGme_JRNb!NW0XgOJ@<9lKr
%LH7g[+9;TJ='fJ\Ia1*+^@kBF3;`CJEdgq-0BQ=kHT.^*ICDb!i8C;XPg;JKcjNQ$[p>pbN3K&AmQJG4QT[%RFRJtu9fT_=:=@io
%GP=IRh<H!.`n-:B2sr=JZ?+or;eXVdEk]qHHkOB;Fm^p>'*H`Kn@qHOYP!UC&>$_UC4:07Q3g>O^V#iXmCq6!0/Qto1[iI6ld!L?
%[sofcG!qu!H5?ef1]IBUCkhq9]"YVC^,Q$GBQ[qq:?KmPC==%`Cq%\Fmc)6Uc,KD(([r+rN%_6FoT;(`:@Rh0o,k<RZXM`Q4r?A9
%])/Q3_tnYUEVesLgpFZVa>3G_N5>r55gOBKM'E;Y00<7fhtk!nYk9:bU,hPZ)L$Aq?\ej9DmOo0Tha14p%jSOqUOh6N-HH1V+1I`
%]d6D,Oh3lE`d3n[QE0,Opt!CRoWpLH[DmV0:[J#Ed`oLs5>#X0;;NiEk80b/L%1^GP(!<)(4N2op5bZ_@SkeTk/g*[B(.s\5cm7f
%robBK^:`FF]Q;X2rp&fN]:&Wc)gbQ"GcfbEXjSOV[S`eK<d"DrMhUYJXl.aP)B<&9(T![,j7bZ61kMt%Ydeu.Ge/8o]7W36^2+S!
%D;X-I4h)/hff_rckp0&2^8LA$`:<n_7Z/;&OgRNk*$<Tu5/$uKeFDpm4X&(ooR#olqu!"&Zb57?2ol[WK03bWF-G<e5jU>@=l&lP
%I<Ri`?$b>K4^218,G)IuOf(m\:h,K!ZZBdV7eGnW#d999CNmcI[mn8Ph("!PQ85Z4+-Oi!el8/"5O3Kom8$r%6cUBS%B1quK9_d1
%O1P.*?gSa[c0<405K4#p;0aB5%<1;1'+<CE-^#55(N[W@R^[D%H08'(YaU##pmB4UV%_RFp3hGPl[sURPTC8%NH;;kOHSN;1@Eu1
%NDR<8r\,"%[6)Gs+@U4\n:&'!n,:Mdo4MEZjN;7FDtZ+a/:qdmM='=MEK\WYoub[_4%[&ZDb/I2e#3#ZcBmYjqVC_Y?pmf^GqmMi
%Z5[sY>-BTO#5#^-Xf[Z#_<9(<K?Us_M0GjQ`6!=!/E1#"_(@4]Cs+/D#I5E_b06H+>5OH.m&i9K?F7>(6#WLK5?,.Z.qT0%\bhYI
%7=WS8/8ou"hVRV01qC^lSc/LLA5scd/>mF'CU1o!9TZ^[d6IF"oO0r8c#@q!25qaCQZMtKjon?+K6nPMX)#mJD&F8_KUCSEpRp#3
%"qf-o#(:o@_n27*T$:k]-$Ku3SYj6>/V@bi^,MIn`m-OAprC(S\7#h'DqnXQfj+BZEJ+,A[D#;#nO:n$Es5*]r8[d_gsQ#i*Z_l5
%:U`M-2SUuallDjBYi"1Xj&patm!LgC9=J4lI6n:g'4TV?Ir+VEH7i4pojS/*[AMjJQ6+J:IC#/F:lAji^YW2;4hG]M`Rc5lRnCHo
%EL^GDO^Hc2=,$qJ2$To=msI6skDgKg*jDDRXQ/&Srf$najb'[Q](n5Tr8YJ`:BF'9\@Yo1hY\;)HKlK'cI0&Lr8H)YQ/U9c#!1CQ
%%#OPkJ\G\k:@iZA6OsAJh&E#d[k`pbm>"4MH'S8)q/C*lo\F-`/'eQ@?h@2L?u3S)h=sG<maa`(Bru#,OTkFGFuoBa_(@>>k\B;S
%B(9Q6`+]PHlmE!B]6OXnIgAJ\D88[@`F!!N]%kOMAGnm$9M8oP5?ogO)OYW[5<Bb%=j3tMYC:c'iRbOL<:7rO(E7gSrTa6sBJa0=
%]-TLoPr2b:J<md7^U(>sm&)n@DqkZVCAk5SU(<PSI'bhN/8mX5Xd9C(_io9rRd<sP"5$H'b)K2@EGciQ0E0$q\!QD3o"?!qqhe(%
%g.a=,hAgCKh7B8Ls*NNs&0+BcbAiZ0JMb:'N4]RKgoV?<2d7n-=Btd2?*/;GhGp>9qE#Loa/(mB\T'Qp5<NUZC+jNd.7)_E_F]$"
%i1AS7#(=uZ.Pm3sm7'4krh<Q^Pu$BQ*gb1n29hT%7[_h](X!$FYnt$F[<QXoDO4:U<]S\j/Z6gXku>:M607$JlHdq"4k21_JScgb
%;qS!pgb7A5>`;2ggA%qF$lTlW8>k=OH!pK\/c>kXrn6M4RRAR'7Qja(<U^Al6O#\&<9gGT?2CC,,dNZ/#PSG$dumV""pQQC;\`&"
%0;PTOl1Yi;8IE^S[8N6P*URb7'GK?+kP3>BIkZ/RGogCu9=&LUpErpSVn2OW'^8Ab6^p%f5VnC)CfQpjg`h\8-!t>0hNa/Y<m#n=
%fPr@X>e0A#5h'te6Gu=!huXu>"4nF2[C,*e&Oo8?oaJ6M)&&lb6=Ss0l!I+HB3_%EI]#G)Y#QCc0ct.WKpie?5"]S/THm(AZR[tc
%^j1)B6rH5_CdM*A-q;"A6L3;k;lU@.H5ZD9n'=Ei]kGn7`R@k_<mD9l8sRfOjR^Pl0to9^77]*?hl[c0&bN/UeR*\@cG<k0S'!p-
%lhX$&?gBV-,\2oR]c3>KYG:fiT*l1j$!kIis(o'fqTM"BIV"D=`_iG9;tsL5%@:tCG]U1h$_YfrohqNLiWY5V/G*Bh5Y-bqdhIu@
%>:>BPL*YNBD:D3`+CMfLgKQ\@>^62rH"!03QUAe<CZGW^.j-@N6!(Q(fjijOni_$n+auYt4,;K8.jT9%LA0:A>Cq2Fg-D>Jd+EWq
%p4jB^GNHS4,RG:sM,%N>N0Gj^QrpPYQPI&fqO!U8r/>d.g0$uqWXQl*rp^9W]MKE0U-6<e6,3EW3B]!rX*)g8^el#"*%mu$/NfuY
%.3G('CIe%aV4'f_2M^B:<WOk)Y!EsOA)\V;<Q"M_>8&kIa6sOE-s-/T8(cNb]s@q^8qMQo%MZh7\,leQAY$g_-ocH+UDl8Y=5jkQ
%P_Jm#`toAu6?Ts%<:s$4dX]kin\-ffL,T#Nls<SqN_Edu:j@;pB5e@<76<%"gm;3*AQ5YPOA9%o`O*e<0t(udI5jT4@TgLY>]@[M
%hm)plYkB5Yf2:[A4=Xp?r%M]/*r`EB*e6=Bs8LUo2blC-;EK"Z]*X,Mb%/9?cB/tsXUhD=f_O)A21O)UZA*WGipAi*)PHhSrqg&.
%rkD':RaHJ;d]O'bcc1lf!f(-uPP,)O>8eTJ[U$O[aO[fgnp?(tjTg$YNto5u"m/6BM-hqNWjM3u@;=KHDVEO4T;iLM8_^0Fb!62C
%8-u#]5Qg#B4j-p+cq\B&YlW6dm:nSFrV+&.T>kh)Rd[&;jZBF^!p[/SLG"*pg30lj$For?J^?%NNFgf6<I7p>:r=uGUsdDoI/uCC
%9g&e/[dD-<D7kjbgA$u[D/;>d1\7n>1OH6;*>g=ugO\p+OY.Q,KN;HK3J;FD)F[DE*6)Zrj7=[/ES3rGN_:4Ikr]n(R3E7-?=TX1
%PbF(eT'c:R`j]ZOBh:1RXBDG;VF*Zf4d2c/\;Um!B_R@&BkfqIC[(+Fe=QBY$CsF/)q&n@)2jMlq1>pqi3<QKNi*?;<8]dPUSf^3
%)5I@/^X9u)D7Qt4as[$6;FfG=7sfhk$cTBMR;sN'HD/ohd1p5B.E:3U/lIW%;X`N5=je)12frR^!B-/R85HYqZY!PX3>'P'0/*ME
%#.-#Jk8C9F)@mSO[V)Ldhc0Z2C!-lH@*9c'L;"lt%2*VI+u%UaL^P,F"%!5;`XgLh(PWcD'M,"03ZWGGd,Y";mF*Bo,Rf?\FkR#(
%;+F-gNm'(oIEciN2CPnG:;BB<o@'9Mn03Z`0f:-lm3sWKORP#_TBnP5>tEND4u;(&P&?D;o?,_:IQAU+6<cbi$U!<s_LQWWBm>S,
%*R\hM0(qjA^*hBR4^p#HnWfpZ5I$WF>T]J);!9<gGDT^.W'eChUZq$M98%@>>%E_hh0$+GaP\rt9I0"Vf*RNe,,CDh&3G]nJkql$
%)HkC?'R`tt`<k62a["<t_6$6h-t9(Ki7KNDQd'5]&a-Xu7o'@$'V8$k6C%g4q`s]&\lLlA(*ap!Q09;T3Y8a?S/U0;E'ZT=o*F$4
%OClgT`qHZNjqf."+_2:R[4Oj-Z_7q?.U^_<c8b[m?V4EE39_U#`ENPt,UXXge9/tNd4/kZ=F<(p>`S2#hH3DVJhZQ&!Umc.@A1rN
%dY&,a8;EKdFQ9ts8<B4A'"ZIM<7Hu]SMklGOs<JY^uYYjFQ:aWR<CaFP=\muan-c!"QHVf&ZuV;SPHVIGO[CU\\r5Q<`o9b=;2sS
%kpkRHq!gH]18237F68?:GNBE(TddP1TX:IH@7)/Zd_(C'#\-<kW-oc_GAW-KC.<uuiIgHX80R4l%j^f*JW<MGc_-C'OJ<YknNo[^
%R/%jd+AgcFg(7/EPX'WJ&N"8!BY+<SJ45p<ASHErkZb^WJ^#t^@asPQ.u/t3-5q4&BHe/ec&l:0ap,Wl7/[EW<P1Qud\*:"(EH9[
%+$)M9C8O+V`'d8*&Vb@?*7sO:4C<7W6=8D`d`mHXp2%sr-EWB,JScZqF934#0%_SSJ>Ih;qnp(^9tfY0XYnQ]Uf'`=L%I&pKXV?^
%Lmia"jbu00+IFI('GqiWgUo),-mc+20gLXs[L46T/@)"4\;X\sPUg>m5$k2092d)uL]JCujadLg0N<V-Z4S>fNfBc-\t\m"W7JE;
%a@eW95K(sEeh0*%+%Qa%DN,/:rl6\goKdZE<Je59!TIraV(Nu1P(TPkJ96=,_fC?nGRXo]5#E\)Bb362&CM9.D+0Tu!I'n_=932Y
%()T-(0??I!7g%#+J4(_)(=.%=6BiCA6=86i!C'GW`"CZ,#"p3M#tkUd90``G:dcW4AkPISQjiMckQE?_3s\3J)2nQ>KIaPjpEa]K
%B+Zr)/.`Ye3QbqCb9Ebt&6c\$qU@4Q/g5Yp,,J1ENK8X^RIM\E>GBag_gGn3MJ1Un8u7A\R'6mkD5(H:(`_Ks"S(GQ0!`Vhb,Z:#
%D%a)g*(\++6U>F:@*pML'hI$nm0lYokU"qVK@Z!)`pG<TN@hK]Zjd&.6VF\'&N,Af<Qdjq-E)oKe[/&*Q=0Xtd+;)/!Hc+DGF64.
%2X1YjOtoG_/LU#renp2M.N4`^N`:%F5'($3\t3D^Sg[rH#j0GEAIF1=!Jl>8..VJ6CFE:-!Ek0r?;JU,Zqo*Og7F:0!<i<Jb7sB"
%Q8UE@?aTCgK7R.OZj<DeBFs2*_\.gJC9[c4mh*LXRthj?BG/%pX5fZud(TjjVqhcPW#=f[+De;<J9WpO,a[PQ,&a!r[MFB]mg>SU
%X9LKT5\Ys$.ko$O[''nO#FZ/1Tq7'n3L1&hKNWg^1`=UJ,iRcnP=UJ%T*YfVb]%.ob(?ARVFDt<["*Y#*J1:rS&^1n0@BoWfa^@M
%&cqLlVCD+AL^Slba@+!2!lalJDc@k-qb/Nt,@([$hIXAh_9='=6;8)NOWYomQn@s`[=[7R4,.>"^>\BgTBl*:4jfQ$H8'\AJ3Nj"
%C]W6baI"?K(H@F.U5#Nuat2o.OFai2Af+Yd$Z[2@2";#aOhQOe#DhJpX=8abMZ.&eMiRQW>ZRnBBGGhqg=`'[D1>b<Z>?8cdsPQ]
%_b:k"#'cFM%RAr<o#3=N8G>:+-ba@9+<I-8)%$jB_N"[&+jds[E\fpV36cEE-otUHk/,>A!L-]LI=H2lLi@ka<[R%Biu!R]%6#Ei
%gNQ=MA^d%_Vh3t!d1'3M%,aHk1f&^&%i64;r`/<WJ<7+rg*e_*4Q->mjCk)0HH9cA6jPfk"]I+S6\3$<FBId\%tH)7dRt1u9DNDq
%)%#J[/h9W0&d_/KYg4!`/RDl#!E5f?iLg=jOR["G!*HUfPCh>p``QcE[NhGXRe7hQ3!9O^2pZ(F"#pX$3>r;[YRQbPV8XT'M/De,
%&ORltlj-T&1Q8F&#RG@<AlY>=&dVjLh3Jsj&&jnW'nB*LZ.4)'\AtHm1cO9%\9gQ3AjSRI2BnW"^bbL4>*.p(nIO&EZL&RY`XuSY
%Oq6c`.lK7m9`uWOjQ-*bfL.[R&+#V\Mc^LS>R2kM!Q%Y51T,d\lQUk@A]qr@8=0#TCr:l;:Vm+mVH@Ftq1>YeFG1ML?<?i+M8g2!
%;Z_4s8V,7`r'E+O4KogZFf=-5?6.Jo/=\cBc-Vh;g2d/U'PNdXA6&k16g6E=T*iN6$?8%^p.:PgL_"rn;a@^.1F<E!Cn"1NS^ud,
%VP+]$6AdoR&V)"Ol#G@UV1(HN=[6W=P6\\G4m3T9\`#s=L<Pkd';^Xe09Y;q\/sn'[b5"^PSinE1B_Mt9K`H3@ZIuQMaOia?'Yf9
%$^kMO+YYb9H#e:%nbd0N\%f_]+MQn2bY^p+-^i9jGlkSD^]r/>QJahf;h24Y&mk(hau;L3Z7?u<$W[_=JETN$?ik:!dcRdm^8OC"
%S8,4#!lB(nJ8gB2U\EQB)1;6fU2Hcb15V\Lc;S,p'3ZPP9sT5,?/r^qLFIaj23s9dO!%4O0]L3,DG:[LM^9*ITe$]p?^Zr.oc6C)
%<o?BjI$/Vks+^eD`]5,KO,pZ(4qSH9(hP1ZR=+Gi5a53!^f)p20XLd]@&cb+%>\#ZQ#4'$YLQa]a@kO=VQ5GH_@WJdHDDH8!:`+F
%+WJ_k5uW`,A5`$/R8NcOMhQ3R&3!M&R<b0[Smt6r+f.R\3s&ik&.m_S3k;)0&9[V.1R^bV5ans&$n\Et!eH.?#Z5`o0efg3@MOET
%m7T_":o44>+qQ0+dZ;>U&tiBgA,584`,p5L7k$5PnZ(euKFmc#)5%u/"40j%MduR]Td#N^0#bT']4>&g$&!>E!102N*&h:3]_DMP
%'O)55W-/SH]%ZgF[(?md7.Q4h,R\r;!DH]HdtDt#18iD.A2u7VE=^=X?YppSR6=\X#!ce)A,<aE9Zr+j_l)%A-4n$=7KD2p7^lbi
%QEUT#:,&tY=uASWQP>*V+;kYnpjk[m:W,*[UVN&GLYs$[Ga@fU`Pc"W"6+8:!fY@/U`\oO^;(Eg(D'B`h1meN7iLBU,,Vu6YSQ$/
%2E3@,,j@!&m0.(+Z9Y3P7R-DVE*nbqJ]mW)![hGeLh.6HYUu6p*kMnuLV74$Td-L6AC6+)D2bq8/jm,Y*5kg`!-uC5PX?3YeBrmu
%8.[9cQN6PC9/,J5bq-(!K]9l+/=ptoqN3(;J\<L`Gjl`I+'`*F;>j(=FAd(*>3oDsKUr=&)i=YbXMPR_R=LSNUEO;CkE@$[Lig'U
%k_Td9>TE`Qmt`r=?-C0*TKqLj`]V_k?",#gLA6a>"sSoJ46+3BTZpRS`#$o+.kofs(FkCP$-.$d\60)GgsO+3UYuf?G/6[[lG-TE
%&?R15Z;hS])Viug"@&=FTk>Ydr%Qt0V?e#N*mLb*5SEn,\1i?$AGBJZet0s/V>gV`,AApA[*_]uZA_dZ4OORoRqCHfN\QT3bAmS[
%&u;1LCk-)B)dW17!9f#I47%`GA6qk.Y2^JegQ<=*]^\0i]8B`S'1q+4A,e'H61d94iX^p,Yp[s%>,W'qj`;BHn/X5)kST(W*A,_+
%C+.-UKiP-P6m4IPN$V+?iU)^tE/iX`#Vj'W1hea,7\pu1lWjup=GS=)^Vmt@aTMkgFL(S518i7S=YUD4Voe%./^;:t#LYmrN^(_;
%JZOTGNmV.UX=qrick)hUK`8f7`?F9Y3b2;R+chGE.?\d=@mlHVkCHuR?T(js@;9X[(eV^L/oUNffI*K=-Bn'sNRHKkU%GD5nNc1*
%T.@8;rcfWDb_g0%XjOk]Y2C?t$Af';f/OL^(h+,8n9iuH$TcYmn]KGBEj-P#',4]@R=6Et+>#^]3CP@F!$P3!%"DXF)ElE?"jt(.
%)k-7:O:l.E?.'$Gj%uu<faKk*@gb\MC5gI^qqq*-AD+4VCt,i_+a&0W]u9*,TdAGB"DpNWH6A_@3I,(3"Ys$1(3U)smEZ"a-Q!N`
%Afq6X*[_7;\WF^$J0@R$kVKX[5Gees_/U5ERt,/#'CD"d!phTgTFVht-KT"&!/28Cko_=R!MCB*&i]$lTF]_L!Ed]2GXM;:,HJ_l
%\tDL7'HAZpodJg%Y(8PJS!e(Vik(AOJL5b])S)riK++L%D(%+]".)fl"`Yid&,N!P%`g'h>[nJ$U#8p<l1A-?Ze=I`b9B3i%)tEJ
%010P$,oOVOZAl&D"7u_9=c$OB6bJ%c<l-p&+srPVKZFT68tVCs\hn8$+)+#1EsoAMi3>;9.(TH7UrFQMB!M_-KW`6G@/)gR"C][q
%7lX+kY/<T[68[3TZV3_:_3"h61eLG)h5hP'aH8sR_)G(,Q5=kKQML#,J;*eqI\?BJEo=YY)KXQQ9aVkW/B?d1Lr8Xe2J"2X6,N`B
%Sm>!P7s6)L-Z^Vp/5[8=ljrDj^?WVq6gbe846`dOA:kuPXG,oDS"'s4l.;L\7N*5i'<f9X0R]*)+Xqo.XTKB3BLTXk[G!Xe';.9<
%1$NO+HPc\%ST.#cfbt"BAE\hXc@eWH$u"b=N3V<ep,lB4Bn?\]TRgRZEVmsb*am$[.QWSA\I3e$308^,J7f@"Lepc`):9q8r^O+3
%QAs6<7-4VGa<<8Gp`t&C4t:@uA4&:Jn*pKi%k<cE1-.k?6!UK[WKriAqnsSOqNDCsJp8mbZQtZ8g,C3_gY-1f75.cUI5;hk)b,Dc
%6&Z:63ZT`>:3%S5nE(WMJH6K86g@9`#+t:G''F47L(D<[6U38C[5.cj8KYcOPq3BuHS%K!2D^,3!s?r4\/P94)i3rUliTff9#<(a
%$S)\eMp'Gti\Qm&+_\c*cJt9oTuggjTT'ee`lVU90+s6%kCaY?D$V(=Wn@=m;Ka;cj!3j+OZSRQ1W7`Jh%<53au3c,;<3aY1Dm")
%5<rXp?tNet=!>/Qg$`WB)\[c&TYWBGUkgGqX9b4/_SHY:R"dLE]SS@pJiS1rL+X*Za3Y3a#c/0(FDV+&NB9`7Z;!P"bRZF&QJoL$
%m+JiZN&"fj+5Ts_-mu-9TEs,JL*GZHBNTfG7EK[/Ak*,5.\R!eoWSq@%;^k-8'rkX',D.6p&tU,6Idg>%!=B5#Hg)^b!R<U;Rp%f
%A#N/<R^.p_E>3^F&iQlM!@*-^7NjW50S^eeF(PR.!jhEe@:Gg@_<tiiB;S+,2M/FC63_#)A$d9nlbO9_5DoG+F[S>oZ"dZ6K/M%f
%Z5p==NeR61LS]it!eE=-E4dmI*jEJ0%*9V@7J-6aRCGr3[UTm;@H.q:GBhMmSXt9EGaC)h=>rQi#e0*7fEWD'V*bN2>Tae%Ao`2\
%LSkZU"VQB/(>3`(Te[QpZWeQ\kSXL3[F5NQ&pf]&@@;'eU99r`=F4Xn::cU-(F`6o=pWId5keFc!q:UJ`R7X8gPrcJ?3DMlYgJD_
%O:bMO6MZ/ANe,RQ@>BRIN73gs=sThX=DFE^NAVP""rH;,>=c=l1f6WrXMh_aAm(_!2BMtJ;)W_l:)u'$ZLRpPYlH%G/$U%U&eN\B
%+ch\b:_3m58SW-bPV#;j4tu8X)]JkOO[+sU\L7:sINf$:Kjq2TaL.*oCoeM0]f`*lfn$)NLder";$a*3J*Y.c+lck1I]4fWS/0j-
%BRu<HU@KT160\PM%=KKefgZ.N%BCV05s+(X"rY9EJOFI9VpKK1j:Q^>4\$'g:jhsK`1(HqZ2d07)JhA9^]^B+X9ANDdndkS9Lb1C
%[L&3Yn2SBlP9C3,Cq+I'2XV4qp43W<dIf>c_0gEF=$h.a00+`*i?4%kPYU3Vp=46m3_bdhKg:VB.A27165^WWKoU5rr"bToc-bj-
%:8,c^o6`Pk8=u2m&6"k3\0.fZit13O@cbWll6sf7*CZ]?$j'F\G^-;7U6\OgnoDXh>Rh>dnDTgV%#"6)&33[?$/)Z*c1mYdT:7EN
%Xi/m(\d"g$gllfZfFf!%%oUgX?D2:H*Lp`^q,(f@L1(KHrHW,f6CXK+f-Qknp(nW<J1N86Up=B4Mi.XA/^U'h2.GG#^QrXhV&U@d
%E!(e.fYtW,.*[U>&m"?"&Z@JlgR=lBk5qFH46+>>lm&.Dbm'#=2\=8)b!55r$\!%jnregkf_Xf]Y[DU@)bfl]G)(nVTEb35'$j9K
%<2(Q&/Rdr0"#T#Mf[c/EO+7eZi3S30[#K!W['u-,e!>5O8E#4-JWIduILHNLcOpKpA:*ZTEOBFSL5kO]m'[Yf+'5j\[p:LVKOd:l
%G!"&_+=4Xs=i';b0.TS[:g=,Ch4$\9kW:l1Kc2rpJ_@oeCc8$%k_g;_"q_3V:8Fk9g5T?8<^a$?`/t@>_6F14P&Hg7'LKit+i;,+
%%[2W>.Zue3!J6H(-gd;=5pe]=:oc;6q6E!'#t\<lpo0q2fR+TcMtoSBKja*I#rs)ce2)c8g!e.=b;eF9K8DqtLtOObo'Jpq.;Q$G
%.ko)]qfTEA(34e[eYCJGc8'7[quV_@^g$%X[_X3HrPIUscF8HPQH0?/WJ%As:Y"V7H^m3n0Qic38BM2uC^-5rBA5RMj;QhEFTPrT
%$Vs.4Srd5#_?p,%HJ1%f-Zk;/O`M7GQhQl@&!n'7pc2*q%4PNc3i!j7;[B9JmZ2%idiepD#RV+A+YAn%`:\cKG!^=2nh^@($fE:B
%49n/c[R&SjKoA>E!D<D=k6qt7;$!U^2P4Mb)@.5=9B[D,;jOsjJ1q!3*@Tf]#U<a!U)[41b6Pl3k.C10rX7-_RCBLci,]6`bqTbd
%1YFLSApcqmf+L_$@)t1MWdZAD8h2S,f+F&\B3R+/L[co>-jXDPE)4)>0cWI@eKFM.g[-EjBLe;&:n"Qs0E`3cJVB0ld_kI:e0p"h
%U!SQ>Mo0Q?.2Ql58?"f7!X$OCNDZi1a_$1$Mi3'N&1:a"6,Xm@\fNURSKZF8EX$$O:V%*_8>>F60!'$Z&!8JRZu2CSOdN&[39=oE
%M'9ad-@*:#\9th5::Hb0Y6G:Lp]"W8pB_WjVU1;9/ol@:<gk1:#>%a0S8^J7E.Duf=r-K\7_-V>+?nY[>g46[`Fp(;AaHN?l#Ihg
%i5\A)'W5b/::gkd4jG2;,"LDYj0X_T6naAF/tt844[cn?.)V%n/lKbA4&3FZ$hX??i^N3d,XIB6Ber-@3(0T3ULoV,$S*.s(^9(T
%>kedj1'rU&9Y`MP=r\Z@-)$/@=h3HQAk31'Wt<!c=fI+j-KLs^Y>)7`b7-/VpR.bLT##jfZ/[?O3'1LA&3\MK+s6W5=G3AT(n5Db
%@^Kth-n,G-<7qsn$hafNT[j>,.ES8Lgr5.1YD2_(lr2$hB5AaSK>S=n3I=@d\O_1ubh%E56RqR/!bE3?+He^;e*EJ;$j7LO,F*j7
%oHb5@'I4Vh)'P_\Q=h.Nk1DhTbdKOmJ."n=53$;rRp*=TLQE:gAUG5T2o@G)J^cK9WXp%-8.snY\$heXd\.BOfocpOU5P1.TJK$\
%5/><gp=1&CY2PH&9iQkR#MPu]J:r4B$#$Rma/Ks3%&t'5<S2!L6/5"+fSXm/J_Cm#"J9SATIf%p^?qE+I1peEAO!G-+GG2_hInDr
%P/7MoTW*_JO=hQq:Qok$3F*Zf?RX-U9gbD^=^o_JZ-lK6__(BbDF%AQSgT%"-Dfj@*@!R\a,e_Oih1i&IJ?Wdg]Z[!?k)V!5_GC"
%5[\-,;MCUm6A!D^Bk)RO!r-@7U"EM6ljch6FEHHW1o&_TdZBITRuXZ!s2;.n9Z^.dOi;SJZ67a82T,e\ggI&t^lZpeh16Y=3[uHN
%+r/_\,("rukr?c()W_jUX)!_<4hkVb+V@Th&'`#U5Ck+ScrGhh-ob+E3$f'YSh8&$!tI:`"#I7@dUoU`(c_)E"Mu=#5&O!g;+KLW
%RDCh$`$k>uZF&%"A]%?QAQTe)?-O&97EoK#&d@"s*!;o%'AYoY"/m=RW$iD2lL@5HP$uVl2\:rg(Z4Oa(Sd,Z+EFY&K3(W9$F$p7
%*!+:NRJ"*V?m'QK*7N<%Lc?@7RQF+ESjVNJF$>L8(c&^).WP[>[O[!Y:`-"6gkau8YJ]P]DC?&4>-9tA#bhc+a:i2*Pc[dg1.sY<
%D16IM*7XqB[s>2DSGrqgZBi+@8=[+>F2e9W#>"@/(.4@j(gF(`=h\Gom,BW"=M%\36Lp^&T9YQ*JV<<-c6G_<aBnq_p7e>ALQRgC
%^!JT7E;m._b$(.on@um:_R=AbNTV4R"[B`Fb<n'i,_g0G!W+d'^=O+i2WRbH3@8WH4_k%8Fe<.TY-;0gF4mhZ#+Q@onMq-(&l#M`
%DL!C3K&\,:,nJu@eKU+G.7+0h/`!"4,B=Fe!ASFBcSM#W"&:kf6PjA(+;,G$LJ7,Y%Y;`PQ(gOKlJi"p4,T">>dXS%30Ci+Q0:%<
%&%oqL-b,0_8SjtY57@tZ>==]#Y`56m\%T=HB\I,i:4ukR1t3SX(,+KU+#,\%Jt\4:?t%!X"(+K32R21RGEL#J>V!uP]8Q<)^4YkI
%+Hd]mF;4hMO[1NYTqNi;L2B%>L-mG\6.p2$@2*$m+;mbEDaui9grmEh:'WTnf4;N]]ac9)KHqjE;8p;#+I]3<%QQq8NR!&9r3fIS
%C_#1PC#p6+&[KMAZ5Jus-a#odUIV]bGE6E<oYV_+@IG]#D3;u6pq(=KItXX-Y76_/<'1>=a1Tt^,i]dil:A'9)fe6_CPeT"Bhd_G
%CWTJcKcsWY#$XtNT[PlPG4ks)<Xtl"OCrJ'5RSlfr$Z1oo*h]k*H?KF*=,Pjqnb4F*ut*JMKp,.mQJU8q&L\hT_O?9,h_X,$^0VX
%m6k\@472*[Us5B#32cuaLasJhTtnfIM8D/Lf3T<IDk?,\1'_5Mm'BrAjX:`=:e5'ec'Gpf2%7(!g]`Ito>Ei"r.l,MR6-_6s#Paj
%$c2EuGCN1`%@?<qGR6P,:U@YC8Qd#n6:I9giG0Y=WYmC8i'GjRWd4Zb6o)Q4WK"-H$3f?2cNs%Q^,Ltu4CGR".1=#30i36!Y)")3
%fE8#Q$q_fHf\?SE7nNj2.lbM=$\&:c<&]DIKen\\IWfq1li>h_TZ,7d_Db)?$ep(-_;g,P_H/\tfY]@?p;fPhI2Oo$4Q@S.\\RQm
%;e9eUA4n2oja45%A&&]iami+?`("#V5V*0E\.I:_jKaWa2\l-:UU#Pine!n4$P3]F?;OV*AmEml?D5?u[Q4C3$?B\1C2u>2(pMAH
%.ShHN>EHn+V4L-Vj25F>gVEn8PZPse'I-Rr$%!+tMbZuEC5sUKrSqX1Qse#'0o)&'rf"Lj&GdJV\8`=("Y'U>2'ptr=>pLsiCKJq
%_Td$7_3FmaG([^3.G'^:=dj9C#B>QZh2HR%ap&=WKsjE]a45o0P"Z>#6DWJ!O(Ekiq5.DK_c_8u<UTADGtZe]K548iD-V1:eaX\k
%"?kFX30V^RPfI5m12E.H]-Cc@0_V?2,VP4$#mZDIi9*W:_LWYf`!Bf,k>Vqa>Qo.8)^jBPm2-W]69dO!JHugBDnak%eV\d3k\GOH
%<Nud3(?W2*nkplb2*;T;WCV?p,""IG0^=cHA]GZ'lpX2b)](cYi<:f,<'-mT+hf"Mi!'/kI]jh;29JHI/XQS1P&'_C<'iB:%iUdf
%fpt)*l(tIqRsnL[%h6<t=DRXjd0233[q0"["hVm9Ns4Rn(acab&R1qC#4P&+[(0q7"PR[h]cL]$1YFM8g547PD2YM`)qS@P.o"CZ
%`9#0f9e&bP,ddm3K\R40)0X!*-%JBFTT]6a&[I[,e)lS"I.1fr\JC^O#iAfc%[[K=>es"PHF(kR)J_UPjSpDEcgE57>,43Naal:e
%A_8lZoC=oBIV;HNo^gCEOMT.M=VZMh\Y102hR_fNbo<#N4<%Q*JgXn\+@:a%QGLFT8[mct,]IO4[c;I/P77<\10ihIA5A.H2dQZD
%]roS":h%946PC-BD>(Z9oE3`e%"^k1M\!pOjRQ6`M.-U^aW[bt"mRcP:7pi>Zs:NikQpT!end0l$tA?1lY*.Fp5U#_e'/RsW6?6-
%OHDC9@p-XpB15+oE>-+pN4U3C[YDCY.c`:=k#.&YiXg_e`\2-ihE!$AWbB*lN5V&Z@MKBR:a'*?2TMhoaCL+DR?;F8L[/aoKdpe%
%fN*C]&_1G(9ObsTVi(Nb16.;3cT3XmOCG!DOhoEPiT%3)\cj]Jaf]tf:.`5[$pr7d&3#UkR#SQE'0J19.hZ8XN"&9D;4Nn#8M%jt
%?t7V?8_4FL=NBbfgg3nD#dk1p`#=Af9")98,=V-N$d1I1bn>MF"Peh7I>5:%/kPMOY^#>5)YlV4i6HPl2/?Y2W4cg@MK$_tk*ISZ
%11pW<lT<H%7"W;kl%#HfN]8g\5FhQSaT-fEX?C`e41P56M4j3'#!"Z'e2i2UbirZ:-O5&3MC6nskYAi2M#bLK>i'M_OoUjYk?3(L
%%nP5,pe+aG7erZQLk1bq!,r$394;j,/N=Cf`r/b*IuiD'D"n2X&$/TI;PcjEPl8XVIc/WSYqG'-=XN4KBI*3n'*bN1f\8uuLAItl
%Y)m?@OU`s"1-MptPdJ4?MU7H"`9`@kOgrnSY150Mr.s!"Og!5R";=E:d@5('Jc2p48K7VZ)qjRWKC7qq`D.'(d-RHWdnY2Ndd",j
%]eC>G.+8Hb`MH*RrLRLYO2EtS;Q_fd]"rgN+=d!HZ.m\mcB$#2fsJq%5eGtdP*&N-nlOQQU(m!F,IsW"KF$C"O7Rm$#=0dl&0&i%
%;U\AX-*`2@auLHKQUFO!(Ws1[R)?B9Y8LC*fqQ:a`p=Bn[bHQ<+1Moh@GEB@AKYL+Ti+F[@fSh%(i=F)+iIq9i_r`o^]pDf&cl<-
%UOUt,?eG\RNAXa09fK"tk!#PB`NH/H\/``5`qEjA$hjto_/>n[O`f(80o25_^LK)pT`[*`*JjRLT0WuCZG*h2FLaeidJCD(R5)+N
%81]F5mXYWGG4o$Y0kHU0b&k#O6s0fpJp8;76q["*W/q>7GM/*hU!U#3e)=WknrjFVY:pVt#?^>7,7&GS])eM!?s+n9B(?+5EgqNZ
%IBs`@Pth]Z]>oAS+nf5!/dg1#/RM+!+A9L_M$=-QF)?`^BH>#f,NjWc.c)XAP/FH\5T,B1j970H()S'!_r$\!LZk;D&PPPP7%=N8
%'P>N77GFm\)/5E3Z$]:ikB&OV4Do,pE!t9^9#55L"QkA8LEL.)&OWls_1g5<#&m-r':iSE!@_PNMD.X1iOaa.>JA4&?Y64=#u>V:
%-pRjZ_.J?N#&".!rTLBi!e%LK1IYIg6BC,Z%653l0ZV]LSoK<'^=pK(/NP@V7P[FhbX]W5Y"[*24SW30m_k%jQAD`=H\@D*SSWJb
%L:DKp$33@;T6H=1.lWn;=Z.,KQ!<:=*GO6K79pa9Xuo7CijBt+4S'hf[4`U:j119uaUip:_mkN'7mVGrkMq)5aH<@H$fp!L/(Y:`
%Q6:u-\@m]`%Ue4iOd=Xs_rY,`R-[D10T+.-EtCCTc1!_LKgupGd+.Vn6T[e@5+XH!Sa3gIOgaI@?Y:3bMNW+`).9.)S?r8jYRV7*
%[&',lB?'_?BVJn=W$Z++pIJ"n!)+F61fI-ejqMgSAkD4/G8GVg8'+:%GWckQbuks8+gqVJf8L(c9Pu8P?mPfek%Onf>c\,`c@g]V
%1!fEPa9g0K)m`dphXj_4`aY;=[>M:YTl+Nr3m#b^Y+*;\&Nq->"'<GYK=F+f(:t^9JJA6i2<ugIOnqO9F-Fr`1;J<c*"+C2b4.c;
%@sF"WFk9mi6&^BNV)T!U]8I)I?Q/`*1:L(HP+a2l>)\-G6HblJ@%3YmVF`@%NR&m!/_n8o\cH:IQJmO!I(^lrc++@HDu^rrGL3!N
%Kr0MY0#$)W;#!M5cPJ;E(W(Jf=Q"m>9\fA=JY0Fj!;kMbD:"Q1(1>$!@j0V[&Ooh*E2CF&X:W70Im?c<-Ys^S+qPA\4C/jnRQ/sG
%*[dpj3YmH$.m\?7*49iQ9NSCd=d6f=(e97h'!l*57sVoNJ=[PB7%>INL3(0MkD<qA0SdV3dQhen"9?e"P(sUr`V5I"odg;01Q]LU
%ifMlh,Vsl\(666c)[#+/3.Z?<(g@EIHqH)aPq=#e?7&I=6OLn#;dOQ'h6>^3M#kc.e]gAc\DiriCh4@q;Wjth5SekY'S?^Dj"Nkb
%H"?L]8hIbu'a/B:n]c_Hl[rW3D8tPH^O-H\TFWh7pREp`SdMhq'eTO0<L\pM+TO`(=cPVlK<HCJDpptK$_.g;3#K35=!.b!5n4k7
%81Ognot!,u$g_Q"(ed$=8.eNW;Pm?5SehBOd7(i>9B804--SW&O>c.oL8FZidtWAS^668c-YaEq#f^dI_9I:l$361Sj=lm&Y4%9Y
%*MkPh.X%41cMP$fal3.O^(oi%86fSl:DI,hEBo'F`%mL6qTf4Ad@C%eA30m$aUA4WZT+IFKc.]l2`'Gsj9u^2"(60E[7L6;C`$\5
%/R<MOK98_Q=C@DG6TnHQ#^J.F;2*i3DY/Aq.B]NC%^.WB,L/`1UC+93J88<rPD7$js6eQ<d!?6M+cl^Ab]p97WJm-uCIs(/KsDP'
%9-jedL^RuA"H09'16N:!RUA9DW(eM]6^,g[#lnPG!Do@C!:a]SfC;KNpcScB4Fn[0_@V.2Qt'=Y!'i#s7D0tp:K%pA;SEj."ln`;
%'B8%Q`[tZs7QIc&'tHrh=)AWu/mH1bNl-torb@@]i*m&Qe)q]\"*;^@0pq'`^oUB*@%JcDS-'YFZm[jcI-s*E>>u4n5Y%X#Ki.8L
%jG:BX1*dU6EFH\e8#Qm5$u6`63MB!3kdtlr4,BC3$N-LFM%>&TOfPP.I/ou'<Da1r"nB#CgC.F,(bC_m8"@rBXV$b9AFs4jq>2.p
%c*9au-r^btAIJh.m\k.,%`#8tJdB:JV@Wrr`R+"%huj,,B*pVqDV=S9)q;E.jkE-J'LuIs6h=ae]Xu#gUL(Z;ZQV4^fTEBZSJ#:/
%CJ+h_4kl's65?^:S/;2@cATS1`:es)\\l*+OneAcU2s9t/\DGZ?kUT%<X_V4Q^tEuGPN`fh.Ipmq?U.X!^NHrb)Sk*/J2?[X2<cM
%0G;!sIZM9Gd25fb<u.PEm`5]id6.aX&Mq9tMLUDLQqi#Za5]*[BMgcAH'F5FIJm.h6X6#\]@=rg";i`0>=)<f!FPTrr<f6L8`H6F
%CJJ2I&G"RS(dpj)_Rn"PPkDdqJK='?j`dAOO>rbn,?8;Oq\']L!Ff+q++U^2]Xk8tM6kf>o2[g3YQl4\:o$5Ia>s:.*6A7@$6[?:
%A):sGj\>fX!Nn=PhC"IqJ.\=B^":@5JuG&Z^^C,N02)Xj+2^tY!6&l]MYD_#b/ds33VH`"*UCZ8P>2m#Jq5]icFEYU,J`6;/i65)
%/r8G/e=m3R\-aF?5HYCtQK)Xu-mJVR0-GdjU$,/l^h*KjWD.[^g8&OpUj/>2\Vh+A)WN(#Ri*8SEc]%Qg#3M>mRk3Zl',a'QXE!P
%PnNeA_dJstk/4)5#D>&trEb:lG^ciXJeRho/Gbh`+`JW(pd#0n>KZ147aUdC<LN`&#,E`Jkj5H@W\2LN`5UZL_.>/6/%,61>72;o
%;(\l3SZ@b'@9N*XqSlrO&5<7r@*gp@#nbHQG%GXYZHNd_[ocbN+;p-baY5G\isRb52aFATAWG.*0UdIXD@/=SpDqWnaIkdT4;@g'
%YnSAc20oc\o1ep93)3ul>N--##>t+o8P/R&8i".LI`d'GXq##L^_)rkj!ZnJM@0CcR]f`]V-OE-N_Jon1?<t<9#b4Pa_b.gPh@IC
%/IRosD/mp)6/\7@_b6Z0#gCZId9B*QCL$#SU:fWA5VABXj\f*uZOk9UE>G\!X<.@f,rFij;VNblNFNau)']*8/QKBe%,Z3%%*?>^
%rF4"0!*UT?I9YCeo`]`&(t)U"rZIB6Ud,c"oO9=<OYY2m>ac@.Q=h.$")Hga)=f$,38d1]kS4[<IUm,3>gc88c6Sa[h;F8d.*X>J
%_k%W;=Q9j@4(B&rMfH\=Ng-3Hk=`cYg-1j%&%Q_F.4@un01(ifaQcWmSK1EGkD(KR2M:&gnh!kq./?mdL+:?IqI6QdY)(^i!J[as
%aPa@_&ltZ""ejo&Idpqh^2:b2JPbXjE<:b=7T/0d)aR>S1ZCp-f.Y[r<BdsH5X^b;U]"XP)U(qaZh"dnW%fh;k/jgbMSu&6mBImo
%i1MucTPI-D6b^CtR/i7=<8j1^.U`@J7j9W%qXP&D0q!uuD+>).CC.,&bjUlS=X+S>_b9\q75:G6??*>-&2V],K\IZSa=!SNkJbde
%)=Nnf2e5e+Th@ro7\*n8>l^UQ>#Kb.9K1IL0<=8n(@4QjpYkXkZ'XJ[Qhp>S^m^T6f#hPd8VOFZ.]ESM!(!-j1W<=K5HooQfYFH1
%J:[7"bbeaH5s\Fgfq7>-5.n<pcE]!"_q%.oIjqtOWEHJ:$<M.??%P?aan_X9WV2g?!KC7$YB6fTq\*^CkYE$'qZdUp?V7qrc.C,5
%<@UO$iLEVt"2Dc1:c9:R?`$_f)jN6<nQt>q_]5nHS-(,"W5!Gn[a[E?A7\nk6pmS0]sLtm."Ls=.(DD9JX8I"9@T-i&kOsE?b<um
%(OCiG*X&!QKTBP@839dQ)&=kaOc0hg<:+FW<P/:Wh7N>NQ6k40^HhfB?N^cdjDa!0+S6c[+[ABZ!X`bJ+UA.7,QS4B+u(4>^T[72
%A_Y*c4=Vkf.]R-[H'lm]o&G2E5.5=_A_F@2F;-t3$--'tXWAsh1l.e4ngKGI'XuJ!V+3Fom)dfWp>`=LO1Oa$S+_/MM8&qu9D"u3
%eq^sP?ARBt%Q[U:X3+noVD&nWY2eo(=WVc?k\X;tm2$u6+,nW4o]^h>QhC'TJ*H4s@HS6Z>Pu6[g\!ILqY'Y"4T/r4pCHUMJ",Kq
%p@jp6qnX!-+&X\>RM50KYP%;]bgF$?VY;iCmq&TWbA=kU!.-(fp0KZE]r]t0Epghda]1lLh]@"0Kpl5Ko45f,=fC/;fn/P2O3uHn
%bM+W7^pY<!mt1`@&eIr<6H0./NE#>/SHEo?QirF<Kh0@lB'UmTRcD+GIbtCf0%5'A,)jr!4jk`.3(l[MY)7Ll_?j*^SgRTF?2djE
%b;h-r^[K'YGH^-FT4k+olF%TY*L%N%)P==YmA.@nmkB1gQZp13KC>*upTR7*\%o'Wct0XrS<(V9c/nCf!C%R];SCk"(pET*g]!"f
%cOcKMF+6]G8\\^R+`g0%%&5)6&VW/fs1!2LYdX]#2g7@Z;\.=[%+k3X984D&]4hs`ejLq6MV\PJ"jS]Ho%p/.#*=1s&K`SF[77E\
%Q,ULX#CQD[FPJ*u/n@aS]-f;h"(L^*`Kq+bmKrjd"s*Jp+>gIq&SYproaF?<$WqdE2$QVB)>mT@4#kV:XQ?9]Jc?_hk(i^+YpI77
%gh&tL&,=G[cP\.`$%9WN'_m!A*eJaGk:`Jp5;kT)(+=[?,g$iT?&3hG=8S0\F2a6?mW\XB$'%*4oG2^Qg*a:Wd/Bm@OOr7cE&Q/!
%SbBQ4?_02nXSc:VGZL7.]^YAVDkGn=gNWM`ikNL<rIFip`WeX-Li8sG4.u,18(g0Q5N.kL6-]COoa+9g_7R)ODSMePB@Uk<BYp.W
%3o(QP'NXB2C&t<1])k9VT:ZO6I)=Nboi5p]\5,rW3sGKEjR_h'!['qf:=,$djMIYKES?khSBe`L[J;,,lV7`_0OB/G4b"-(l(6?o
%ff2$9PKdq"1^>c;fZBaNnF96!=S[.PoaeS0&3XInT@!HG&H=-1IlTs[kC.uk*<csZ#=]Fk2CI.:H1#'bgZ.eU#iT]JY@6G(`eqe@
%N0*!o99s);G)ts0o??V-2>CRDamZ^UDfrpCqP6*sWqE$7:HDYP>Fdn!r1rbAHfF.X^#PB,>1pAXs7goSqXqMcTm>C&o@Siie=/6(
%>j\MikGdk3Tf"6I4M*aU>eYLcs#K\GAo(!G?60Qol`OQ0`qt<H&]%$$G\Qua8]A.8\Wc-SfB(u)J#rTrUq?F_7c283b\t8KRH]t9
%?b&&#rFa]MRK'eJbjr2"Zb<eZ*j6]q\#l(c2mm8KG?ZjlP:\qjofAM4EQDd$U-t?@n):I\/D6_l%9YWhjVQ%AIBp8>SZ%_'0%q?Y
%i*L'AT<'"*OsmBApYAP(blleiof[An7C2XZ^A<o`,6(l$^2f('Af(Od+HP'tYrBLe07b&?Ta]t]-8@"WOQ"Kj(R\a<,fFL-!![K4
%<!pr22)EHZB]p,A?O5\]V'4ht8bP?[bJ/aeNl92`c?[rP^<G-oW[T#Yli)K>1h(UhbH[jBEh'E*&hTtgG38o`M38L=3FGBkEe@c_
%ZSO<bk)$8RUM`16E<&L"UuMT^f>(h"H<F'K5G3b.T`iS/m/G@BZAm:D,bfg^mdB.GNLca?8<g25n<si=aBiri%8,2c7<ZhE"Z\Qu
%8\$R<MG`/M]>2sA2&gS8)0LS_p*k'D).dO=qBhD1r6l#e\k%<>*gC9=(DS%s2':8>QV436`.-W$(./i1,`ZF*s7p=r-A"%p?*k.g
%Pbi?Pcb4QB_qMQTWPT8uD%@_]c9^)FFh_T=\+`@-^O*!MR9oIqpJ6:W#XJ1a8=RMkM3IK^7`(#!PNqhhS5,_)>)EMW`Lfh(,JK]Q
%Xg^c%C4`@N?n_XqSOePTiu1tF%<d:7TIC#`I%pdq81.]Tl%qsojf_+Ko-0Wd,5Y\$@mdUtU?U]V-F.?Q9(>?N#.kdsPTjaOdMh;n
%gD0\Y@>7IYk7YLs$P*"M%=BIqg+J_I7od_VHX`AW75YcZJ\1`,3`0L/V5&!_hDga!k."Hd-e#Z^"CK,Mfs>.Df+7!7/Sq[>;Pf^E
%N`>73:Q^fH,-U98R*J"86FPt&!og[=k3V@f!-Q60%XpT->S@-#/6YCWSRmOH[bh;O(?M[/0t_XfM>/cNekf84\o,+7@>a-KfkAC\
%>jb0I3n@dNn'gV#H:N#J#7RQKdV>SpLfnc7_^8,Z3-Vu5Q8_q[`M@&s>bl`"g[G%1Yq0^P,Kqj89h`4Qj-EAcPZ4/g+u6p_Acu6p
%"28ISDH+6Vl$45#U=%$o_m(@_`g0m(h3^8U?O8;Y8![\#`6!%6&$rRlDC1.A9AddH/TOP56d9t`XE$":."mAhSjY*)e5lNnnQRnJ
%f:hOg0?FB'k[rpT27QeQ35^KjjL2#V5-9Z!8AcXg#qj^"^TgK&/m:YV*[`5mOX_^Oq6O^6A\Cp-<Kj;]jg=C_k&+o\c&g@$ZKYnh
%ReS*'FFb,uAs"qoK73oWiuEmbZ,p:'luX!/m67J2\QGtjJE#(i9R@o\MCqfG=FXuTd]d&5%7hbs]X;5KIK9o9c"](oMSI+HJNGD[
%r+26sA,9Q;AZO%@7Elu@(>*$E(-g?6Z,-A]>M_inmFENdX5DRMp+ei#Ws5["n=V,88r`jF4Zo[dLMr-u0&^<VR.MRql_0l6`1gEc
%2PX^@\cR%@>(9SR;TdN5;%$0%Y47].r/17<Eu`Um2n-32LtgosShVWQ0lme$"fs!]hXY:Z0TO%6?`CL$6Qmf#LTGsTSEjs'h[:bc
%eTeT[.2c?FpYr"Go_LMSmoAd.K'B3T$bj#n<J+1,S6K:Dn3'Zfd@n0Ed,^VRb]Q4p1_bVcCmIF49%*W/"=_m^H>1>ciODTD(E5S`
%BOXP\%GB1]V0K[>Q:n!SlS-%UK;[d:LlFhJ\Tds7=1M$*;$'=Zcr9#)NUe`S!V+L*(Nk3[n_'uMc,8S"m"<55pQ0g6P?!Wi=8m-i
%^*gP)p3)720IlKCCng/9@pCcDX6K13i8.si$LZped9kJ(:iWd(N_Es5jX#fS>N=V-$kP7dbAV*N)6H4ql]!*A9TI^tJ14Z@ILC0]
%=;qE:/,hpr(`JRAr#(';1eFLE?jRjJYc_K.pV2<J<YM)T"Kk0L!N@<e9C/5^fMf;>3T!;lP9,9#:t5=s1g;Je8"qaI*XUW)1!)p$
%^,'*m$GNMgSr3(EOSBHBW!j7>5nolr;!I1b+[R&UKbe&H1RY514l&eZE?9R/!76J@@0>WVT7jN_8ZfXSdI>7dj_J))N-0-p<W<b>
%)MNAt@Kand;=c"[9+f;(H+-McpBk5WG@fHDdfP7!Ff52F!F14>4==I\R"qeNCLTHTpta7beU4oLO4s@$Gi9eMrKHN!;H@1"Zb.c!
%<RTf#-]:nF%m!96agW-KaW.utmW;@;oD5DL(p8%[OqY.jG,LMM$.&.?PF-o,mrX`7*,FHrjD^RH?7?acF/P4$!-Yp%8aOLAG</kE
%#+G.S:,9Q>P@d-162Zf6TTkn$F/P3i8?(M2,[oXNPnX8<]W#GhPhQ&8P(i^hnMj#bR5R:aX%!jaomMpT7P`H+oLFnbk0nb/8.)).
%hPm;kQfV'jMs4h[<K]OoLUNn>,Y-%Q7b1E8Rmq.7kkaqIH=-]N@Fjn<e]!VES^j"Q(UkWI)dgkTRXH+IF+iu&*`e79f+-YW@Lc/1
%?T:BA+t(UnnFgj2+6-%0ans3RYdJIK"&"%@lnKmq[4?7LfRsfrB`3%*Cf:kokUNT-fhof5cs9\SZ)3BC"$56<B9jSp.]1@(AXNfn
%!kg(N./J>i.:-"pmJ1oiR-^D/^##t!9ZPsf;-Ue<\(Z0_6[)`@_)>GS19Iu\mK=T1qM<e*?)Lo),,&"+6XJYM,]%Cr`EA:/@L,G*
%(.s(^/30fQ)')(\e4[mTOa/`>,<n740>G=(GmQA.Sb;#%!@?dQVr(;k7aiMr2HR#(Bi%l5aLg%3.iOgPVNj&=+kcb&U*#pE9);W/
%e+sb])La222:8cF!L'E4;7<?JW>i+9e>G*I9t@-g!(k>,2Tr+VChHFf70#N6N5CMUUlKWh*E@&3XL(`j.)5?5S(HA^;PMu:;jn_\
%%S09ZS<=>.M(,sW]4J>BPA=lFF2`ZJjgBs'.cLD*/l#B@AXh#D.s#;)<h&no8<C#`^SR(*m2F79o0?:.N%eSH\/NBI?ZL0(K23g/
%Im/YNO>MZEGGXP-OkgJY+q!DmV"gUXVX&.d8VeoS&;7g])$%$,6P%kunX@dJ5a$F#*rJb^mEg#_h\X"eAg<Bt+IgBu,C9*`<]-Et
%WuQ>$ol.ku8rA_>SKhWodVQtk';HXuctP0]CXi`d$+O2!0q.u-`C`hXV0`ha6k/5RjQLQ-B%F+V^s5i`<jPFkZ\mBpkdY)dl*1+g
%h&kn)Sm'[k2$E;+31<NsW)4NK9b/roEse^h!*$#TJK;'2ObpDFO'l&&n;?lE,R>YD^>E6ZH!S&8@779l!UI#;=*uLPqRG@rr]HZk
%LJU_e";SgoifT?T>15sso5G%**KS)M$_?(o?-_84;0fWX'F`K./oM.h7?e245*aPEk9P#TWGIbM#qoNMF]O%Y3]CWC)*Ic\AL\M6
%5!:E[_DT#S')SOO,36/6I[fVdo[TA"YEG/V5dF!+[O>Qj2/JAXiO&)SH,P8':FZ!NkTXSX]5k#1-R"R-&IDU:(5^qYRZqu2Ia21m
%Ol#0HQ;AB)V*"tj\5<n/8(gt4A=/Tm-&9dOVg'[.d/&QBP;Q!@2(c/u=_)^uhlsNLN^MrQSj>?JhHJY9`&sV=Mjh>B:Y-R-;Pj4o
%A$I%"O794InRe=M;FJ?O#hfa!@n(ou%BEY$'i$[=5iib4^ZpZ*8FC"Vi3IO+G&MT[bMHl%?>AU]e-T6hL7D&[i"9u)\2Z[8Y?LXs
%KjE+:gcaE[<6c+?d5g>^o8gUR:_X[^%/[[h/T:@&=c=]-Q'JI8DH3Ar.7%SP^5u.Pl5r7,S>O6j`SQdSe%#_9_!T*X40,CJfXKJc
%KHlqHB/OFW=.0(X"(;Kp\1si)]\:>=%a+Lc\5QkTj\\8RMNSF'*[hqPWu0gfTQLBHV>J!l^5XIcQ#RmqH'E#LR.*!W81Hj?X$5or
%jH36*Vg(to6qm.f\S->CluL'&kAJfe:kJAQs*N@;VP8gHH27I1.&5mo$`AN="M"q["!(4Uf?`PP6g:H@OBjrg?^.@>QYZ\jA0QQQ
%C1tajBl0[8FRm8#i(Gp(2P%Je?]u2e(19XQC?)coJ_8Z*Z5&kM8T"AY*_*4C9<sB,5Re14i^4u<&ZGRonOGUdP04B*r],GZ.$8`T
%4mU&[E%=t8f5js;B<e_lpFisRIt,n&YZ(S][=4@-(5[UR(--(M97g8!3n#_!V!c",s3NJZYin6qZn2hHAT$H3MrpHga!UkOX_6DS
%jS]dFY[,_j'oF'IcT+0dG:1m6B(Uu<Mb`,nZNr0"#B9BddQQ<7&k=RPN@NfR2\3Ta^P2+ZGMt[&Z18Hp@6[-6%C`P^-0o\D0^Uj"
%W99tTm(?:ih/V>@V&JHderP#9UBYeF#`?rsn:G][qRe,DZB-/rabO)o<V$WVj[jboO7i1>R!*0L>;W=fgMg3eXPI0^$!'gL*%VaF
%\[FUBnT*"o)'MZFj3#!gr?`^T;/@Z0GV'QB1h5t8+QfX$_D\9T;Mc?<kulX^dYhX^?NhE?ET#\afj)-0CS=1p69DSY+:\-.Dspg1
%'[Na)B\bH+7@Qh#G1ZPr:Vos1<s:G5q^*Nke<dp^Fh>N+p661.^-C_W3*>9t:X@CZcC(!3pRRu162PE0_tGh90gI_\6H!VD?[!,_
%oV_pYmQ/.ejA>&d(rh\YVU+u4@c"htQW)&m)Bs8$Ie4o!M?rU)8$Qd6#$6C/Gn>(]4n'dfUcW5.j/c*p;uZBo<e'[ql?'>4_sGs.
%U3$2($M^sI(+IrPJ]N,Wc/WOsn#\'gS$DIN/lcN+&5FZdC@*,TQC(K$=d(42cQ#OSjlTZ"CFgI'ZJ"5!__;dad<&1fDHNq-B'J_[
%0It#R$nrn'(CL$X\oS`5*YlnT#0^\VZIsREc*PkjJZK.D)bD8bN=mJmF]VO4aQIqPQY2qcHMeu]@*7RoZ7jpNCM?ssO0g;9=7V,-
%5Y/`@[f0Uf_j(dYfOi30!h@M&QTakD@:X3ej<b=eY=/IlEBf$I2*Bj7f%&-^claGBo@$niqr=u>7kr\l<raLgcJB(XV0F(WGkhe\
%3*`(^l-"!oV'*mc?g/[b7f0QFpFB.PgGnBq@M<babqX]B!H>'uB\!Ws`CV)7iR]qAs*oIYi&'!fW`UUm7+<V4r(rGLI=.'"4CXZ:
%>q]5c-c/:%+M1mV:bnk;*b5lX5Af\Phn5qDJgu6U7nQ(hE;Du1nu"QsGsKOMZk)\o#h2C)75Ho'`l50e>4U)0iPHh:IVMVi<Sg5/
%r<VKaLYk)Fa`$ei55@oRM7mla!%KD^!SAb1:e-!Lqg:*:Btt"Glu.JaCA<>8,Y$#7I.oSAKR%d(2h)U?:0FC_l1JJis7>4<;K!4%
%*uF!bD/TCE^ZPRN:V$Ik1%\5<N$W#\q;:N2cTLXP`7$qq1]QS:n_W$1Uqc/B>h?[\7NSBjr_@PO:N&\MT78M?d%>bCmjud$Uj>-&
%o"X2aJ,5Xap@@,>0*0PkbPC1a1hZRLSDP/IA<Qg@Idh7TVjDJ:s5^kUUQ>G!LJ7NUF4Gd3GCT@jie%&WVbd?R^\rBVmP"Q9^Am6i
%0E;"No,lib&)[8tV^p4LIHB5`nG:1.O+6`Hs38:cd;<UcAA<NT^NtN^PCMs%^\SDX:@1*!-f#P>bZs"Pi1E1dq]E)mq3P.S(]VD5
%;MXg,/9U1H5FA9Jm"gRk)&8M3rhGbtGjONO"$[\!l"A-lX_@[<V$9;+=gEgZ%XWOMH[E(`Zdc3k?SUZM6s%%PdTk*?aP__)T59\p
%SSseeDhs<a]gAB-]h=dRm8&,^;T#[p!,c-;EOi#dI]!(lMN7/(qq\0k+2$.h3$3T@X+,St1ONJV0bl8.[nje;%jM!'k+21NB&d$p
%-_uoJpO+'@QWsCe;ZG3AJ+N?cn41Ck2uiU/s82FAs3\F_;ZH.1s60.kJ,2*2s22VK]DqQihu-p^kJ-h*05og+s76KjL[!:fE;f,&
%^1@94VjosLO.ZE\s#kf,fDih_+9/l9qChmAjYNIQ]\AD!i=aZUW@]pLBWssc'Ys9e<4,(.;VY1gq_I^PJWU/?1=bNU*5O^>l_%Ns
%:+6rlj;J/Edj^1&qgkPZQQVc[O+4DC[#AO[A!E,-2tNa1"Lq?=5hH1d_)ugP+-N<8itUPEEfof;.*O^MqTa-6U[/o3'KIGMCq`Kl
%ZQMUm,5O*0*bUJl#PDJeggai[UOcJaXbBCcgO#@0_8sjFBgHACSI"[/Dce5]6TS]q"%;G80:(*YMDXE_Wqo'W]-n5jFiWAki"u&$
%J_#AW]KU%QMt_j34&CE1N\;K,HQZE3:3)UW`5?XDlHA;\CVS3I#g8bPG9N=E-r.&'IE7QHh:LEbqC,bd1'l9^d]2gp.Gi88[mK#R
%ieCc(j?%hhQA:5&E8Khe'3qT(J>\-\G-RdA?a%qmC+!Ph<iC3!,7*(XMdES/MCeJef7Y8qlg&u!>>PBd+ld@:S#1Z/>9Sg6Ui5Ji
%6at)q?h=%t2_8DSN@d+G_"Z_-AXc(6M6%_4<MG(GpZnHs:DZ`p^&(>l-`2_R\I%n$ERg2NLZ%i@BT"^!/J:kU1I*M*RFdMTDYJP#
%j"pL.n%54\s8=$(YiCE9ADth:c$R-Ge&Q-`\5FJ3?r&%<>)eSCapNXL45=Rs6o]L+Q&XtXHtcTheWop?-K4W1Ud%h:r`h8+96\E$
%bc8EhhRkr$8l94=)(3LVV/&P)@TD/BhhIE-K^b(&?`8:(,a>\^;4/*>JR',aFifqBJ%u,?+fgI>8KTb[#^2H+EJ!A^:rVBd1<"iu
%Ul]7k;g6iQ6:C*^HGF*N#a')+\YL'K/.'j3Z<XC*DfprJTI4=[h</NJUmKNiM5Sd.7H9>0QJThN@-F&.Xnt6bp09!c?:V0_!7GKm
%E+En57o<`49YX`7MpH//om9CJ+DW,Qqh^HD-aUeZFmM1mhBBbnQ0:jA(bgj:.HReRhIoMqS'UE?"K9r$."mXh25=BA1TnjIT[3@4
%6?*);M:W-E-KW7++'%/:A]S=u4F!!d>5,fW10BP44Nhj\%$NU)Y'NqQpS7)5-jc&7\BVEa%AH$!:?-Hr?(u4"dmKfeH[Wgc-9:DQ
%'Uua*%6rPh5$nIh/+`>gEqp!<F'H&h7YT6HlQuBYg9\$*.7d44o4'<iB=O7Ip!ruHR=a$7\]OPQn^hs](MjM$q8qq\';HU4qb]el
%1oVJ&(0BM)9l6g":sEro?BXU5qFPG10R4!Wm@0g\q<ddd4PABekb`fL?_:O,M*0l[9Mo;u-Pr`$:riQtORm@][-\7#'D^sZHrdEh
%!3r1OU)IBdVde-qWieNVn:(5H]?F%?)rVS\pXen%cJ^[N&7B7OQFpOY"#Epo'?mW75NEUqP`&!I2iK?FbG9Xp''*'`ZoTl//_QIh
%6C=aN;c/2'4[FtnZRR-2"Wl7uh1@^q1D?C`gRXkV1]+*A'uhK_C=M8aLnunb$Y@7\(Aoj%7:f[E\M6;ZR#kL$F_rVOLrSP[ho,RQ
%hNn#qoUB-j`sFdgDT`TE2imU47-A)eZ`S$^=*9J;Z'2X)87Nnl?%0A[=72.Tm;jO[\#jQ9.u$<(*LqEnQ+$VPCuYZk;$7f7+DV%s
%8IL/))/*aS=@5&R_>A_bOMp_$^6k<U`#r&WOa5<GJ,RQ#0@[D)[?U;"mhIPPZ2FUBism.I+^m`U@8>+%GQduP6):3oj=GI,d<2CR
%G7tZ#U@EIGAg6Vbp[*0f\:_C$j$pdu7-=;k9i+pS`OUUGH$[>S=Fu:mW_k_h8<k(!+LW8OQF^;0+cU2RfnWjXRc@o#-.2VU3^?R6
%VH1JAH:W-$h'a6[0(<dk2D<T,!J]=RJC$F6m0BdO\S0mM&.#n':d9TmT_UAmH?j`p[;]3rZH34%WYnj)0EfQ):f&RUnQ_52%,CfS
%=$Rne3k^Y7W(<BM]ZFVo!fJ=qVP[6u=4on2d!8JeV7pAYK\,NrhHT.2eRM/>CuBt2l>B^j)9(QH,\C^F9@HDd)YIG3j^'nlXKg+2
%nooe3Q[`P$3:4dR1?6omkqTXaF>lT"W+G_1A%n:+Yi(j?(tqW`eO#E]m/T0eTn[<YjB>t3Ool-4D;B_i,73@%B14ZXgmpPBKY9KU
%1)I"gH\;C+A%oqLL,[kAfli43"#/IuHc)aTF-+@X@u.JlA@]9-gfWps%HE*AZq=,\%Wjnc+G=uGS!WSX%6RC"gh2@kPr\lRg[n7_
%>^[sL<V(,0OAR-o>[S<jRQ2fLn+1j3Qu6lRjP$[//>f5Dh,/\r9)hif1W?sH5UQejgbSU7d<ZI*OPi,5;:.RglR^6.rPHO>o4NJ$
%BAj?$\d<Kqh+c'Z0ggND5QE:pfhdZtm0=k;6R_dX\=/*P64#_J$4Dh4+j&+e"^QCo!!V%Ies(5u91Y5]enF3*HLm""5\_8B>N;2'
%M*V=s\)?VS7E;mIS$$B08T!Lp/'OgO+>RN8/b1ZOHAmBgAb?FsDF@sRG-BrSeIkM2eV!]Dq6TUfJT*0L#1>oK[h]ml0HU=,TKUeK
%5@=F[9n(@T>u-T3QqknL%jiYGc:%gpetM&`E/:4>Qf?dlYQ[HjoskW8e^ac$c4c*-gr.HJs8;dHNe@1Qe](0%j6k+Z,]Np1(WLlP
%22>);hd,Kn]`%b&nFUhsk;SS@L?ML!jlu@>LQJS$Zl-E2"KK"VF\hVA4J*!g[1>oQ)a5g$<<RbR;\ppi9!JYr1=A?sda8K+WhKe"
%#[n<$iKeX,FA<qbd=:=C[eNFrm@qA\((S'DnPQ$(iV2X1fZseaG=bZL?er(&>k-4kg.!?3`RigM]fK&IQ20\g#u/&d70)Aba0nH7
%+VD[$$_D*$-5A'$o%lF"`9p-709r@$8Qt553R+EVkLkTL:8',8\h"jbYh@69C9s!r"=*8o.Fk52\K[?3E?]#0,d5+iVbE-OmaXqt
%>*Bhnn/je4[[4b;@>egCScH::P5/&jLP@&SVl%&?RjEK9B?3l0IVs9%:XAA)kDuu=7-M:LlWm1_,C6BWhL97`n.a8sCK6k.`FdR7
%TeMY;9I@"-rf`((cpZ><eG7og#*b"6.+tJ2;37RRV6&oF<"%s>ed*FC'T-Lq^N5XRr38bk1H]sY[;@_KBWaa\$O8Nd$s)esqNOR&
%5Fs'W$B<W6\YZ@rhl]E8OsoY;Rn`!L2jtr/8gV^bJ&C\GK0t0^MFJ0V#1@n2b&'16SSHoOnK&>[E;B/(VSAT^r,%5C*rt,%3gg[<
%X.S\$3U0AZMT!LZo9^2g7=\%5`O(_CEZPN+a530W^@FY;pHOIhMNJ7``$$".P%3ulR5KX9Wk^?hXJD@-P74VZNZ*3a4i^i<q:lBG
%k0#=j)Zj&_G0sNEV6t9]f#/H;meXLqNDc&4)0%F$0Ul^.&`<$LK_I2MK@,HQ,oWnZj9b$D]J&Y4SJRhFJ!n59e"f/*b%dngl>^")
%X8jZ872Tp0/Pj+!@/dMu+0+<"nL&ZA2n,k7-82YepmFO'Bng"&V<4N%KME^3Q;d+]LOuTf9TF!l9c<b"aFSJ^n(-(4QF+j"fEura
%,I=tVM7;qg#He464@gj+)WR6*7PcG$QpWck!CP[$7FUT;h<=Kq#MG"1%`S+>nYE!@\KT;`OE)g:EXCu3Rc9p_d8UVi(6&3&)q9ea
%_/a87ET>7iJ5AA%WAjt]@IY,lpCc210A=gm$/qgcR1M],Ku=Z.r*K(G2!jqjI*]=,\]St"91r10fi5iJ$#0FVccuG='t2<1ht4d(
%\)JNEZ,Tf9d-;1$=&G<PBm:cnJactbd0a7LAlfsAi!DN?]A6m]/tPJRa1S4XOPIRIT#oRBTkFc5'24s8*)74C&\H+d\W&BCMlDt<
%)RU$XB]5:g0D?j3#HPR8AABo2A=_G<_hseA7m5kDp[#p$aQe5=OIjWaqj%XEP,*"gXi>LAC=_!(E?.A+?V7;ggCi@qcaZfm[OD*u
%2;#kN%Vk"TI=]q+rBqS=2[,,1(2N;bfPSh$H9n4RQ64L";;K%i(G7$/-G;oe_pfq-S\^4MQ%O%pq\<I\95V7ET;S&,qbbl)f:Uu[
%dECCY`5e$Y("L_R(u*"Dlcla0H3q3\-a6.!k@*jRc%N9#G;YV05C%uV:Wj>NeXh)j8!&B$2EoO2D<J*M51PB@]6pk'G6#/V?</s/
%a+b&eAo"]O[lF>t_oY_6$D#]L@T>I\ChbcV@IV5&bE;p9_^MBqD+/rW7t%hCh_jg5Lg6SPiN1J6<dsoXXXnrJXfOI`XT/*1Ac5!(
%ntqWtP]FF7Pl7JD3L$iK7\q(`V/5TN,mSb%dA:i1qhQoG=pn9IKdN^c*"$CM5&mc9k%fthGU$fo98LFGrNnGBNY#&\2#G[sd=&=]
%n0*[0PJ;'%,dDi"AJB1^6$rRR)inT%)MA$H1skdnlr1aNjq9&akd[&7N@+')VfiG9V"JB6Ws1A[/tER@D1\i(\up;n>?)JR,=L`u
%E@7p[0HVB)@&4nDH/@?09;YMX&.J,g8=GAUTqcMuI+caRDR`&sBEoZroHL7b/l_E*X"IA\]u$F3PdcK]AU,9Wa_g?"LL_u<dW!Y4
%D$[[@9cB8f#heINP?(TfH>Y+\QD^/&e=YIUM6n#.!YMae2^lQJj6.u5fh1'po\83abQV6XM<&PY,gE]7+F0K8>tUbH06A6+J1OTY
%2j3oP@#ilXAOI@k[RBd$C/MU@MS)fN?TCI\$m35u9ZGB_$W(Po@oJJkBi6?mYu3;!.!)boKJ&W2T7Zl6e8hT0Llbc2L?Oj',mL.N
%mdHGC8X:gQC<WaJ[Mt:SfrcKK.5D6[h&PDUcYdaVQ;=M+:((gikGfu`/D3k.%fPe<n2%<j2UcJZ$d(#UXg09^oX8/(b?o/8V?@X,
%IQtf*M8@jC<WuM#&3CR)eIb*#,T;jQj_bjNH&Jfcd'knh#AMoj$mN4s%lbCP0_EQ=CQQ_%'WGD$@)#-IJogg#FjCtWiI&T?(3\c^
%Ha!(R=U*<*Q\k\"lDZJ!4k:rcjtRFFCC;!$=]eDsI>-lIoNIhu6><H\C.W:I[a9nM-Ins\@l59&2p@I9"7=;7$0t=6iRZUAQ,(t+
%3&g%N(#a[,76R6a^8$En#N[(6X''+K:@Vaj`%a[j^o^Osf1Y`HJcmTZI7D9Z5;lfEnC8Gp8rQH5kpSjoN4u\*KJd%)oQjV6:a8:3
%)IHXW:uC=<ZRoYbK/6b4\C'-'Vr^[mOXq3<Wora@f);UM$l<Hb;@+&7L*hg_8ZQu*#1tq%::J!;Q#\Rh_'$9gCFlL1V@f<*WrX2r
%V>,_rWc]@8RN+Br'R1Cf26@SI^s04T=*gpG`0''rF&0(2.Uue\7kuoc&=Rn'hPf1QX1CNrc#3VjjI_rSa3aJlW21CM>!0RC7@cIZ
%:Sj87cXF#F'hGJUh#NKUK.RWEl34M-0Y&Kre#RTgE+N8O6S?kD8>[mr6`%LLAc#Pe$:J;pT-ap0gk6%cqco`;1RXMmUShLWr$/?X
%<!JB'\FCI+%PkE!"]Rb&*KgoO21eECUTSA_7?sU+\4o]p#[p2r#h%b6.&\b,prr(-?uHuu0#48C@Q:]l5#q"I_nZ<(%&1ZQf.Hdm
%??G#2GP;]$`'[F0,sCNUg\BEQn$rUr*7M*VU\NP9`(,R!'Fc^aZ$^njNsuH]1RNiDVdT9/U53G'4.XJfQPlr4Y68r9qJ]K>;5T`?
%lAa,g>3-+o%RJX$Xp?:J01*bdFkF#qrW*>t$,B[ILQ"[#*mVK*U+ud3#-@81KC-\r#A^'e0e2crNsU76`]ka%rS`&%W<oj\p3$iA
%*K4G7![X@'ArYHtb=#gcn*/pu)r"fJ<>V04?NrgJ]TFsh?PjQ%Q4)6Ur"R:<R<>l(eN#88haL[=PKHHPQM1uuF\\&p:%FgpVD*R\
%*3PfGYo<V9p"09pU"Z(1m<amBBl<(q@#&R\R#TS4==*8XmH.(nEN2j%0pcA7pK)0K'!Y<pU'El9:eC:.#"/L]E=fFilEV(T2)34m
%OZ^gKbod?A\dDEa`W*r3=bFAaH"RPK.f"3qN8;n^1Hj^FoM]XMOd?]Vdi->Qj*#lkp*^4pk"tU@-D"4e>:T(Y<aV1N6:YXWoqN]0
%]YQpGKid_u.H:1\Z9X)t@I>*(F!Tk7`ss1Fkp\F^QXObbf=0qCYq9uR_KS(HA6Y.$HJXJ84o,-AZH?ZSN#/Wt7_MB:Mbu<0h@]4Y
%$G?s/Y$aHc2<AY*<L$imc>21f#F;Y<;N"s]>u?.K5YM6fGR)2C&f.[W+6iD"3a$>;/1k\33gn=2VILnBbn%l\Ts-JLF!BPL4f^Rb
%$g.Z:<6SUaeC-!:\mkL6dQ[i9!jhPh*"c^Z!_1i*3^A@/M!@`HT7+,:Br#9k!!eg3#hFpf!X//]-4X90":O&mISdFCE7r^r4b.rL
%;[d,S0t9qfrE<S7<?mm*KjDDhK@]AlR(5oJ7YM)jB\t2L<H8:fWruqEX@%i_F1QHt6a5Y>nd.#$c.aU=k&5"+3U)l4Jj:3N^qB$a
%.)dWmTH]<c7btfE"+5h3n%.[(+)@U_R0#=USP2r0nY^?MeZ5(eZInJ+`3HaG:p6"N3sH:*O6SLH-YNLB(@fg=K1ub_#n+-ab+Hi5
%CeIfI#B8-q$Mt9WJbiCf+_^A*j*UKB^3L]Ke6"jlQR7hg0hBpCZ/i;%e9cqG_uk]R_OR%=,0aCqXcuF/Gc/AT"Y]a/A<QMgA+>Hg
%-tOX/>kuO:_%n:hDPECWo'O"`m\ea%Ub"*8@;<m;<+AT3?&AKW7TAZXZbf)_o9&\<Bt<mS#`.rUGQq7MO_0V,X&/"4U1<T)XDp@S
%KtM\`+6mM<g]1E%8SY=2WHDFs4E<:K_>6'DEVJ?XF#o_2VE,:W[QFIhep5:bgm>2`YqP(j*V*uXamj8h$n)S0O2jH3m_eJs^(n*6
%iW^]1r\<kY++L4Y<(*[#\#)59Nh\m%P3mV*VP\D_$G.6:m^0(V25U)eNI/jo(crufk1d+q9W(P0$Z-O1<?pqj6tY'@)J@N&l1dZi
%Q$\XLj!uaC!jP'j+Q1,&UAs^*(_JgP%>@gN\o;ni+,Wi+8g.](2U(%@#oT!RQ*;euH0pl,a/!FAkjdbaXKB)Fq4BUD-Nt$s7<1>q
%O^lt%2BYDc]CNs$ql(!JMkcru?WQ!Q-J'u4P$+ja\C'<Sant5.m;O,)!>0_'>;;<M[_>_M[%^LbBQhuI^RDU9<abUV+IaK<f_H>E
%e5XHP[?Zq@=R7i/!<b,Rp;q-!S2GPTGPV1OY#BdnB]Q"o3<4ahc<H63G/g*TgMtF.Edj7r%@j(=N&:!ipV-5d6eL9e#J6o]L2LfM
%JK?="j%^KI1t?SG>7Xq?RHgrcG<LtnCZkA0PH%iKR3`!79%n30@-AB;0WVb9F#pa[>\^RPIrK8N!`.d/dEK1k6*d@e-T!a9"E?h'
%9ON/]`YW6)+.5*T9s^DJ4Q6U<7)+pp(@Tpg=ehO&FFgiJR_)._.LT6OoEV3B7^Ik5*8P'&_Vpr]G?_#B9M\Bm#2(AH/O&>MZP%ML
%TV.>\)B-@qG6k?-_t_J.="A@Ub[\,o"1HG"i+<CYDjDY!hpcMj,Umm=80Jfcc#m\3l('`LBGD#p!D9qXD<o;+"sZ/[D)s\?kuen\
%P70c!@KK<%Olf?YVaD\Un=4U'MLBfk/^OP;,:13$QLf7/C0-:VHlcVT0E@n$T&/:Y#*jY%YTc6&5+d3aneOG]+ZPhPqqp=t,WUMY
%S%b(&pL$L[iRMYCjhrL8KB,hZL%("6-j8DJRD7b;FMXZWZosX^cI6sC>!Mn*$;ips?O_/#.]mI=B43Q#/+U[$iD9#KU'\X'-(>gm
%J>INYh3,T?pCa%g,D9,X+E2@8Sm3W_^%Y&-6&gQDMYXg(&u]TB6Y't1:_?II&)W\3(&;<5ASMu=7O8_2)3CCsT.c)`W`o>n)>[p8
%$S.tKQOqd6Mjb';"th%b&Q,EJ]8NI-3bppVST1"_&K2`B@<%nk:FCdc5d;m-K!$:S*H&h'T6lUM^Y1_i^f"<Dkdu_6CA<c6XdHl\
%lJT]$cT`Q4Rc&]&jW*(r2WQ8L["ANceKaPEN[OB+"N>;%jlQ7#8i*HIKG4:HbU:`(kc6'UolQrNCHO5AmC)o)#Urs/\V3?`)H!3+
%9_*T'8,YS"0VBcQ2K1O1@"ChmUXH1q[3a]pd"a6>3#IZOT'QX>`GQQa9`/7_-/G>OrL.7`T.Sd?n$-P=>S\,&88"f3pr'F!l'$A'
%dgo`>O.lb(Q:Q#PNcJndc>K")`OmU';f7Aq#&qj1>I]_mg!+o\2!#__HDZPu0,F9!jo_C\Ipq,;+4r&^<0]$J0@4RAe2/<L'\579
%J+8VW?)#l9\:r\0a8]/L:Lj2]h8!OW#(+?r+fKt:=u33`\?XR?/a=j):31(6oBL^:+@*4]-5Pu)Hr(DX/9GI6"MrrM*/I9P"e-FH
%9lK]@r6'uZ:FH1<.4Ijr43pL,82d60(9XSk[$\UI!s+EPE6pb1`h@Yd9&[e4NGjY>;e.c7q+Yi<+Gip))V!ke$[`^nd@Bg^o*"n9
%dV!p0,M@&UDjTWS(LO?;N'K<RF2$Qc)3LNp?<'REC5.#DXm4W!77CGPC&#lCIY,2D\nLmNepOd;F9*R?'NOCMW]&!<q*pJThhZ,3
%i(3\.1?7+olU"Y-)4&-6Uga7K]h%u^*as53)lGCO#U;raUleG^]tjFd_9&I5JD37>cc;>kIkT?EnldQp,A/gL+cJuM9U^+\CcOpR
%b.`(F%m(s^0N\@KT[K(u&S>TQF6Xp"HAIW`PJVlql<H8_<#[/2L9DDY[!_?aWAOq384HS*BRqTk=.PKpb`O\$_,\?"IXK'Ep#oBI
%m&+eg%F3)H<C^_9Q=g\`W^e>dQmaSka66$&'2*+\Sb!W(3)^o3,cQ*n9jThd`eoL"K]?Uh3Z(5uJ)kkBR[qa],F'MDW8FTRbYt_H
%^nn($ah)\c`oh"4fHhNR5c&<n+65?gCTQ,?^'W7HA0L7234ZaqDT0D34-C_]<gMEKM$X<niA)_',jYQt</jPCa/Dfqi;4`Hb7n)\
%k0l%\C$_&HhGI3bSmXs\H`)s)HEWn^n.3\Hr\\@"KrF]M@7He=,n"/1==WsD`\]kZJQ7=S<o(]Dk#:8bBHb%^4Hc5$).LS<#0YFk
%BnG#c_^-.u3Q?)<4IAXHM+X]hY>tBq&h(P2oM]"-Zm8eU#8!H-f.YV2gfD[UCC,_&aW*)^/L9(9C4ok+58m=HSZ8nY/bN,P.H%IK
%J#O46VRc62qRMAZ`/SEP4?'Kc$O4j#XB/GAdRZ5VD-)GQ'm8,M@S4gY68#6`Q,I/>Rl%SL_?PQK67OtH,4^>c&2;_L$[bl1h+b6g
%pcV>+#/[&DQc<@8?>(aM4F3(F\Mc"o_>#F1ikiB+[*TdE&l>3l($3&R&*$rdC]13g=!=HG>qHqmJK@_#<bER*!36423ot0P4o5@u
%-/lk)n-WGSo99&"7;]K(FE4Q2;/D"!a;`__R?n38\ZT"PO:2^WDE2a;i>DQQN_:s?;OZfjK0EaD/+>5hL3m;L.=uEEW'4UcEai(%
%XM^j"<>/*'pM/?!hF2=qd]cO5alDB.2fNLMgUhq^qu2YAJ\UUbk?7DITO!<'#M2=7Mo;Jdlmu5Nn,AGp(0M<>-W;G89]d:KPO4=H
%Y4OPOTq:Xj@+XiNe]`:ibc=S=1Y751B@])KN2Wms65Mck*Eh62[!j<@D8CF8.?.M+mIH?:]KRuS0FX*N2KfJY.%53NF/6sTB$[;E
%K3CSjdY9bfdNh2II:5.T:IW:%;23'CFP_^3H$9ndpb%cd$.WD+`sP[G$q5fU;OpQ$8!:h4BoCm`OJhKmf;-]blBu[-9rVSHRD*Kl
%!EqpfSDmBM?Vo9`\mc/kd[PLY!l(dMh"A)0INh2[BA>VnE^lR^rS?>q_fePVWj,o2rfcWS+B6rVc_QjVd;eK?o'n?!na*o<-hbZ3
%A&RV(YDP%M8KPW&qIkfk`'X($Q_sQC>u-(@&CdJ?m9I,tr?iDjohAaJRLHcVDtmQ_UolYY/-66so98k?+QJ+*\Qq-69%iic<`FFH
%&9c$&^,3LI%;+@YWoP1$AaD*\YjTdV8r8a<4B55RIWT@OPS+HaDqgFqPd2?INfR$Ka]1sjV"E[.^`RfIKcd<AGG?]PGkWs4CdVSD
%PVeP*N>;Jh7[GQ)BJ5JAci9)4U9^Y,!+;:,ieA"jf$jm/TE\3g1c;#mfEhR(MMaOf]ZOAeh@3C4A=0[EY:4E^<@.1:cP>rH4!FFR
%:[pkJQ>-IUMVk`uQPHO\]96X+@cJ(36Zu>1j6blTpMBi^f3r;*0;Q`,7Y<@lnp$%+8bj6*C<pF:ei"fkS1jG/6H*]M4SR#EDSs=[
%-VlT+B1RQ09-W#Z,U8ohLMB?cHe,*Lqdpsu/H2M,JusG&"cVd0$lNt_Jeb'BkD8G)MN@BI#<`(Dlq]L,Q_>n!.HM3r*Jlq46IX`#
%:P?E80Urg]?Odb8V_*+fr,%9Rg;mi]W`0[;ki@]AK$cQYDPdGNG(ZGOeem$d^^>7F<3J;E4ci5\$CZ9[3?4lB>_7[(T%1)Wk69>'
%bnc%040=Cbc:_U$G#aZugR4Sb%C6[^pc:b-ij.#W8M<!__bA?t*-c`3<6k&8jk/he<O&E`0$8@VL&`0P7.N'foI(8;j7i[,Ypi:g
%NcggfbCm'(F$6t9f^U0TbY8K&;mWO^aSfc_q<tl>iLI2%ME-K'%F4I&-JoZ*+TY^l==O.`-A?:uSt3S9oI;:0Kn.8`____IW]_5t
%V*KbIbYHAYK!<C>i!_7;M!8)B/j0DZlSp#qWLCDVaZ-QMMUg3IFQ*DI:":AlWA-8s7-$j:G$[J[f5PQF.3WMKYrA+>p]g5X"W#4,
%p41sWj#DbV[`5Q$9g)gFN#SRq".e_oZN9ku.s6W<a\t]V;O9XG's?hiKlj6pbcKZEHLDq:001'%*QKkgW!!i%jVfg`"Jgp0e[BTl
%YXTOl/l8!@AL$V99+V79`9t'M6?P1]qRqs.H9GIC9fg-$KK"C<Dn<<_(KV%CHULEV7gbLA?`c.jZS#*ea<+`\VkN4bSu3t6d$O9`
%mrB,W5H7O]+Fu=Ch$bG*jsW@.UNmNId$cQ7koq9CAnn@d0t(5Ge!k(&dV$#]`e&<"TY$S8h8K=C\Q^$]PmAYia_U5m6)lbrKgPq#
%^J^@@q<Gc"3urJ@(r/C<?RX0"h0Z:f2Lj@?G*%?@7^uP7KBF\hG`k$I`GQ=Qbr?IeK\OsU30fC/]skt,>18gG\&LdbI1-*3<dp$L
%/k;]AnX:H'd1@%EqI\!4&8jHF_bM.sZ#5l0`Aip-h5s;k@>B`5C$>5QmcWNIA2=o_eEmi7EcNI8^jc6L."6!.VpeU(ao.siKUM8j
%U$qG#pPAgg\l5P":\2<^OfF<p"WZ]eNNOn(H)VidoAqm5rEfg2n2NeX*j:?#rViAZF?"[F4bj,+Z&g*([ndY2UhUV3OJMcSBPMLG
%=$jI<,YrdJq^@rRkjc(@],WXZ'%O]"28]ZOGNd!WAX*$BF-0dF[8UbK_hbBtgWj&hJ0KnA[en\!f""7;IG5@1&Mc/)5ZAFA^,=mS
%U&.X@Z]gr,F-A`4]ScB=/Ym'0`dnC,_d20h!)@eMD-%h@.e\_b`5P\nmW^^V[1`GWhc@eth=*0o0]!se:7nEI571hC::83=!\?S&
%Y?bmM,cTepC/cs/3>\^S"6&?@qI;sb99#0^EIaIr&(BIK.CT:um)Z^PZ5>^MZ6:MkZf_Wg_Q=`i*li$XnAZfXP5'$]`CI3Y?(s<W
%WO^3d33jShg&b[X-%sPio?$)IS+P)&b:o)$inD)!"0X-n_VP#G]./S4Da6&sI+>r+4[?8O8U+q)JeCJ:,ckprbe/GADf).9RseL=
%p3Ou8OuN6agQH*Ia/IsB7>`"]fQlfK^ESnQ02"?Y`2e3.MRB.LUtZU1><3Gc247^oGTfmVq+0(6^KX%ICr98#]iH??`6aN85F=Qt
%TkX%E.0a`j_JAONC4=]qF99Z4;L.f((%SD@+(IHM)(P,AG3NR?]QHY5.i2Esdcu5JB.kWlO@KM]KT&0QJTYI798;SE+<ar,hX+oj
%aQ4_oL;^2'b(eOA95ZIt_\!%aRNZgX3N_/_]P+@77jQg_n_`L:o/i+5a)L8q-g9)NqeY"O1^EU_.GTt]Cl?3XnU<n#Mo=i"`r!rU
%):'_k=;&8>b=l[ED"3_3lZ:q,k]GaYQFO'lFbt'2Vo#MBKNjXtOG?#SHcL(p1<M!XYQgqS/$8Or"NC2[\oQjFodP0<RfL59]U>jd
%>^?b/^]'M9osh0i\8Jg)b'9T"/lO?jaE.OLFDf?u`aVe7ahFgXe3?])Fp5'7&+c=2\E,X:'-:MN,-Is=.PF\jHL4Hc")3Z+6.`=\
%YOOT_jmEW;mcG(pJ!_7:!@9dD(8+UrJ.Mb=$43Q^5#%L-78@I/)KsX^:;*Z2U_2NJhs(5&L(T`NX9:5GiLtk_3.=INh3(M,)5o3K
%!nNBOQ6PIol8+F9PIkAo3AYH5h?kS63B6V@e8U8L"foSd<ZB>nf&8uUcRkHd)K0Bhg"?c:pTi"_Co;6[:b(%CBY(KbKV_)5%?_ni
%?'%.B,VBVB24q'XFk)t3k[`PQ$R%3_:[pUEoC<ObrNF3<Odi6e50\UEp@Z/Yi7RGGe&2,m+o#to-K<^EbcRJFhI>sCf0Y:hNT,ho
%&/Rmm8W"aGElOhqFjo@V!Suf.gEPO/-+cYe&<bXVGn:aI&9O$%CqHrOk+c$3o#i7<-ZBRE'd(U".qs#BHuq=/e=*mMf6Q\-`S2!"
%!>78s2ELb_r&r%sQCFpo'CMlaY(4#8O,N\@VY@@ilVm;K]cWLUqrLPN7,<[RlabV;a_fj?Ku3lpIK'QfDkkPRa2`mO2p^U>,Q='6
%hW<\BhrlHBpQ&b!=Z)<^h`b$'STdbHKa[!>EkcEj9MeH9#b5L3[<f=-T%CYF?#LuX0C&M=5QfM6]W8JNNk;]F>gi(ri9tmNh8SKj
%HSf6-k5n.1<rk=7G%`^]LlrD8i'fK66Snf=MNguPq2%l^9d.)C%h(Q2Es7\&ND_[MR0W9W"_j!A4gSTY8%0l].45a+#bnZi>K*)o
%;`gE:p`1erb/SP^jWF`/LSQ=-QZ[aeehek0(RuGII`gghQY%Q6-u8ToD@&inEB2?-q5e1`d30u:\rN^bccc"PhAUhZNqli-:0.Gq
%_[c1D<+YAMWod2<^SH%E\"\n;cfgsc!QZO8_=;MlWYk$lb@B@SFb<;iQ6<A?+))81;t?C>)M"@&-;N$Jf]_R-?*d@$\I"a4ofA;X
%Pu*39,!+G^j'aLFEX6n_&E%7^8L=bgUm-(pn%36-:G:XqD'\gS%0B$u1+[NEpE/B%ioq+u5[s([aGGqC)Bl#Y2+SG67W$G7[WBJN
%h"H'8!`;lb\E,/SLoY\-3C,YlKVC^>18?X]b[9A"J!>DeJZ0nS0Br&+2afgc%6Q#mB>IcX=d6@A4G7(q/Tu_t4JaTbRrc%qknZjp
%bSG-/.*d*EY*X>KnQ.us&E234J76j(i`u`![l`q$&$`ckeZS&"dH"3-.qK.F1S]kl<Y,fC[WdV>38SSC*\a7nA-g*"7%TRf;WI[e
%SH0'(@=TmRSlXL;0k)145LE9GA#T-.dL=T3<G#M/J)+D1MS5W'm^jD;Z]"R_dk;Gn2SEl%8jS&YMo\F64#:9uBo6Anh2M%>GWPRt
%+s*H_JaBVZ-](Gmo$s#+N#+K2F^hVOWudYdS"K^W9fr>;:bKGk.XQG61G"YG>lcO-c)*m]kX"l&7B*IWCFu5siqAZfY]k;-V%FI$
%VB-6n)im?tA5UiqWRt8r3mK5BUI@6ZLT=F7+/mDX!F$JEe,hR1dq]jZhe_^cfpRIFVFR%__*X_8pU`WhcRrrT28lK!@]e2r>oq6^
%>=PuOAWYRgpHVJ+e&me>1rPCdqK9[FP*/"a/^;RPLrelp-*s$i8KcN%:1A."73+':84rYf<#o\Eb>A-(2WUQh5Z`QnDU>mDDW>W`
%2#0(K2CT!p-T-Rn9'X$MP*T&H)@ArYL-jSoZ]XL>n4Ve+3jG'M?YqWn4*u*NY&kVB->GP)el%LWYUYWgJnt"L7K9doZC+M\_j4H$
%o;jQCUpF3XWgK@a`-?a8@pk7A'8.f5f,4-K"/ROmj38,u&?=_$,_]%Gc6bCt7/*Q1)ahC[C^5TsEPO<f955I9PIJ#B596(D_HE/(
%'b;#?CR,B1jflY8_la?!S,FK[B@&31HA?#fe$7&Vp"mH,9ubAmiC_QH'$Y-WDRQ>@1>AGK`4iEuWa#)\K;5qnH"PP)BiV3Cf@Q93
%K*0%D8gEo,\'Fd^XY+X_`pffn7@^iJqV;VZdnZ-O1q28<rQ@n+><fi8[o/E<V.dg'Cb%@W'$BBSaCMYp;D]_L[FZ9dCYBh6`8j$j
%:"ZFj8Hai:^RLJAE,<%`\^]9$KD7iB?,nQK34`-JX_)1'C/j*LPnjKt?V'LP:iQQQC:>hS;Ph>!-un#tjMgsZk]^Q/G)t?aek@9f
%$sQmHU:nF4LaMno/kYfPpUb:"j_?_9a_LK7[#tO1GLlbg!tCCm/tk=LO,/8r,6L,.*bS2l<\]XGNN_!,r_l2k)SQEP$*=SuY\u]-
%o7nPX&kuFK`^bE9/ZnZMBR!)*DNWppq#sFRp1`83=J=2p>qBI`k+blbM\lNY"uR*INQ?&fK&@G,]iD.[%&aNJ<U_q5B7&[S2]s`R
%gQMY<O_jbWf1V4hdYKQ''M8El>8$f1roB,cWfg8!gI8QPqF/k\&>+0cKfHAp;*J4$@p7NLVLmkT733bkfHjAN*mX5FR<*USc87n2
%)p2G]DIk?0@9[E6K9AG(;S)*NE/JY8#R_sU%LbkT]sI$flF@VK9j=GsRUYT6_I"u[f]6*64"ej*I!XAI?h&G&D9J";*$<O\";upe
%@Md@nPDl1.2;X![&>WnhGu>E:,TG3$s5\g2B]?LI1,&`\eZs:&(%(k>,K$o9,kYcNGpL\BFK1J_)nVQND)2'qei:4s!)W5]F1bBc
%-[=s*a(r_58ibU&NZ7hDJ4C+bE]%:6B(/Q2H\OH0*nj^`gT^a0nL<143'sT4c:d8>nPVEcV><MXSSRLC:=$'ErS)JoPt@:n\[QAQ
%E>N1`XtI"CV3cFd)@=l(IS,c[ies]DdY%W-eLm:+bIj;W$!9p[+F9^_#J@a-'0]Q^S+Zu+h"?Seg5KOrZ6m=1j60"]C&<tq,]@Oh
%aEf:=0Y)g0/k6cS:o,;BEE\E_1[QBk]loD&77gfiOE[QR8;*Y,Wmijeeb2e/mF`F9WU@r/Gqm$Td;TO4M^A(DJ7Z:H9Zg8"H)D[/
%]&@%tdKe'R+rhCG-J<eOg,%2.g)M)u2F^?;In%&JQ2mmcTE(T5QH/9)i\.,_!\PXBQ8ji(c591G:N-'\6C=BCU-F0.jn\-<p@iTL
%2UBP@%/L+9pPX6N\uaH\(s$TLC5D2db<LI##<k8fY;MsP[>jr+Mal7d-FM*0QQa->Zq>))mC^X(Q0N*pdWcg.>#NS?q`2d]8^1OY
%pP)cM?&#)t8QXo-D+,.N-ShqqiL1Wo800;#bdmo1]4+k$$!/mth!A!8dWDFj9!)-*]a^r*`G<,@XZ$]i").iSJZ"?#WWF;J,'B=!
%8A3@^0#/bHU8GEE&k<JP"Mi=S')fsB\k]=Wbkn/;SJsl&n7%@Cf]M$UfGKX!^R&=96ScS``hXF;M^7rXIHL2t(P42Kle">r_@FWr
%al:t%QT&7/(?4[ca'?!t=E.e'8g#=lqi!DpLQN"1fLUg"pY[4]JjF+2#N&8^X&dp`NDUUW<3_#gr$GpT<+8]bQR!HA25TO@9d(E\
%W]rcBK#uck3BN?L/U-_>l@T@sGlPk"ZTjn(M#<+7DO5(5l=ZGm\is+.`:NBKIjA/f`%:t-o7]eb0+$**Fbmd.ioa/g<"_3oRROUT
%\T#_N7X_<QJhdgB.7YGPIO%AOYg%uG\&5P=]^(racA@OVBp&mC(%;WpXPV+%J_O%j;+L</a%BBO*pnW,q-[;U;0!:?>JC'qPfpp\
%S<$Z]lF9h@M6cNHZ9&J<D[&m,R&[P^I1&S8>p7$C:q/'p#a0>%Yu1DN+j<k,CZ8gNi->9-6NMm+Nm"^8DVUP-O1meeeh+V_Cr<%E
%":kTBk\CmFKK@i6d*K5+H]b4L(]ni$0j,jRG-9U!6(Hm$NsW&.OtsZX_'&A9+Qf9*/e.%NR#bd)Qo)@!PJUGF(K+oC]RlA//sL5Q
%XRTlV5I`CnTB-*PTQT(KqB%QIkk6>A`9j0uZqaam'Hqd'R,0SWTS[<hgiQ8q[h@36\stTg&IFj,.4P:YUo/4>gZWAYX1(Mr7i7CH
%XkdqLkm,DaB-2:or5kL:hY5R0!4g*!P&-.-So4f<O"?8]I[5e^ChZ#47ru$sF.R44Y<Y2#AZ1'*<6qmCIes_BXFDO]XT,i2,f\V#
%=oT>0Ci=Ier8OJLQD9])-tW@Z8i_Ai.1oUsc*u=fWmBohh_Usg"<)$M$&DI'B<!FA*i?Q3)%GIRgjh_%`8BDEWC*od-\#[V''B7D
%RSA7:C5M9MQVRgXIRM]+0)qB2rn`l5cAS<_$h1bkAFI7kQ]qg3^;Y^2,.SgSbWbul*c*G"?iJ_3\;1PboB)*`PH@'+Yg`@Z:3@Bb
%!"-@Y;_]$'.!$GiF4JJH$DL6JTm?JDP)2CUS:`"!&D>0h+=4,6_S5#.KdT2@PE0#>Ce<(0D<"Y2m^"n>jDSRMX*kc6bV1fK$#hYS
%LT#\[$>$02!7WYb*D1:/248,7f+NpFp+l<Vi4_X)72oN!V\fE8<_'FKi.@qmGX?tM,:u)95$Q"'m<GGp#UmiX9Y#:6!=[D5jM@.7
%1IZ,p%KImDYQMahK[Ao-i^L.`:e=W)kY4\>=]'Y0pumFR'Yb6In[!dub+osJfc]@6k"*mZ2Ks/c]E1S3fs<FT,8aO?:uL7h7_.Va
%Q^Fkc)SFi@hf[Sa9"HJ2+"ribN\38`nTPV"k',FbR,@Yg#t#6cBc:3aPc_"`JE0=H$?<[DF-tqPX39b9<,J"u"%gsM"&NQe%&1>4
%:m)m<,)`&,A8k`k!G=$#q]:WaDU-tkh^V:O!\RVjoqIb?/Q$kHVSNY["$3gn.u#AU#=,W3V'ZMdlouH.&kMAEf4ZI?'nb6URO5f*
%RuBOtQ4FMPetN&6/?\sBcM'>=nOMYcGX5&J`/1]Cs/:JN?Kqlga+L06km=<n?e7n8fC^JMJ#m_&"Ajc7:uc64!f^h)TuIFm3k(B6
%p=sq]e%mUKasn4jDmRka87FuQU%thkCr06?..R9\8U=m>nFsHk?Bh!\jZ9]FfCC=T]3cUc*bMe"gLF?1niH,G($T4`;V#C#;T0(f
%er<'hEO$C&6$XjK!$+M$H:JnJX"`<X*guDl"9?<%D'IR!L'*JNPSh#DJ!Fsp0@$EW3J%I.T%\]E\F_3Ncr4Ag)Ga[_m6d_sQ-Z*h
%TJ^)TiR@o7=&DK$<?p*gI`IBu$rP/Vro9hE5oa2L:W1`WFu.Z"GP=iLY/DTLK$e#i<0.!X`\5erD!bN17!D,,!>V\0<J9(E6odmF
%Pi0`!`EEM-RJI1`\^UI?k!9Zt+d`B+4P[4cr\>G0l^J=9gMSneVVV^A8(lo6FU?aAkX]P-or=G(Ar>nN/W'GWp9ldg$RCG\je0g6
%lON1D)Zrf82q^BRDKN725Si%0H$\8??["sa7LUu]I+_eCU_7;eOF+ma0kR<LCSt4N?$c$OAd7=]Ze#kC6kF,*[5pcN-`_Fg.]]h?
%\[+Gb1JX)G[%u25XE1/*o21^"FTM`[3UT3qYJ+OgACBXMNG7&Z`i/(4eoc\0gJ=4"mEF>>'9++no#[8o4\lrmB,*SM_+bD3-5ll%
%W[k/DSZf%$A\2"&VRfU/k5IhmnNb9MmZJq,>9(eD0coA7nnO3/^/nX+;>7cpi\nPK?-qeM_7HTuc(TL?X"G6?<Ss`-;bTX*FAlI&
%'t8P?,q1bK)qDnom<YtI5]FoZ;dFEK;)j#)?#&M;hPi,ePb[-:DY;)d8(FI)[-'O$V2@\nnts!M0>mtL<#5uX7Du7l&fo,jhGgu"
%A3/SG/iBYPYIT/g_]FNsM?.n5;-h0;o3QQJVQKf'FfRtS4DM#'!^<P8mDH>]H</FsiF5bU*QZ3MZ3Q0E$?[MP9N5:'46Xd]i8$X0
%bHmkK8-aPSg5.N;>^UgA.(k5)<@aToclKX?%h"eU6;*"A1X,M3LG_"oD;^n*f"S(#!IG_2aNC6^Y*XE<]WI3;cDVGth:B2X[pA[4
%\DO6[iqq68CC([0J-tPT@_]=9lm'i`UT<C]ET"0[L59]GjpT&O6VrpKN*A(F!GXV#TFE(1$HC12*kLI\X609F;*USu^7J9<?.Us0
%Vr:RN.$*f]%`_7MW%'3@qDIGWUPEr^;?2u$:ahof/1R`ub64V,nQHcaV1(n7rt)ns,g8037h`7+02ScjPT,3R9j0*:)jm"gr`E<p
%L-C+2Pl_l2cB?e67eP\D\D<c+`.u'@fgAPUL4Gq^I,!Q%Ag!N97s6%8[#$6fg>+o07erIA+f],rVKNtJK#Qb^hui1,*OYFE\&Q-f
%BUa:8VbAb%mQnbGC!gVAlac.57mSV=gk(eTc]PLRj`JnL<V:(\U_NEi@I>4f&cVd0?(n6^-JgF&k+_<`gLfT:??t0+:92d-/5W&i
%"$;$'T8#5;WV:FSTOMjt/LN&";,I;[hSV7:loWN<5ir@&:.#-,@2<[YKQRk"l,d7ZrH[94eJma@9[+5N[D+l?#:eHmVk%u-@s_24
%:N(Qbji[SM=n>CiTSo"HgjPB/L*Qt-5\-*s(T&=EksiSKCT5XC1"Tj=M`CoZ;!Vt^e.hPh_(+,5$XD)\9&6H.Qc"L1?bM)gH>"hS
%:[4@uQ&?p0XT75k9tr\j'!toEL%CFDNb=qqoU1-[ln(qNDObUbXHFu54@M*,(TR#KD@GBB=fL>?BGJgT0pd/Z-2?,u5Lku'_qOkL
%Dc2lt9RaL_EF#j3Ob?neT&%=6V#`-]pW&V=%=1YIrHgR56n<6_C-VkkO%1ZG8)&<^%[\328<o`CWr9(MTP&u31tfc`MFt#AlNCnW
%ds]2=](E7674=4m3M>g-f^hu3$.)A@TXE><";%f_U?)XZfKh*3T+e$"1IdinpGag0D#Pn?6E*.b>CmhNlM#$5PQN_*;.%3Dn$H@)
%jCW*i9Ml]cT4].u4>9*KW#&]>UO\T.%X;086Y,<SC107o(T;#UBi^6[2EcgiIsa[<^W&%C;OThAb_@pHP&n1n\#d,Xf2F')0U="m
%38.;,(Ai-_!E**JE1WjRe@edB9[-#m$4(it586n#U,4T!J5\Sr@=*$s(5%1u_`Y#aGp;75;%6WTQbdU/ClQ&R$-iQ!BHD(nh*NZ9
%%1UUW&5o"<#g&'b"^J@s'MsD;i`+(OVqH5X#pC89h1?S4a&;RDNF@09e57AT[hJ0&/@dM,Q4iI09Zb]S9Z!S0=\ipNh^@Hi]-/@*
%ku(nMR)V%"5dQ6IZ(o,bo^FcQRk"D?7=!abhgXl4I0oAhF7+hP>)nuCEcN)0Z/=#k3'>_;r3\(6QT@7rbnbM-Dosf21$3EN"lC<X
%AkqN\\ig,dI#16N:<h`rI,9T6l4DDNKkJM\.%PKj#:Wofl?URA%n>1&Ro<dZ_!YB_,k;1K8eYXT8N.8Km<)&\%\GORm7/!>d'=LN
%ZVIF`l*5V[X2gL-ZL)g88pl%#HA!6.aiT2mK'^"T""Y]p2SBYX-_'<C6nE8](/p+![EVf(5.7u*Nc6CmNC^=Nm-nZ4>i3$X+/bF>
%1`>98gajB8K:m885R##7W=!gbqsB/59^FM[$:V?5#Ip1.7,#ePd&Et:e2,piH5E(EGbJeO/X]3?(I=@8*H7J^T,MDIOoI>'B!5h?
%?SfF[7L_mOM)2V_NQ;SjSM!3Nj1QY*_abER6=:h'H&T>WBp?Y+>uA1)KHsEe2Er#9<GH.;X@d8G]II]d'ss9Ek,,kFfVh3sK1T.V
%a1'7;;2-nB*-&Z*$RgD@EfM/f-7Wm#?kZNV(<G;Ir1YF]Q_aBfmcr;SfIIPIZlgBSWMNoODDlahh7U.b$&^X!lm5E1\16,*nu5),
%5,Bls8Q7Wr>s"R-n5kJ'&/#e=*LN:>@D8HZNcbc;D[BM>N.TCYR]n(RL6@g.=)npArFq.\TEC5],pKoMU6Qs')*E(J>dEi2MbP;%
%.]%Z'CT78%coQlpK=RuH6;B\I]23-9qr&>2:Umlt.1U*U^PNP$!U#?[L2n_!3*"!jY.u9+/IVHY0ONEF\[r=>2[dfn[6p^d.h[P]
%BZgKbZKKCU\rQ`VIRp7,TD0BP/<N_[`rPg5MATX270>_U50/Yfd0',e)=LH;iI0/DWW<]<J]GH[W=5Nnik]k1QRkK=o<bd6+mhd7
%U?;S:mufn:'S#OHLf-.U'7FiOm;Qo_@Lc__V?JVAUIoXm<2bEpH2_mtBhHr>2dln%mHLRFBNU1;ApFH4Q53T(MYUp'&UV4kkLKU8
%AS/I;[5'rT,VC"6TO^@=cmG#=M@op[i98&4me>ju9oI%$Mq-pI?W$E6`_1XR^oS51i>p7V0U"WPE&_*ij)UG.F+R+>kl;].Zr,ml
%U0,dS9%S/Q6XCH/]d:$!=K8@5ZrG=$_Xp9#>9^>h<41MLlNcZRP<2s0W??/0\gri*:(m(COsD!3G\M<t<J#s2HqlgEgS3Clf*aNX
%<MQLJaT.2(qWmss(e9Fs/C/WRi][<.Wkuld7]%$q?(a7O`!Zuq18SGWVG8cPNk/4TQ,\a9Z.PM@;d]i/46Lb?OuH?R,H5`XPXM[N
%PJi"\PnOQr&Jp%^3@)#@>s*Sd'.`=B"E74ob!j-KnVJ[o^8"ukeR&#$;u7Go:BcN.qp6up?mH7rJ&Oi\,@^FDK<Ye&!TSYD8(k1c
%N/h@=$Sg]2#hPer>V(A%K'7O+U/@r^Lour<J?olD6m6Rs.KADp0S2GKj!)N:^<Z\QCqZ2Ok)bUFAY*)p#%M%M2E!4-HXP:n%D!\^
%cDSE[a52:24$W[cO"XOgWf>d@`&L6+(Ce8:I3c"8o:i-4eWLX9&VWPl<l1>Oo@6%q4*MN9a.);(LEY@*%:i">kgtr/JC<,*KP]bH
%gPGD;EG]H6s0&bsBPLc3oC\hA+kf)&`MQn_V9;5?9CrO*I:4Mr]K<WZ9sA!s*(i1XR!.:9B@bdLN*HBrcC*5*RHBn^9nd[JQNA$^
%146Tk(eP#Q9OB]9LQGHeEg,DB=[ISii^A=7m#.]WgfB=C2FL#Sh_!C-Rf8$s3/VXl+c,<KB/dd!"eq2q#GO4@J/8Ieg+(P"mXngd
%).!_GFH^\G8dO2[;0Uff36Sp&><E9Sr51V/G3NSa'f3]U5joG^SXbUH%SV:m0HcafN@C<=kpaCDh5+mU4K*U%]JnZ;fFoa-/jl-$
%+E>R]c#S,EI_@Qu'm[u/!$t,fM8IE=?7>t1OJXV;WTP[()W5L1(1j8TXZPiREj;A7B:8Y>#HsI.?als`5JNjuaWKRoTWCB7^Ae!=
%C>K"d`SAS+4JFHHEId^DBa1\%cS.fWe.OW7cH*u2RC0SVf9s]%#3Mc.Q/oUajPW)WpjjE;&ikXdRHRqFX;/AleVZ#GDKVIU#8]Nm
%;PNO"3\Uc"NBj;^caD9E6cQjo>'QA['k4:p!>qIk\dp<jh2=o_X4nAo7k&fO.eM+g%OnG9o3&2L8]X4Pk(f4J>1/`s",+Kr5+2j%
%m;M.ndb0RhgJbU@VLupoD4g0?fkK,ofZ4&T;:&M[#fdoZL&NS5R;R&jY02M(ePD:[Vc&@bHc#>rA7U)aYPuNsZode/)TP>lhU,&=
%/.`S(Xphk9E[T;C!8V33?U)U6]C&FAGeM"hNfXmg]5#)$_rAbCkL&+9-^WSJ.CgFk%>^ls0I1_UlFjO(?XpWDiZ,]s!*HM]TZ>U"
%#'9]NN@OSMp_;'\&6WjB695;.TVlO^BSbD0F6/9pH@032`arHZYoTR4:1Nh_@uZBPePpfR,$bT$YR7E)*sCbCOj;p[H0@#cE6/oW
%TZ7cV#9!S3C%]D<`N7BnlaDC&1.h0gLu3MH7ll1NjQn]2?e@JJ"1C41<H=(!P!pX^Y]lBje2oI(6!>VdF"]IXBHGkI6<l<$"Fh19
%2s!Lsbr&,)WlnP7aFAY>@[=DP@dJ0mOO,&&b!ms,!n^KsT%k\XhDIaXhGMfCT(?-!6S-#2eBa)P;%>t#A6m.B\6\GSW*iKE(X=e!
%*C]#!'Ftf2?ggkD`ncI$g?1MPKdI1@&JF='04(iMSCWD^ATNMEi:_#qSeguM2HU.7`&9uIQWLeeJEBk36VaF1Woat5lVqo%PHp4,
%n(crB0pb'6HruqZ9j16(%1e1d2(damCOT#AZ4PcsKLOB1nIOP4Z/Y$!+WW*J"_:S,W%UHGRmqfLkYmA%X]!J:J["smV9)\9niJM!
%^pU)h)iu\C:+u<-Hn5Z\4meHpmbA2en1Cqe&?j:L[%:p(WB#i5!oKtI63T;Ij0<N#7&A3@jW''((;Dbpo:Cn%5[()K9o?<kqXd\U
%#5l&K?I9%$I42@Z<hu`Ep$j<.]LJN["1R=daP%3J/NZ)%XIs-YEjQ>XH<.=M?:a)rf_X^2%sn$@/tPn4^sGZ*c"-#U:7LC`O*G&a
%atK'HFOmKfq.&Kf2/)W)Z(>"hS<4!+0@b;(D8)V>Q!%+J:l,G+0DGe>[4?r!<7A<rlp[*ZL!a<pQTs*O]%G)Raf^sL`A#TQ2VU;*
%EaL\AH]a;DW4j,fa7DUe8oSV[0""-ri'A?KAP1LMZWnJK\1Tk9%NgM/*QG('cV^?W"QalLj,,:aS.i3,G=g,=@JSp5g4m[]B%sS)
%8_oUiC\>'3?L5:t:;<9?PoHg1%$ud>EbJ4fAnhd[02"ephuY)!0IE/6-)FQRDG9gHDQ^fZ=(@$EeUlRQatBESO=h(h(n*&gT]0*Y
%L8jeVJlGIUqMnP4#="=N;cugGh6ocmFD+4:g/$W8bHclp&pB>#@1lBtF(Xd[:C?`.TboD>M@Bc1(kDJ.C;%9lL;1_qE1PhLLZ8OZ
%9X?.C=\=j*M_(pfB]M]fA.g9o)"C'cG[#W<bl]aW1JXjUXiV^U1@qU;k.2"W(@^#rorReT?iSKNH]q&Tj\Y)t0ne$AS"7F!h(S)K
%hiGjs<2)VY%Blk;r9oUoD`@W/C4K0BdZ.8=G0`>JChDO`rf@Sln\Iq82\u&``\>Z_Mpo4TUgIr$Viu88gGQH3QJ8HX:dP4uL)PRb
%)R2Klfe[C]/cpj*h_O>cCEeKe@'7Y*]?Ie(P@Itgc%<XA]8XME]QZfurMNQIOh+UUB<g:.#?u2BEHIi&lV;Ffk9;jN[j`,GVhk!5
%2Vs,D8K.2-]VO)V@(IC`$$Yn'Va'h$mM5;X00XaHlFOF5K(80kke'kI>*Ds#S*MD^^I@LK)I++_fN#!&K+V:)FHfa'C;oOl1F@J3
%[n\k(YRs:"(e$t4jF/H/:UO2"%;g.VX-+CWIV^=;jH[*Nd*p3B*VD_h2_;RgAk*Ug-C+*p&O`#/*78#RG6:lNa76&PcY9<kA"h$s
%VdFh`h,@Zs,RnepPZ5>#P7_<J@u:uC32"29)NeWXQ:=h-<f.nKE0F>OBW=B_p!Z!\rnU8nB3s9&?KBE@jo).HMQsn1*Pt9t\/#6:
%;[d?>hA6I'qTYX.ZQA:N480(UV58A/l;fQi?p'Z%c43m_?i=?@'-5Cag-L8[.]cCBWFS3X3W+d@pB;4$CE@3YML$mh%0C*gjZO&C
%'4gf;I;tLh":<NBP%lC<E=dBYfS]tG`f2k$j`_L&5Q.%i\6QS:R,EsXOIB3m/(1%bPr_[Cm,:o8W'@g-QdZP<7N,.9*6I@uIc.2u
%nMNLkn^K#[i^V04,5Gf'CBF)MdI>0iML!o!WDQ\9dH,5!QQe%8R2Ym3oYn:":W0mLi=i9+EZ:[b<Ge#1>?*D+HIuTZ=k<a\htD+2
%TCV4`J>%\-jk^,V0B'GL(=&W#4I7&E0*eKK^'HltC#kEM!SGkc\l%L=/2$lP9&5"1,0eAAQ)q@/@OB?WV#f`ITU\AlfSS-XK$P?f
%PFP;8j?j'`n!h#X2IX,XgD78q'jnBUJTSJMr]4_kFXqng_iOn?'loo\6`[`HOuVd-O&XT/_.\q*I]*QZef_q(9ck@T+NUOY;C_(g
%2*Nmk!do9;l$n]Po-`GbmjAX][VacCS,uAX=M-Zdo$k+EZ74b&S3Z&>32L<U80Q@p$&*[W6A(0aVWp(I\L`fDO]T-l915B'WEehL
%P#R(5>s=3tfURq/'La!Ch3VfAZ=]qB'NR]CRnC'_Ss==BB<;'sUfe?>C+@)g\XcE$&F7L''%n[9_(>72ROf<-p+[Q2%-Ja`Qfk;o
%;X??BQfkKoVg$rlb\B\0Ta!sGW%-B/ms7b$m*W"hkg/3b)X]J9R8%C%SpO\ic73n3%LH6uPC=4uR#uh;eA<X+.*a>bg_%,?1H-HC
%Zo:OMdBsU<.?nMD,:WnXU?+hW.jUW42oRQ6Huf"oFka=kAKhqY%j40VhFci^%rEh3D`#*mP8CJ--^CD%BJ\,%*3a=r"J^l(Bi<2O
%Xp`%9Z6\+HR7d40Z=@g3i$!YXAR/\-Pc`r!P&EU\HBX\s:W;(..Oi.BP9)p#+ZB["7-oK'\I=6AH;0=[S\%9^ZAtFlC2)Hhd1@"M
%7_F[j.[[ErI*%Bo%YBSu)KKe]TJ.;WSW3N9$E4ug?kb(J_"!n88)8B]K^A#"*\HbfGe]Q]7mWh4"VStQdNiqt!S%2Ns/mitW,[]V
%e>XiF.iG5JlpYY%9WEgTe;Oa])U>,++ru9\Zan/6eZY*>>^n8=Ii#b^8#-3i"!`@7#:`*<;FtWGB63Ki.dP">4kI*0,Rbk-P#+#8
%LQ0&$8t%!U>MhDde5nTe//<Ks\X$B`A6jN^s+.#MI*0H3XFF5<j?U10qB.qsE)fDmIaqSY8Au#9/-r!_\%HDe;$ME-W;R&.O/U#?
%ksD=qWuHBkUh[5605ea_hJ3$:-'"=AJE&XJYnFSBPgf0)Q,#7T/I;Y>[!3q?&o);SXHgb(*/ZJ=[DA$;q,PSHFXKu]q"6ILrr.dn
%o>!bZ;bK%^KrXOe8Q<-GK(:@S@TMr3&QS/Yk@Ke``grku5r>7MXc&a'?<3)c80AYP4Hh^tqbfk\-9&2ea2Wii"_G'`[bJdQVd')i
%)`DiU<Q]meR.UYf=\dQS"EGpnU*6PG.`EoDU8hWeM"5X?)+;W=1J6Sh1eJOc@?2&2:k;T+VnfZe.TI!nk(Cc:/an!]?!EWKItY'D
%`Rgse[p1CE%U(3k4\pE9WkpkjMC0?&UaeG"*$6ZR/mfCW=G^CMCPJe"d%PkB\Dmp)Tg\]pK4Q`TN38Z^b!6La8Rs4TR9Rh<s2c@q
%e8G$h2.TH(1pA/sIBu>1=*f]o&?L&Z!X9'qR-lGq?ha+_OLoOeNP8\XJd$(Z8r`.%M.fJJgpdM1JiQl?Pj18(PA9l,#FmJ,-NPJ-
%6(4TGe7aOFe71[=[_O2:,hqQd6(Zd?39l6U>Ss-6ar\#^LkoSGFTA7uW+@aR@X:>kg'.^<ENk!URTm2i[gII?rU9K!iOhj%&>ukY
%?&qF-Q?pb)o#bj3K8<@j6)a85SV@!*Q_T?bRjT5l:AsZO9u*!*<%t1jgEiP*hd+TPaNsKZi<$Af";J`]KkiLRHnj%LbL-pT$`Wbu
%;I_M)6jQs,TX"3"OAg3BIVgEE<rpdJ0TfM^>YpP^KN:WFdih<>@YFJZ.5+R0S[JmDINp%I@W,b6eW#,K:\],,)aUQ%iconQ^OiT#
%cK;Zd!aGJIdQM6g8bc+W_.lH_6#()QVQef)jAdr^8`=-"dsY4lB9Xib7YRV@,!Sr3JpEuN4\Vd!r[+')iacRTmYeWSp^764Wi>)"
%)Hb`>.Xn^_[FujW0!]SkSAh1S(@:(h*5sj7BU3o+@AECl=(S%_AuX:4XbJe!PHY^;ms/qHf.kn:Zbk?,W)OW>n\Wd_%'mJ?q\252
%"bm_X`,J9^=Bjj(F#SsmEpPVYU/l?Q*KS?S-ZmM^gC="6!'j8hnr^s$kV0Q#<F^+2V*s^2(4>MZ<q\bJ8EhGgfVdTnK2p-AnKWrS
%S8(Ycq1Am=-O>G_h"Np%h.5\W;MtG)8GB-O*kJt23(3gQVEP9HKTj0H/Zfm5re\[F+o&bT:qZ<6+&mTLZskL)J'tZ"^o$(:J^URQ
%]q;)+MQp23m$7bF'b0*e%3[/P1'tjtMYE;B`Ka&0<`RS0K!Y7)Zo3LEC&32`,mkPane0ENYq!NrT*(3<"'@bcD'3S6-qm8[,/N@)
%Vg!]qp0Wi)G4t4,_t$K79Lph?n<1hZp<2o\BjW(%1>Si?^VaeDUQ((&@;I`e=tf\Lh`^]cZ]eUNe#+abR2Z^#*BL*.g1eD?FiO]B
%aNR?&MHM[Lb,UB6NlCIEp>/RnM;.W(>0I-oo:,6$$ci!'3qVuO5"+(9`j*!<m.noSA`p%Qd"$-=2j8P;+c5$!GNt>#FrGq&D5c0K
%=d1>\m`E#`D"&CV9]\N.M/W>3`8B**J#9%W^Bci37?Fe(8!pj*`Y4lf>)';>WTXEI\]%iW'd?[F2#AQK\2+0_1_ifq*8D:J0PChO
%f=.+\H%oT+>G;X>`<B`#B_>UkbpZ!NMpsaGdS-9"hMbu.mS^NP5oqf.,j&,<Bij+?$+b1W-VsJ"AC%_T2"s%#]p_P)PY2Lm6F2a!
%%_>#@R+3W_,H[<A;BSbMn7r>W!h]0Bj2ld'cGMb(OsdcB.1U5(@X-kI[h0<1W"<3EV*TC/Z<eZ(qC-+[Ln2qOeop--gcnmUlR""5
%8rk=+Ok]8jmCc$5ce(#Io#RP>Wm)SW5!h$F5)I)n4\0<-0l40W!i$JZ7A\K$[3TIV]`&5"?rE#Z9"*.mWd9dq)(e7nA=O;o](&=+
%BFDZp>>HnXDc%1H4[eDiUEj^J8BZl$[WY'*Fnns\&93?T_@cd!%760pT2CMKO_<I[h(lW)6BC+LA4l]9[k1MGND@,t<!PuA:*s7N
%%RC,H1J09^P?bX90Wo3?ML\f=J`:m;@?Ys7/i0sM&^W.5Mm9Kl%,"XrSo`5H*"_'%)'t^e5rU/_ZMPs%5$_@H;':[NeFZ(Ec,j""
%133;/<s+LW?4YFgrKb1Dj4k&s1hDUJ`m7L.bUT:7*!qOpj)bLI3h/?`<D9<3JcA@b*(CXWZdHM!o7+4FWHIgS$FG)G@aqG=,8jh"
%HMrS2qH--4d3?'u:G\#YIJ4]\nr\.o#LKQH._D;?<mAaD;`6WW:r^2uYTi$?[4:8BeBkmq1]K$:g#@`*pA494eYSKc%a5l8lk1YE
%pW1,dc-$H`,f4e_Er<jTi;V;p^&7odR#sS4ESIn"1aQo'Y[oTdBNmH['Q)tAI^7eaVdbt/k?Iqi#k6apqi(Z)kUm7]kAR8&<O(F%
%^3Q/64gq=:T0'lU"*%\t;B#52&^ue@OgHa&$TUJrVm$&!1tGH*(VDB<=,J,jo>LCP#+&%O:/b0j.&p!R$nKI?V;=93%__sCqhhn+
%k@7dL!kd6nci6smJ2+P\HoJK$(a_<*L\jZll=$`P,,Y/pg^Y/L;Eea3l;jZYCJ`$O76tgl0_YFS+0%eC"SWbW:IlB[0&(P0U0.[T
%M,9@[6Xs(;rpf9drI<V9ac<7OEZFiWpDn;'J0]6&c9-3PUu4"/h.T-!eIW@l#([*f+NT8n^-=D45Mm<?R?_b`M-O:THMu`C#!Y;=
%S&9P%%*'KkP)D\5B!RU9e50#XQCbHE-5\\O'=1-DU#Tm0"d6o*0mC$"et(&4+Uk)\]4$%'i,(Y,0tWTc1"cJqdJ*?fEo@TnWiJpV
%beV+;;EZ$PdWq^I4;=*r"`%'AJh(n:q_H<W-Cc)E9GF\1BBXmY-S)%1];;s_qoq6I1km$qbk#P:3#(Q\;^b!^-Ra'O5EbJgSd_.o
%e\)k8B8-7t**'>?@F.&u,U5@R8W-/o=Xj,.`h':dlTDSI]E!H$8&-"Zk[R$=X;+f>]pMfS:6a;-!35,u,M?)`XKhO:BJ@qtS97\O
%.!%+p@:':5i4@*,ISjm%#(]VLau5D)%0f(8C8t#JG8+8eaW/u%]\u3HA8*$:U8OPFRm%HF!dd'Ar)8jd)1AZ)iScW;/[S\jheFlc
%oTBA(.aoL*$4#/JW-W:F9'+Tr9LthjJ]-48^t2E:\oc^!@U#3NZ,PO&dfrN8S01u#$"Vk??(5$krLJgK&^aLQ8=CkYABSutLeH.I
%%R]r!Ao#dZ9g>7PG^Nj4hcZW,$ZGahT>[N)$7d)o`5sss:e_@U(p&f2gP]AQbM[Z!i!AE_`1jXa,cUjl+U/]o6.VYu(\`#j"WP!)
%g#8m@c:uco]u:76OS'u,Kr*%o]jPcK;Uh;mPZGtB8a.q27pdcN,pF6m:\cE(Ge:oMW75;bHb!Xo\lP'Ej^ugrm`e9<&1^TpICbL%
%DL%+/V-ol,ltFrq%IUbtC)JO#3XrB-h_qlsKo>$I#Y_L>g(NQOVJFpc-)QG^/2TZP.(Pg'VIahE,\NCuq\ZP<cFDhlTHkG:*ibI!
%`\/Q^4-VRlkR)i-V=uF:/9_J&9_(MiEYU5h#T4NF?D:MZ4Vqe?Cf&EMK6A*6#+oWR,d+\^0T6>S!U2jY!!_,S?CGKVE<PcBWHfN=
%AR)ld`@n$l@*0cr+X27sA4o1&A:lL_&H,Tn<5P,`Q?mi:Ee"\E!!5-*VctM$.moW,_VJpDj=XlZ@;f^3`Lff/*98E82GOU-=Tg`d
%8N4P%E0`(b)0sFG"]/[1Gj]DCe<Ob(5cc4Vkl:f,"t,M[]TC_hC8[QX-bcKZO.RhDNho1C(=MTLlh_QVjQ83u=+#Y@m*F+Cog;/"
%,l4S?YSk<>`"gagJS)(=Rk]fiV_k10!";,#=OM_>S8d1X.s2e#S-/C5k\$*WXD-lla3asYBS1h]AGZpWYU#W3KbbU5b,Ep"3>EVO
%9GO1N;XLFt<mqSkSXU%XZI:9lFbP$mFb477%RW!FBHWgi)!oi_%Q)0>C4XfN?NDT>N&eT1,4N=ojttR:6qr+XU6i\f^%+^+MH7Cs
%i-d.R@a8-:<6!"n(7UGa!nn[=3"6We5\R\u;c_IXRM-:G\d;@#m3qqI.!i^)Z_RojRn_`^C9<;UU=aO*45R:aT+[J^-a/m2R]_a3
%d4cI"J?VDK#.$jtO]WcmeeRGRG$g3[c'`r"%J)._'HFs9X$MgiTY"][>59h$Ic]nn:?MD_<0To#e5]le%Ro%Z.)WX3+@E83s,c<7
%<hL+Yp?N.;S0T1.B&_O2LB7%c43#*3%3AE!k*'^aB6M@-.Oe-+JF2!R0J#,:5n1RCc:jP\K9Z%H5`1qcJtcH2b5UdE(8M/*a"No+
%30%_>D16aIk*I"jiOsNiTgh!b`Q2?qS!u;d4ff-*<c"99,BKb0`'2=+]b,]D:LPMbm&?kAF]uI4.:l?4ppE&eFC(<<Z"Z(tg=LKC
%2PCSb[%lu,9=HD1bTNoNc81*0L?]o0]Ek"9?7ktE&k.a0%<#3<P$uOm$_Zdh`d7nNf5-ACk=KoE0=r&9&87c"dQr,fULP9\[)(,9
%R&2IaL`dY2TR:>'UNCWUeUn`R(iT>L*:gLb5hmIXAd3K3m!]H8\XaCqI&1Y)%n+_B)-u-^a$(/Vc%NT*!'P8Od>@8A?7hWba9I88
%MP+W*^i**"pnCs(^?"VSf&Z!oX:q)5]jYH2dhK&S'7']-M>drSd/`:#@=*,GC=#,V>80\g5[K+?]c'!YrjIoKX*USFSj_&c!;j/W
%VH>KLY?,6>QroMoY;qK7eSZD2`>Xo>5WsRie3Ef[gqa$:[7sg>#`5@$0.5.i]O%06;1*SDIj0KQrJ,2c)0$Z3g6j[Z;P?0`6meon
%P/K@"HJGGj,C.4qaPKAD=Vc#@rg\T,fN]_nQ`&`meN`Am+9R+H"db[Ml'#-B&]Yn(%0mKh3f;LbYQ<)rm_o6J-(>SS+>HtARiXE!
%OU"#W,C2A,LnngA98QWY8U3[BXkD>!W#?opJ2rJi'`3%#\0PWd%0H/!HXGTkj1@#,P'Gn"[,*o9Xon@f1jYVf6I[_C-R)Zi'$f;m
%m%ue0kY_AqL+AB;`j0@nBWh.u/&9mcE817.)Ee:U<@O^?ZgT^=.eZpdPNb"]RRNMto]cg>R$17%38RbQOo8n^dug1?-Wlgs*LIFg
%nQ!bM`#[N7V*tAaWYEE'PY6i7k)X8jAlRG%X<$u@E<#7QCVHBs5A1`B8WMbBB1u_]3k6=VBl\i7mfG;tfE!:u%M\8(g]/WNBU>.L
%Z"7!%b)m+,-IJ]F,8Y!'@ZfEe9-XdW\#C-79cI'f"2g'j+V;'f0PYBLj3V?,Ok:bQ+f7DqNuh/FVN/bC-M-Km[GM?`K,O37$iX.@
%b%>F#g?@M*;^l-CUAAXN)br<D>pBRqQ4#c9g3do5g4]:2(%gMAKErbG%U+HAjShau9e0=YHXesQ<];an!2Fq*%<=%W^ifpg3nFnp
%G7"K^ButZR%6Ao@fKL2LN@Tp8ijbcj^#POcI=[pCMJ]jpd5ZLlD+]U])Bt<\$Vr%lKA*_XR5*sQLR+:`[1jZIM7kE!ToB5uO[7l6
%#Jb2`^R$gJ,M2L!K"-:DY7a,UFsgl\!Q>;sbcA%[Gb<6t"=*c-Uo5_%BpG$/[>JY+^D]+a-=&4KA!.p^ILG`Ui\0W>X3$E1I,eEU
%M`qrcJI't(3ijum?@*;PcrhllRNd!IC_mNo^k)Np]7.6'G]V!h&(_WXWKl_XB[AG3P"81V)30n@+\;kMq;<GoNZu#/['q8a&='m5
%T=@h8/"r?c!47LoG4Qo^JfnZoSH(c$d?o\PPnpf*f[\'N^mo<sQj3FOie<k:0o:f+h2I"t`#LPA-t;Y,LN!,D\o2p\r5lT+<D(?<
%)Zqc7@XX),AoZ.`C?b?2k2qfJ9ApE-b=+,kp3P[A80qH".^9:bAC(-eabH$S79+-Nk^aT%O@E'k(?.f@`=8chU3!'\e>1qnp&l1r
%?IfWYZ:iZ7c/J/R*.eo61>g9ab;$)-c+jkq^<N;rT^a5e(lJ`<k?.S[Q%?Q4S^o>[)nod+1:XX*1/`dmU+rq=7pSPW%jV+fh=?aC
%r#+&[0V;`V<:QHkam+G>$/[P5$CI\&CJ$KVL5OMY8O6AJ&CS)9'!;3P(Lt<<3i!**DDpWu,3pAFFn&2G1B&fZijS%Y8\t[$cp/j_
%[Sg7!g@,`9U^h>Y`Eis1U!s8!f@m@KRs?E,"gf_G$TGStdR[f(dg5IkM5Mk[UmdSIDM&f%2$*VM0=Hr\+;*i%*cn_H=@eY#7bQ0/
%]$/N15tGgn'pu$?<Au\U6]t"WNiL!/jf,)&7sDADAYu`4Kk444F#H2oGN#2d!kZ)mn6e1N$WQaK@`(fY$UR/iF@_3SLfUu\6-0MW
%=c9lC7?Ib1o$&.,7Q-!DEuIeFbpEjA=I74q**8q9"EG\I_ZB@n(tc+/\?,sN:fWF*q3EK7'4&*=2lCP1NFl$k'pqR.q$=h`Q61W&
%T>2FS:kf!2MC#@ODdrK6l^:0_#`s-a?:BCkXVq\44JP,;J,jt5,Re)],uAGS&9C+6he_s&K?&CK(P5Z00o`G,`MM@2eh)7NlR^.l
%(VY:c=PZqhaT""ACOEVVn!6(H4QpKeQZX@akR)st(HA:L\0u^`*`M7b(H]c$R4R[2`]K-80N$ZBC@(8NbIJ9M\Tj$(On'5t/Ekd/
%)AudM!>=?.I\a2Va5iDM]/&%#W2lkU?4mL4rFK*YF8a&'*I^'F/1P>LWe9BLP$OridX:dhBfK)U9oFaBHG!-O%>GsrZl+C49MAN>
%0l7_L[\0_@]&_45+k."Z)!=L="O`]=F9j<^0H#EfW:?bDZ7;',AaI3\\;b;[;HOYcpa<+7Tp=W]s6<cZkZDVqJud6m8nTo&,EbU(
%#eA1qScE7ON*.CY?(#:1=H+;&#:`Ku=V[ic63):20+6TA3tF)iE&E:K$"bY+AA38HAV8$4<X[BH#c7W5L6[i&-iU]55'`87S;AE+
%Mm5p+,"\%oT1I1sVN^gUT]iZ9qPZlFPDjXJR7$"X9%Nd3Y.!SR9+A9:Uk?64rGZtUAZg^5)f.+gEQ=:BJ,PT-hkPqTc6Q(;^RCB;
%N1CY=Cr0SM]GgI#Zq.QIlNiL09d'O4#892)[/YCO5Bh^.^/ua<^VZS5I0!f]\Lauj'YhTe.kN>RGW1iI@)Z5Ua\N:fBg"eEf>q!*
%>c2lcpF&;&C=6h9'iu,[&emVQbUFN0Z:W>-Ye1[;iu?S9>p_u^l9&A]LL5NebS=rAdBZJE%c^=/<CO1QL21IWY$A.nNu_F61)90"
%T@&k@,g*HJ[C$QJOOO:mP?cT_/ZKJ+)?Ti(0M0oTs"$dJR>ubM'kZ]A^n7shX]e),6j;ZI'WV]DL>M_F5o4C2^hrYlU`]`<LoFtX
%F)URO6`fVjB!OrMjd_&!aK4kUZo,D]W4m:,VrSY7Vm6-RW)a4hXeu\V*f(GI,a4J,&=8fVOZDIa##7Xf%")MS;aQ,\Y=(@9<WCF%
%@DMpX&Ml/77Zq<tkHMkp=#*+PO,a4&>/\C_JD"=dSW+,jWG_F:Ae2Q$V_@4"r]#9`(_2M%O$3!D<Q<lSd!%gDRp?\BqXIYmi+,;c
%pKI_ui7emu>&D7l#A9BKD%I0`6I_Kn=Z.Y\\_ZX7jYoEuZ@A)/)mo2ZLB&oU_1[^]DB]ZpX;P!".3??.!`LIP/O1U=h*6O%KWXkc
%J-4UV=)!BHAS[7pR79b8[ngj5UDWIj<B%Vh>LZBdqNk#M8+l_G-(6G>WLAMWD2#eA96jAM<&JmE<D`$uHsA)OTB^64R-7?%7A!Cd
%PJu2[?(/IV)W;%Xq5LCM'`0m;1,s/eA5n>,NZhgZ:/lYTjnIE:Ink!6Ul>tmbc$g_@XuR&]*MAW>PMRqKjZGp]TE)DOMHiuBu47g
%ret/R6&ujj+Q&:JJQAn4)2Ko>YN<mCB(i\Iq>)q*#W<2J=M@Y"%I<U8K0X#Ch98/'jk``r`aUCSo-]"PUA:mJ)Q%S43.gV2K;kkZ
%YI4m.4q&]qXh\=kOsJG("/e&rQ'X5P(:)7XaTL+T9%e0gWKm'AImRbT]V&R#?R89!:39*["DtoVq6/ErL+Yu`53+U.di*eAdEP9d
%l.q,'3-i4R8Qn[i8b5$+b#Ba9dZ6H$SM=`X+.:m@]damcpp>o-;KQ?qc_A1O0ci06.!5X>]pN9t?!fObIT9\%OsDru@'3(ZJ]34X
%Zs]GU7?_,Ob6g\IK@:0CVlmQTOGT,I8Lh;KWfi$t(,4,?JR,VTX6<3OS0c9@`NP2t<<e<1&-GmLD\-bF5t8@K0.%"#Ip\-]#lY#J
%?W8u/rGgD,N>B6W'kDj'5XDYX@*Ueb%FP!;M)5e;.sjJBeKh6BKEMQZ^CZc*$&ciWCq5_m7YWE0)5aM"o>oG&?Ql\S#MPmR930NQ
%,M[DTbd9#u"&)$p>E.^He(PX/D;*HNs7Rgbo!"JgHT_bt/>*hahbr+%]ensk3S^<26%"[3O858HOscj2k/t)@5K^!I2f23FemR;P
%_3)$>&6^Ja:rNd!b&>jJ!A.rI$&4`8i=%B?N(p)g5i/\%0Pj1u;7-\1QFNiN.RFCf1_ZFFG#?j;1Y.0.3^Zc@j\)CWX`hOr3+SKr
%XTo1>]k8,*0JqA*bG_af6T!#q]8Ija)G_]0dB\h'GGdhEgfQDB,nm-iKTTc=nk->5q3BVJG'A6VS&St&QYCilIBWr7Wi;Gl5G'>&
%HYA3V\+TW2qf)`V-jZfhAU6.8(^dS^8kOP%;FmQ]<[3MEd)C7Q?EBd72rgL1N'!`l'Y6T8?"d]](sKkMHB0s"=*.Cp=O%Am_S@=`
%7KL>=&tJlj\_(X0L@k`f'ma+$Z8cm'6PJ4FZG(=oq^g:u[56T#OK4h!h.3joJZ>P_I$9s]ha#d&/f[ChrR&G^a4&]GXh8njODZRu
%`a\4aTO_0"[CuHFP=i+-"=n#;0P>A7<`Z.d6>l<)N4]mgi3[>EBKq-_S:&RtELQ72@<=OBr*=r<)3)WJ_F"6L#T8C#.Y1<i^d$+m
%#s\lFK]2'$Wd:oX-ZW)^=Wul:F(`!InlrpU'qA&HO_tS\843d+]*N&FgAT]m&X(B3gmb*O0eabp97C^L--5-k"P@SDTX&f,YT:,C
%C0R#^[NZ^T3sA?>bLd>CJ==+()g"Q!]C:cjE'ehhFho4i#K20g9j!]diFj`tjb&iQLHOb8(-5Qqk_G'a'j60IjU<olhuS7`.Xt>s
%1VsXI/H^ro.KNYAM7Y^2Y,`LP,S_,'B&.G$,cF,OHO.`JHJ>VFFuoC*j!qM0_h<a1!=Z*c;%ME8rWWB]dj"-$b70_H27uE^!0^V<
%XIiT$22O>G:u`4YPZri`BXiJ+6Y`FMDbAfob4_?!@3!P+R[$VfpXZ`P8E&->VQ18hgE>8CYRMahM0[<f(dSEU#1)+KS6H&'"BHk:
%H6`A9,V7KO9Tod'60num&;LUJE#kVRSMfJ6[tba`#Wa3]bZC/ip!r:2"#JppY9gG&B-[](<X?df'"Oa3h5[DH/O%qcHJiZlI1*,n
%1kASm%WX.2bqrEiLS,E;=>l!U\^PjO;h9.^eHqTM"B2QYC26^KF]a:@ZtX!)(_#Z9(=?YjlEGS_l<u[Dh,/J7N3(O7;qNIjBY#e'
%mibk`DC(nu@\5ol<\9JjUe\kepuY%]Z!;,0#N/O4PMBR=fAse>1fP\#`#rrE+INQCfrQ@=X;l$+#ZYQ82R_T?g6dgWcL&I)T+-c6
%TYjWO7IJA(!ogMq;^;0=TLTO.h<Z*6QkX:m6]i?+ar,&OecX$gA8g2(!gh`Dm"7?'l`p!ae([-9koAEnc?&&=>E;6oB"G7H3ufLZ
%6\<6U"#%cS4Y`(=&D8N9XAnCKLhW[tUt2'7k@g/r)aU-;Jp9oX3en`f5+/o2A9gQ'RW/Jg</h%]#6f^WV-(cHL!Ek5bljuJVa]6m
%[=H1J.Ip*tcJE@d&KtpmT\:.4RNrb(JBW3.Yg1GTHO6=:>O;Rk6_Ru?(t2PJbk$EiA:1XROU:e&=J\7+E3#ur+`=KOC.;Bo#Fi*p
%/8?,?H,^>pHq*;K*qXcXOc$^gB.3S1<->Z(id8"<@@Lc\)9H2O>Y_!^gQC:s/.Gc1HUorIPmjPmNcX^.&%Vq0EJ)g)Ze1iqin#YO
%-;_B\CBUGq,ehssCI@4u@>(k9J6Ia=/0r7o#]L"diigi#\^Tol:RheDS3gTNdeQC#)bnntD\<i@>lSd>on%f-]/5SU2\sG:81];m
%<"H9L]C+4Q/s^hgjm_Tb*A8.+.-ef&`l)3@,a8h@m0_V/YW.,3'rYF<ptX6LMhTI1OK\kAc7BM,k:nJ:eig7SLkUFg$9;[U<&*N8
%,jD["q<4TlUL<K].hlEamhEI;f("<2J"R^o7YR%d!rp.&?1i`YS.`gV/aF=V_'gCqiH>[c1qPhO6+__T1h?q(OauiE4clH&=k'#/
%SKOkgs4!`tm?7..-tAO(+X^p69F:jGH4]p+/_C?NPU&^i/1:VBn5f_*T)r,Pk=c%JUW5+LDaeFgb^J99(_83W-k*pq>o%3#D3.D<
%fnc3UDPfsA0"t)MQJ7Xs56d$PY$GE9]<RH=Jlg'B+2O]RX;6*2pn,WKTcJbs1mR>G3Xlo4L'_;lCLU+PgDa0m-*&D]`N##Lj)3BK
%%ZJm[0U+,QdR>mO*3Ruqp"VY^2-aRUe1?+ddJnk:>l&6W+edVUd.%NGP?gkIE&ENI`.2%;_C/-m3WKt!@t"3jD^VBfBbnL9=Sf79
%OtX22=e(>7KFqC$Elda6T(is.*@bg+q9*A:3$hF'Ko-8+i)sKt(8hQJ3+dgm3hHF.fh@FTfMt.H`.u&^T6M!QjiYFn98H?@_%9L<
%DXoO4df1_bUa0IO#atQW=9HGY\qT<.8\=Kh-Eq&iK#T*s]P-R!.r(\jP%Mt>_:5IiN_gLhGG$n@0Hck1[GP*:M%>PjPbS@0lQ*ta
%lqNU.$J';][9g8eMq+e+nd5sghtFLG_71?se0cWKE%3b-[n1sEq.#%qDgD6<HrH\oVqh^X_&*CJaspagCb&d:kR-jS8Rg3sq*qub
%$*ciLk&O[DJ$34AeqE]kePM3aOX?lBX_Aa/UtX28Z?OfW`?=<4P)ctX@qFU9o%DFC(X=,pm8P;#o9t:M[G&]%oUo,3882*i&*@Zp
%a3!g#6W$cE!Zi_KF]H/C&Bh+mS*Z2oYk;Ba]a>PiP%pP1!t*)+8^`Va/3t'f<7ChT_G%*P$FBLc)-/!VQ"i2il^]/<_JjlOkmg:>
%W0Ufam@Y-"/r0bS#`H7b4@1O$`)a?J4WSAg]g;LJ:J%(4!O<@WQ^F(H72WRRff"JB\,>Gn6<L;C9`K)E-DQ:tjJH(W,FCB?"VOP!
%baK?qd\*Saq"c?86UG"DoKQ'hFS7t-gApcdFLpufh43eKX]&e46[Kk<]imYgPGG+hO@#iWEZ0I(+=jhW+j'=bF4XY`,d!e=*lA1*
%=62[[]el)>m"oQ#E;WiIar[ZH8YQIdKeBG]Rd/G*MC&$-:R&e=1S^Lj[D$;0l267m[,tbk-_IZK3g)+(T>QgF3DV5jiX%m7B]gs[
%%^;RSZ`2Vt^<Mi1BqFa6@3kmO\kt2iI!D)*\k_^9pt9u^Ff4ioq.Bdj<pb7tH,!X<AJF6VVETji#[3r9Ymm&@mLAf:O$=!Vkr@I5
%8`Ja:>XEOk:ePBU$LV7Na!XKb/FD6=5L[dtDKYruZ[q`D&1d'8;L%+1PT<BfcUJ'RXA#/Q5$2?Q0\6l.NL`[tV<?tPr(?R3aSs`n
%?=GZ)0W;-B-$r"1iXHl70=(:clCeWE8rcpNXM3MlpCYB`FF$qOhN<\iJcn_9?"KLh=_iCORIZfJn/j'hjua0UF+p1qdJ^"9-OE,X
%Wgr1%@!MnIK)3;aYQR9jM2Om,ZtMF"WsmSNg'CCXrkKH1<uD)L)j+18kU>8SFjAn9]kB_>EW-*"S#=ss/$gA(n&4'&DNIai=+G,Z
%6UHZ=-Uff;'(?mS3*`)7I/)A'eUXNV'jW6.lNI#OdpJ2u*:`,D!XEG%-(6]eg'r4TS+>=7^AJg@c7beBB*;?)X9>WURQ)Ejph%qo
%?(,2>6PQDUlD/)q58B%[OpU#bm1;=Ld]O[t71_mD\0rq+1)^KjM]RJamJ:7o9B=E1Kb6bYmEZ6dV$RNXF6/LrE7'oKY@$DHL-6@;
%)jb`[(0<%aiH*0\'uX^+D%ic)-;A[N/#3G"\hkZ?/O>itS7lfaAec6a$Uq$dA/0YAY`ZVj;]YOl4B1DQfc66NY&S="]"=naND5n2
%.7f@++uqnoe0LLMoIGq2)rdElNE4D>%g`lfEY@V?RnlY?IQ5oZ<-p5!%PDM<Y6D)MUs6X7<ARW\)M:][qW^ZS<0JL3m*ZMikpUuc
%Np^1622bT/HF%#d5*m%Op3MhO,om5)GNh6ff%1=.jTfLGP]iDETtOQdMhZ/rb<GoK-R;!<30<O,FA>#a<^`Yn.O$%M95[jmZPMSJ
%K%`IsnR,4XhJKU6h5($q,AQai6Z\7g<NpK,e)lXai1f'bmD('M+*,.FZB6.n/)LmH&nQJDUfoOK=?MpEbp?i*;\PSqfZnQfD<]cY
%VD"E*iX9G?'jF[ce$Z!]ftV6YehW<*k@:WVcm?iP7B-/>5=lC/-7>-pGL#m8@p]J-jf(=rou#AV-"AA2U/amDc@*7+%6Jt">cQ%'
%f5nO(jdAl<^R#F:3_Ec8UmCi1-3>!GMoO2]]Co[I6]\tGUl2ToU(=!`8!ZTcD#S[$I+,L@VnYXOB,\&53[spP%cggkg7pL.CMguo
%\s;&=[2uKQ/e+rk2)_3M<3+S#O9(,PLJ.5b_<GaK]-oFu%8lK+3$U*dr*f-u'Qg"^Hbs`!pFVl$%R*IN?B)ZYOZ;[<4R7dQPTP%_
%N>6JQF+9[ZCQZuo&">sp+-K1L]13f>?E6P/?TEo8_sE8Q8"<?=fNf3C[FLo(L@bJ]*na!9:i<m11tJa(\G*S0bo@Ep=V'I46Rcnp
%&Pj@FUh4\rVKK;b1o0E/OfLlr!lr?b"\rMuVuO!5W80n[B+CT/i.Gd1`[8jE-Y3(](Su"]k_$$aHdl%0Xn+-"]?&6m5*rt!*Wi3G
%e(X>olIrbTdeXeOf+1Bcs"M(aREGr"<6@&#7h=4jETtQ@g+OiH\$JDk^,Un?;!d'j;-fpEpM7s8f':hfOj0XA[,3L<-hK9$_md,&
%+k_1t?Y'Y&qYCraq8KG/<nr-4=[+I\Um)MUbF6t\WdW=eZ9?GFcHA0WI\*>mF6K('CFRl:drtXt,>U'<f\Wds1J6N-NU)U5RA9_d
%4DnfMrT%'al?I>#/[_(RqRE$NWjgZ@@iac1UTb0FlssgR$E`nGC%Q,5G)`/aZIO[;,+hO?VY[^>LqP7fE7MS!abSi_l^cckOfND`
%^6UVD,14A-er$HmSV+,SYs'ceX]417c!1ujj\&d?b`.#VQEPP<\mIY,\tu?;G>E*krGq%*<SYiuS&P9faWKlbB!W4]q-l'!Ltl?X
%@l,-b!,B4V/#^6D'_ij6^*VGI4Luq8l3B&rE4C@J4#oli@>7r3AN?ngM)cJ`HFL)n,>5J>=YSa"`q@`],q]_:i\jQ<?FLBkR-C(h
%ft!R`_0bskQ)X_@5Qfl`N0_=-#s(H-ORZC]OsA>bbY*aqOiU4TJr\Z9&@\O3*E'5k>?SEcda'MUqi$!YXqY*%EJ0,.jcG8jNld;7
%88Ir2#!b?>ePmh62JKB!-`J-BPk*oZ$;6U/b3N-V?0b[9Oq\HfF.^sV1BSi-Ca#f2$>I9+:6G[Ul(T7X.=(W#3'B4->ufB;k0RWh
%K?dlD2C=LJI2#$(rM2JT#fB"U%QlKYVmPk%Y("?6G!G51m?BiMLKT.bMC4Oh*W$kXIQ7(;/Te;\';E4eI@)DH4/*R`Y0HibWV7A*
%`#>#=CWF#0\0m#mc&-j:GN`7tr<Mf)eQnX<cr\qt5%8@>Cc!EpIA5>EfA'n=qsF&r(HsO<rfW]Yb8"[L8#G9;HLT\CE2frpLubqE
%o.B`O1j%%,PWq_9IRi)a+NGP7>\=4b#!LU=QLC*uI`E(,>5ci0<(=?,R3Fe<fKlHO&(8,*9jH'MXiS&s&?u\k'9FW3b'6dBDO7M;
%5n^G;5-,r_o5NWVJalLbD_)!*b.T&]hc<LZ6%"JqlIo3bl"Z1g=\i.XMH'9aj_Qi,0=EtRd_etKQA7;h'gG*??ZHe0rJj7fXsj@u
%q?fDFR61/fU-k]Zc!nD..k;YmXgk@YFh;MrNZT1uoJYl"j!['h]XGV/%uS`1]C"uhcNBY&LEQ4n=M#mH9(X6cpE)`o=8bsR1!;6q
%1t=u:Jo[uk%2AP->2'j6n,X%@V&_jn*pK/!'ZY[),/!ENlldL,2Nb:Q32O5rKK?2ZD=Kk]pP9*:Vt,G?>[D*jihG[lGO(/&7o]"8
%2QD]%E5lp:lNqII@S]^bb!HX)+l.cW/""tMn[=Xg]+H";IdS76keTW(ZsDK4M(\):ESP%cDH#oI&BhV[3A67kcMN#k^AZ<"jk=W6
%6erpI2KJ-OE`d%]C08*rB/Qk7<nB!EM>BNQKI,1BD(F)ajVt\;No[oEdb:;W)&=TTa>`-u'='3rBc&Zqf6Z:f\FOGCl9UYmeuNG%
%`Z>A"AYkTFk-$'[D2N^j\redD)p6(s6iR#;H2Lu-I:V8jDThOD_>9b>3*8CNY4XlNAPY5Yndjkc=&SF]qJ>fmg@44$,9JdUEfIM3
%MD@\?Ate'n2nU]S%)'-UIO/=7UtXMuEn9:$[DUBC1tV>0(9X#,[,J:kK+D$tlc>S/p#)S;c7Q.ePPp8*@0kS?6gNrF4DG>nC"VM4
%\#bAKJ89pnCH\2@F1kuQ%@5SQlP.#LU>O6DE0Xc3H_@H#nh#6u#OW$5%TqXrF>@:2)!`GPXVk70HOqCZ1Z;c[Mf^1'NUk%DBB:93
%L'u1C6kg_l<iu>niDrUG-h9S?#57)ochpgpd-l:*U.]a)^Y&NAJ,0%Df5J%G*Zj$U+aZehMT3-3'X,m[(N(`9Ihk;35[[@qW>kGc
%7!tJAm@]J(6k#EI7f2RrOe0a3O4&PZ&BENOCV"\:Y!fpGJ&1fqj2^D-\*p_U_"ef!NOB[F<jUTB;;+mW"&U;eZ]O*+6\GY?I'eeK
%HA?(&dclNHj5TlX7hMAoCF*O"o[^_rDO4I->*%!Pd5QDb^#8n-obmYoDVt?YE:Ot8A?_g*\$He0#hp7SUOPnc7kEdi&-f[5MBiA6
%:u$OkO0,hMm1(='f:u.h-1biU+6n$J2$3.?n6?dOs3M/A5?shcDKl-;,H;1';dG+Z/`=+=<&p2I67cF)+,o"2.TdSNrK'2'Ac"OA
%RjUYI3n[U,"%M1R'ik`!od01``H`(FaP*d]*!c)/36ikPG7H..g>s@%<j:b1RHWsI5DqL%hsB'&)Em8f#EP`p28VDi=!kZmAJodG
%(]CQj;0!f+=O,Fa?@0O-;WTFk_<VHg10/7Q')&jE:B)KcS@e)JQ*0]\]G]p$o36B2`YZM+>[k:$I&qcufQ=H(_!APeBX27mU(P:(
%neT#RfcP#l:3o##!CUGJR5R/SQ@ddWDeEc>MrW>E[Yu7#Utqk._bj_pR_mHPd<8'U#Df7h+P9`>r;nB%h-l`c+K;GT!u't/$Q#)j
%SgB,SW\.!egHS7+D?1r^?2P_oRuQ^!(Sh:(5Zq"=<!m^6^Km6l\0JWX&8K[sMdqen*MgsN;L75p2llh(_<PFg&.a?*qmL\_;H\?`
%7>bte7Q@9Z(1eP2C"_\/NhCa,"e:lU[XsD^*&^qLq]+q2#]hZ`E%<YToBI`p*qNoFWiqudZrkQ.du*]6b%i8:l1F)\'pmL(0,O1b
%3Y&4%/0pG]$VI<&222$l*bb`_AGWqR+5`K7b[OeZqSRc',_'7W.j1Pj/*[$4a'O(.LLQJ%+!5@\I<.kV^6`]hGPKg!)tk;5oBmrO
%fIhr]eLbN[fbhVWQ60poa2NM[(tl!?/[W^#kn(9d\CUC+E7+TH?GN*RCk3PhmBQo$`Gd8##C'pA[k/0R%M:fSp9]I4%a-o9Km$_P
%eM*BZ0'hQg/%[Q^>cR6Fb+gKK:=Lp=3>dMX->ArZ=J0T@Fs`'U+Vf65(KKedI(ZmjJ+RZV7KVg]+<@CY`NZd5gJPmkk9u[4-OOX8
%4?hgKnlIhVX*=PTF6=&W2$0A]^WI2F^=QWsGTnCPS`ESUfGUU$*e^^%@:>emYtdj%r`OQ[_(>ubWsRAaB(7>m]qKT_l3;&@BSg:<
%"H`ZTNR70G?(DQF<Pk4"VSV."fK)K2n8R::;saec[R;aVSA??\=;OM)BqL%.H,X!D(4U?&i@eNh;8sTtgJ,7Ypb&ZUL<V!Z&TQK&
%U:A).eaon!/aFG,rVj^2DCkb)cWqa(87u1.ZmQf*4J9\G=g[K#cQR$dVtJ?$jIC3mUfF(VBr*G.B+Il\1fW0bJ6Yp3d^5fYf=i%p
%eH[5Z)_0@6O/UDGI2`!#Q8f"hR/XO]rt;jEZ3+""Vndg\=u]^E<SE%rFp4XfEu<j%p4Nt7i]!6a6\E\":e;[(Oq/cM(,.2lC1'YP
%6%t50q(Be$HV/4EWm`aV1MOrgGON&=njO6DaSfR[Y/?Y<kNbFf4g9^@G#@t?@p$:d)#&5J4"N8WmjN_<=E48L^sts&b-]H>\Do\C
%h[t/%W*+dTf<uu**.Lao*E"\?Q8X&fqjuj`=S2a8eLL5T&Pm$0"W8qF\?>M5niPSdj6O?.H9^3a-R-[&a/M4=MVn(m=?i;W_9O('
%2O2fSk`W/;OJ/6+o1%8X*)pBJ@eQs%58bGpW&S:,0WZTLk2.`,Ch/.i'W\K'1IkeDNGSFgGre."#IAQ\k.$UaNB7@#,`)p;`\%bn
%Fg^9W`f&sP1kri.622V.;*Z1T*#)7mCNi8SEn`C>UbCs^dBTc$8\.!h#pXqFpq.h0C,LcAJ`JF$,_S:jj%qU%8YF@:*B9!/QtC.@
%]nV`GR,ek5$'Jh9OARqQS%R/n.uP]".63"jFuJq%4WF=""7u3^Gi.W1N8??s%"+Zb1L7Hr2s4do=nt(sC^MiuW)n9$L9,KDB+fg9
%_oo`qf4a=P^@QBX!P-^@+*,!\h*Uu$:Dn5(B<t::$8[CE`qC`ihrC,V<[t:*Kb2G$>46Q=c]:sgT@^!QIbK>4/5L)[]&)gk4g:KL
%q##/U#I<G4531\:mg]*T9E`".flXRnL_$ht/,H\9qkRN\h<Zq(SC92_aA\_H#3=O&.e9E*-=HVS.XYa08P9kQX@,30&8NWE+CVK-
%5UIf4EkTbBoeG@4]6.]j5:2l._d0I*Si^0<i=ea_*I&pXln6:#_*qi%-C#=Dn]9Frfucb1``e0j3n>5l0SHp=]AIh7P>\I^H<[].
%?49(a]Q5"XjGW]T+iQGh=t,I)@?@a!/'n]9?:T9jiq(nFmsl"XSb[6^-g0T@_(ks@/Uht1Ne`1HAn"G1HCS?iV"NseF*q>0Mo@Va
%8M&AlgO]\Nr%K$6<lO<"QKP[??uR.?\H<V15o_WC7]c-t6/#1NRhrjtf@\:YXd_\%OEN^8g$J\1n\2URr'_V-eOJ<U/+_q0+c:md
%S4;%N1u!\Cp!+d&Ut+A509pgnms=.m?5QknQ_DlD4:gXGK3p0]31?'WT>oHOkSKV>9`JcDIV6J;[F6du%JR\gHgce5^>8D3.@76H
%Vp3Bj*L6m*4X`:r9BdVlrr-AP3ZW]5p]b@VPOGIPE+M0FYo9arNr_Q="jo@E;ED("+PMeJEY<q73?G@Mp]f5;,dsm-g<iON:<Y%*
%gNri#;,,L5*W:X?YtdH4.>"Eu2luA481E1"?;FJWQBHWGPI/.FTP0c(#?`X!m/&<m'4u%RSFi<D)o;e"=q#5<cqI!!Xh1s]E]sm:
%(f>>DTa\nT,T=NDh1jAE]gb178nsaT+Sqs<0Q*iL%qfN0`I>9RJU6V)H*.bGkfY!kYt:BE'J-;afgH-ZYpsURM'=u"l&LJFbp@d$
%93F+!%oO'm/_D,g`dnjbg0tT,X@@8ZrW=15^EX3>+>F'MVFR9]\TsR8J1"X#B0rbNQqG"C_RK+FSJV0?AO!9rlTTT>geqpTDdRi1
%OitOg]+/HRq2]F57j.;n:EtWm!UG=cQkZ>"Oc2+[e^Cs($\@<jY`@WU5)Pg!WU6%dr'_/dHE\,uD7^g;8cJn-6pi0$_s$h6TQ@Hi
%3qY#3l4tpe=B?C<&DX.;RC9gEdi'7sWT5bo;c/5/E(]OA#^`pO.iI1eMBKbmJ7[?9@T&Er<7>[;Jo9"2c;ep@BLjqnSPjDNg;55n
%fPkQ/YGm?D\d_b(?s)r)Fo$q4b1$V'G_4G!>,S'ZDc:>^U-OUZ%VL^3IF+0(8-PknG%J_87O8rP0Wer'S$83P'Ieq=X3u^'Tgh`(
%SeWhFUa1^`@.JTi]RK6B6U.O>b>rtPh>;E)!&sM>$4Cs.neQb7-aPPTN3fV\U(I`RSGMln)X6/HX0N_lqe]\?;2dsMNA"Cmq>9P4
%.f2n2Rn*cIC=WU$W1bM`e%,%PZo-ahIFdqn1pnKl\da)\O%\.1S_]F*97oZsYR#hI(Q\i.7_QgLq8f9)23XB[QRDX9Yd$hAerX!3
%ZGW,Q%5?Ot,ocRBH'``N7$17aiK;:\5[%#E4`ke+g=H+<=f\Wg*q.O=gc@]lP"c!.MI0ig8:''$F4TuGZrpaXRgNiT&#B@[1cUm:
%KRk49Tr1JH8InjWiOdNMSThU;nj-C'6:=Ph43k$$,CV0q-#&p2iR?*),bKd,q+&;4(,(B:HXcDGMQS>(PJDn04qpb%9SP9erE7HE
%ZmoUiedCsO?XW=o4$,Jj3l5PP8_K9O:4[8"QYN3ub+JCTgBUW0r?k7W.N/&?9=q'`rG&oZV`'D:X@*L"6H"^hh29Y-)F'B+'ip>9
%bJ'r1dr59Fs7mXAi3%UfhUALnC#C@MrM\>/7\/)=>=W21(6K7sL5KkU>J;nJcf<i6*O'&f?DTBaPB!t8=&sJnl#gjUZRjZ3qQH\h
%R[`V9FCenO!&^rGa#S3Ic/5V3jM+EqqPjS&rWhcWSL*!II2^,HSI-QD[!10Wpr!("[!*GB*9ZXGJTjfJ=JpZ%He\:'Vk[O'dNEYm
%JFq;/\:?8@amH*@Xn&EV1'g*$iiG7dGLY?L<hR_89EmhelX;TfF[A5?`b-S)[jt#'d=bZ#fl#M$:FEfQ`h,*e<.r2+6fn&]L6XAA
%YU@-:];Ns'$&&fGOE;0sFmpe_PZc?r)>;@$pjAg9=nYoIZ.AWJJAG5gR!j4HmeQd053nibJtK:uI`buB[WpZ8Nh.f$B<1>]$gl')
%Ha`j$c?B+oS+P+,I69LG4(N6?q"8%*T+ki?bIK1g;M,CE>k5dJ-a\o]+BbHt;AF_>qkemhhcEem^ooUs9g;^^G>ii,V`a9##Z<8.
%\LkFf5tiPabK&N/lOP7;8X&Acl,K$(j#R8B!EIs.d7.J5^<^Tckhl'9rj2grmqI]_^n#g.("Cmkpq47imKi?o3.Ods$I%#b<o`S]
%rkO>u/FF%#fDj)Rjd82;G6E6"(YsBsaqr%'h3Q<iSi!X3pXK?rJI1%t'jZFJV"]fMSpb;#;R3FZ.Mt.;Q55iR%VGmClg*SJrHZWa
%(/l-ZME.N=;-*\Un\19p):O#e0p^^[!`p!2.^bP_\_Pa@oQV-i>,+1.L`Gr[2/lfW`K-LG.,VP+RCBg)isnTOJCC^hd&c'eaWrl!
%cPf_e#IcRl4WUEOg\TrjBD2DfYWR&hPT2X9EIHED#LYMgco6e'Vt^)VlZ5;@&LGm!gHMfG\)21N<[CNmbFISRSA!a%?_.)!ma+n6
%j^Q:!@JcT2B+)lU<01iPh]qI^^#%<^G<G:@qEJ]gQ-)kra5(rCS=9ObrE-3IeEaAe]<=G<[faFi=HdA]>5+5+hgHb-<<0ZhjW^p$
%VIs<"Z:$<hh1p&9gjud'a,S5T+;A&KCU<Ik\?FO1$HoK&#`u1#)%F6^0:/Gj^aQ/dZs!"aitahXW*\INpnJtGHS[g0hu,[;Z"^"$
%mVBH'p-@n\[h@lhnTNOD1d3bL);nUg_b@5:ZYUrOp/Dbqb9cQ`Qu)5m`:hH9QE>R?Zm<)U&Y,A5p$j_Nh7$=f`ho)TjET+]ZCe+E
%e9jF?:seMWr%u9rQ$+g\H2-uAl"l6"=^.6?I6DhbWNtj6V@>$hc>iG0iUET/f0mofHg^V(LP>bH[d2[<G4(F3T&,B3h(@a3QBZ*d
%4n<F/s*1L-k<`R#pY_pAk`9CA4o6ir*q/s938319\g_Fk@+*U:rn>\OboYn_c`Z)f(O/$Mk`"f^H?NPC1`lC_g\U!j5.SS?,Fn2r
%gL!-`eUKESpN*%FHN;u=bV7lrA*,d.n`,2:T*mX8668(lNZf2&q<)_@6fdCmU6G=rcL6fanqY9[rD7t3pq@jB^H\/,+.+EO-HCJq
%ace1FqkHmYU&B,?WSTSKm\\_,O!`nBk2jiuI,DNJ>GAksR`$;:cZbTJIIm8PC26=FD#OtDK:C-c^3agC-%>m;K1kgMoCM%j]]]5U
%3(g[Q$%M>0fC&(1^$j_3gq_\0*!/[Glabm.dJ$quS!SJ+SAQ3HhK@*3me6O\q;%%FX\K'74pX>7"Vff$5!/uuDQAs%P7N6q%hY"L
%@Ok5_(dD?PnXpD%7o/ZJpL6WgE@)\EQZ0^J_fKSN3K<NiEd1>T]T^K_:4#+$8=n:3O/]:S8X;N:4`8(YqKsC]LNfBZIK/g)9.IZ!
%na?=*\U/qsG`>Lji3V&1qfMu)m3mb`j;C+-;9p<8ZZl-0aZY!!cQ;)@1\pB]55V;)rp6EGqs5Unq0_Z.LNd+rGPh1^f)0u%qD$S!
%:0dWMLAh!VShcGsV_%<,o_2ka5FNeqrGtlN5[@))/t4e:X-H#SWWFY\BulJp+nnW[Q@ZMqrnB=;-&#a<JjR/^i'sXhL(m:0(dKK]
%Wh+g*a_eFP[!><`6j:e6\oo$kBi;YR7&<G;ctZ7i-f#66YoToH,;GIoRI.0]gC2XA.3O<!Ln.RW#"l"?LTBZ@@iF5<=j/)'-=0mb
%-T;F,<11[sL,k_d\-PU5hBq>.BalT*_LBN<Q5(WB1QC1kCEF^TV'HiXV$UM'dLF""gTeQ7!+"2nFR\1i?lII&c9["?]@dQ',qF\d
%^qu"]-lUA>o7U_@hsB'aUOLjB[>Bs$7S1E&3Gp%>35*Q`9sU,_>Y@Z']hA=56PfD^9![)mQT"KDV9$piQrO0s6%!-BP[fZd4ssKq
%&(Wj>D%qud--Gp=p;rTLB[\]VThUqr%XC#ALZ4(W68!!%b7$UV@b2Qk2rDe6Woqm#R"0+tCmg#;jJ(r*YaB6bC!mmLR&g)K6hnGb
%_j<K)pb,F(EOG?F&6jZRf^R1`6hOoadO[_1DA,6g30!cC7^eQtOdT3OXi"=A^@T7?gRXre:5-;XGr+];p:9Ie:KM.@,]i;aJ60Na
%fcD+lae>HW+bZ4C[_n$*Y('PAo7e$/P;EK3$@AKKD=ZHbC!CLd8&X[K\eQiJfamG-Zcr%WboqhJZ^W6Opt@54G?I!daR1)#qi(Q'
%!"(s+M4\e.ZO?l0gE]$%F$,+YhSul$%9B9UWIitRi`1]9asIJ'haF.aVk+V7.sI@H$d=$\ik=uGAtmO-0)dbl^u>!R8R9(=n3m)k
%FOKc\Q+uPn+290LF&teCS`SIHL7]lr]!hKe[k5\lFGR)F]:ZP+1\pk9IQ6F2Ck7Mli8l:u"%0["DMUDW/'hhPT@Q8gB%MZPFtqu_
%T'X/BPONNH?&u2d3Tm"h]%:R%1nJJ8/d]q-1Nt53?4ul5C4?<#0DJ+MN?>k@9jHk=a>=gk&0_b*84d;V%jD/$NZp;:d<7WDfurDp
%[fcrk,^Lm::hqm^B8:BR-EN]nk0MI4A\jC1(J.YGkd**H!pJ7\Qj$#fmN:`7);;/L/Xncs$KfZNlQ(t<GC:F4/gCnudHIY82LE7N
%O[M0e>4Dq+9">_R]!C(e]6%NQoFTW%7O66fO`&u+?8I)ubroAQp<p$Zo-tN1#*DqI:cu@DYhWC0L)EUHC4Wi>a6FqpkU!<C,jgr6
%RCNdebK;U^:?YQalWA+.W()(-6m`\Y'0;+@ZAO0?hLV]$Jc%pC8GB=EkNb)oqg=rino;Gu1UGEZE>DobdP]ji7<)Np097W#T<Iig
%5*#DLCA%rq:?1Y?lI1/c'=VC4QBS!4Y1kQEl*!VMB9?Mf$[6fWY1WUk[O:)nOZVK9%f7iAJZbZSLFI+r@ahA7=r[#SPic-F%nSM1
%8WfCX#<tj=%'Q91&&7AFZgp8Xb6OU7Z1:%kl+8F[.Df_Gq4L^%VgViDh_k4(iEqHR9AHTPl@[`&_Zu9qBCh4tL$eODo8rYLQsfmJ
%(9=7gS,MYF3@n2Fd$K!DY"7DnfB$FP5Al(6p5>!6_]p3eD;Vt\o[.Oui3ga^kp+=U-m>aq[nGc:PDakpG%Bf<WUBYpE_-)R4TN05
%$u]OLFEnk.rt+X[$_or!`#a@kLms)7097@8Bt6Ef)^A^.N;W+V]nGg#8En?mcedH8Ps^GZ?)efJP9$KHk!k\)ch;@DlDF<R;=u;<
%#sEMs4Hr!9/1Je;S2[n^`\Hr!Hpm:OEHE2hr-"7WSa55]ZF[Y<h"Nm_K@Le;mC#O(g!CF/-U!;=\B,Bu,^Dheo8WBBj)F@7GEX+D
%UdqikTo-T7K_KZBK2-[ge*#'Oca@Cko;J"crGh>Yc%#OURLJuEi<rGTmDp_t5D;9Bd:\I1XIYqYrf=17K0"H_PC:I0HIE0.'mAEr
%n*,L<rUH\!IXfjmQNt)CHV`ZbCW@esH@DB"oZQ9</cD81J(FTp-cK4i\5kTTMPG'8<XXs,jAFV.ri#MHrpl(!He*Mh$M%&^3n3l)
%dkB&%<V8FgrB^HJ*Ya"U/UI1XV")!MrOLe`\MjGtNrCJZWKN6^$rRcd&(/P_^uf]ps"b\2Hdi)*.-Lb?$e]m4Z$L>d$@&PKnHN5h
%keVFY@7h#PB"Be8I:M70/C@aPUMJAp1X.Vr-7Q<iOjb>jGCg=$Yq=ssb#COrA+"+-A;cjL<oBc]?V>upE0o_7.RYVC)eBt^Qt4[l
%ZD`]XYbmu/7,,%Oe[<KknutB&+1mq^?+=Sl+t7PDD_L'l$M"hB[K.WsA,osSH/G3YY9nlI04j#R@W.KJ_\-]Q7AmE>d'&7X.5Jm?
%'1Bapf['if'NL9Y'o[n."Va\/563&K+1lA;V8EC=K':oL];'#M]j>[M:#n[2Ti=\e,a=$Cl3RZ51GFLFctd#cFOPDEHKEil,6QBe
%,m]Zu5h@?!f7GhjF7X`N)S$p_?u2p`EDef!:c''eb;Q[Y@']6:d9NFGmJm-Gs61X*l0nW1gHYYSJ,aHeocO4SQi@/nItu6FgHP/b
%J,,0*pHSW:5Q&"jn&rKCci<f*IJ``aDu\F=s/5mShu<L+s#Y]*J)YroD5M(F''pnj3D:YM>]'_;Rut*(6#SMJLQaok''pL[-_f<g
%_td+9Z@LM5X8,+@@nuB[:$MUnBf;T@R?ApAR=,7=,`(Uf][E=@S:d\gKr<n*3Z)=:D8oZtN3Q*]On4O_'`!\nCE<2b'o";s?"\ue
%dDWImD&,L+JsC6^9rW[P;VHj"?s"E0dRC`-:?D^tU\q*tGgU]M3.tsQ%7G;;4+nC20`&Lej9PVJk[gn7KIM^"!`2QBkh9n=Mt\PL
%/urK\K=[49NFRmtLF)2tm,58@:-q[i)\\><dK`hSQNGlI'*/`WXP1ptDlXai%oW0_1I8FiVeIV:CGLJ`'kJ[mdWB#!K/q)]6ntPb
%FA_;F2UnIrVkuUU;1r[Y5`]$sDbM=S#!asA;0G4dS9n/81uZ*!m11I!*"Wn/YhVjYr!:S_%uoN?`Y<<soW3LX2%+_.O?m@ML?:aD
%MS*Lu)Jr'P31GQ'h2J@GFNO[X!9C;8$*BYr&>pE."K$<'N?#,oA_>H5q%_6gM:!e*_Af#g=qX,WdK1E7<!Q_1CJ/ljLSREP!iIlg
%Sf9<:h*SE.#\F3W>DDdg\i,5CNKc3P@Y+>_"R2D/:)t\H653uZBT:N3aY??e>4QiGi.A*=[QK2(s6/uYZTgD1+B@"q;f(ZO'D02i
%S%\E*-gC#188FI-=S3)Z:"[:Fk8uXei/B;!lImu*',*:Sn,`n;s.'a)l,Z]3p!BhBM>&J$_Y27JHX4$(XTV<03iEpX%-BHI;ob\'
%?(6_9Gd"!TF@U^s7t:-m`2e]-GEV=Y8-!me=5p'(U`.kt+j(98,;i@(C*m\\<Gal)]-XE_iIX<#="*+n!\LVjF7SX#b$$k=#t3Xm
%#iU<["La^B-.-+QV0+@'FLFOqQ-56R]m&'9APa'M56UA)OsOF=%'2oU;]Eb4)ull$YuFD=;8jVlri_0m6]=6YJD\rDgKLfF(Y3C$
%(L40:EP9YIh=V]dk?>+cV\a1Jc@X<T@/G-a/EWhq/;DW,e#i4UdEh\u7tn`ia=nu+.(W+5$r6JLc)b=_BOEd8D,CEh\K^nDn*PlR
%24ZP27U(hbq"PSoc0q/Y3#T%,2,Bd%5G[a4fV"lKNLQ.+B5BB2\u<FUqX-I1TVPB&drSGbV2gg![=5Sb,+r[VM^O-3=22H)pN:CK
%LV<fuLt-?H(C%gt#f/Kt"4$/HO;Rt8kMnGNpB3??&$hku!FL$aL1HtI!rH`%]:>rLMfamq$Y?pd=>d"52Mph0N7PI(A=K9#d1?<l
%9i<KB6Djc0&Y'B5UC8t8EKk.Eh!MshAf1Ga\;b[.Z$W4DAa#fi=f>fX!8IiHNa34j#hJ&i#V<D0Y^,'k49KFg.t]ZrP7!OC7Xr<$
%r-8Q-<AQ="9slRPa:->/NJ^3>dX]Lp%%I$^[T?73mK<CWie&tV7]J\apjSL8ZPlI`]V2;Y86'"H9"/AIJ<uk)VRh;6T'30%SZstA
%M\NIdC18tqfM#5q/-aW/>RXK2Q+D^;UJ3sn.Y,aJ5t2P]Rfp"0;UncT6r5T^E]IspU!"_rqY&]=Oa%On@(gY"4\`pa/#4*DS$D8_
%P6#>(%7tpbb3N@T#Nk]CBC-L=F?g]_YR3#gXHdD"(CNN+R_Cn?rp#hO9jGb.`5$qK"9]sB>RW=J;j<"=:%4iRlQF6ZJ.")R]hije
%n>=."5n_g")'eULpoe<#"d>."bR?m$,I5F$a"'2"ns:dm3#^cuZs:91US-J!=L(E'0l@55aClmC&<c:>8^E=fYe^gq9^5_CG#gRl
%)6S?b6u\gUg-er0Ag!?0@[b)[4t*8\FQr!A;0.pq\G7kl3*G_[:Q8*=[0HXc,D$X5k\>XQl/gDG#@XRUO#Q/KpBar;7&D^L#pIY6
%d&u8"X`gc&@6l:!Ql5cO$+q;M/5gf36c`CA[#@DjOO;Tu<Z1D".8l+D6:$ODi*8iNAkYLXfjX*6Q*\/0_:fg5lR'b/%CN)^>QU=D
%oK^ND0dOXYLT%?t2JR:mj$R6"eD=k1,`hp^+t!teY7>f6TFke=]lf#O2bc;;=-,]4Ws+NpJEkhHG*SpAiN$+TcOfEB$YW$*C/RD.
%5)QuW._q"lQHHliKUY7j^`D-WR7oje+85WU-S)";i3GN]RpcM65N&b&H@0fq1<gMq<BL/a*BM)5'1Un3KDXcFr"!!5FX/E)<?/bF
%F0`#k7Y)YY1B0i2B!L_0RgmKYmO_TRl/36f`GF#N@HR1:T2#N?XQ[RqH27'd7oi237H(us<<f(H^[*!m#2pG+H!?#\4;Lor'(qtY
%5/&6+1GV'III76M"kD22c\8sgP/!"5kK^R<]<dY/MbaO)^!.&!O]64bRMU0Pi%?.3JBZ^3OD!.P\9&[?arf4!@J3rJpA^W7[fjOj
%DIa,#*feXi4Blp/ms0jVG7r6(>./LZ%KNA(cF/GuG0U7,4d6$:!Nui(-2qk%J/F3C/K>9?R-i"sR2T[UGahnS9J0m8.YuS-%N1ch
%OgR!OU2Fmi2V#1#=YFss6^OS+,3o\oNe$hVVTurh[])8>1BH&LNA:?G_lNcphB7etqfQaTK3%EDXKIM!]#`h)A"r0[VL%kMm/o'H
%QVM=^)SK]'ZuP`XLXY-uH5"$L%Ad^p>LiMQWIP]XH&5/bPUsGEHQ\tmYCu?#+]/mSs'OBX"!>2=H+6o$c/,N6#t,<*f<"t2C1@Mo
%f\?<i3gS874f[6W7"4MO9=3Q$HGdUo52tq.DRT^i,&6nS><I+TnSq<=qJ1q7r\1C*Xr.3R'h$:qW]$'0,;o6@&;EDchT([8TgZT+
%.';[8mk*5(L9i7#FHNtc7mGD07!3G%V`AcH(LTK+&>HmsHsP!u%],CnVpMO%b7nq%d'@\A4!3YM%@nZep4D.]SD)Z)a6N!sXmT[V
%V_<EC:QdW:5-Cmlpqtr).ejfB(US]kGK,b]Z+cW*>na\]$rJf<QY9tg-s!\%;=%es=9m9\-I(-1OalSM5n.,i1_Y!`/M/r12'R^f
%Z%md1e:_fTBhf434"PK]$>o'ub.\J,(!>6O^,]Vn*&^oAXek1^/E#.2W6\#RF\Gp+SC_h?>!e7T'H-V!`i?+UoBK?q*;KU?X@gt<
%6_Za)H/dLU:=m@#iXaYA@%8`9\+s$<"kJ!0SrB*.@CF/a#&CYT!IX?;PK)iNB'ZZ*2oRnW]AoAJ<i)iaF'Yo$ig:'KJjTOn$/"(9
%-9501"=.e&XXGW-k\=nH)_WZeB7HRdd;$Li9Oi6IQo4:=Z_aKPM\P=%Q]1rB?`olXK>&>YojtP-OCD%)O8qNRQ=)7EPVc2EV5;Mf
%\/-XqYDAlFepR\h)L;WlPM%GOD*.!oT8+]s%DcTS&H,+_YR2C&PjBeU3u*'D0ioh\pPC-3NY"o8jQ?i+jSsYF9mpu+j`O<j"^i?C
%6aFIfW./D<g)@Yg(2R2E5lA],5[fu5+):,SPR<saM/%4Q2uH(2X5u$O?WZ3#*BVqs<6p#^<,Yic5@\#LiJ`&e[uk!j9;#']QfXs%
%\?r?+LVhMT.Qa!%;>j.D=`O@@H.Q)L<5oY%VY*:c='Jo.2P2WQ0)\_1X?jS3m66qp.WZBY6C=_Z6t"CPa;UGP7L.3\H_d<QEF[@8
%F3?&'(@LC(NCVqcG%TMa2jUR9W<C)&Zk@-&OGBq8c+k=rO@SREoTPl,Zt2!4XU#jj6!+b&$270*9o>a#Y_`C5Y_sTr+Rd<;AMEHQ
%dC+>fg5)(-]g-:2F0NuCI[KX0<"R^_LTl(=WTj%uMnS[LA.Bfk=b=s/[6ZC?nj_\o`]B1qZ7fsS/Q$W;V?R!+5E%d0%:O<-^XDem
%!WX`=9fU[>`nEA>_A_ZH:`3H9X%IhO64mV5nOU_=OlVf)Rtdc_Bm[$lRD'R&Ir1oBU-sX-r#Ch`=P:GKXm?i&&9:0P7m?^0[(2.\
%q(sl0@L5G!6d#Il6fpKD.U/Pl0pe/"(cG7UptS/3L9>+PWt+F^?'7c^ie97S%!%'B,#:St`>TUAGXbT93-Zb\PQ_"$1!si,`_%;M
%KVhP$M;jW+2F&-+hl6J#*B!)&fn>\DRj6I)L*Zj3aDJ83#HSUuS$2g9BRp9K]7n;KRnK7BACP@03Epi9;J-CS"`8jZ%Pr+9i?+]f
%_OhP@3]bToJ@'Ap$mh(S:"kO`LDG>0dNcKVAjG]q!5rJl;s<Zn*"\n][Or[DN2D4ceY4-hbSn7%L3;6I`?=@WUpWjVcs!?glMdGH
%fU(s-dU)pTX0b/'A_8##F\h2W[`eBVm:Xnlo9OO71k9LOm+[DObZP9MD;pACVikhLlJ]/]5'='.AbjXl[HAqK/S(WJb)"`/3"AkB
%K@An[hIIn_k/ct03^?)2%(9H'hb`_)rO*fFd!f<A+FmG!'LGW;hFZ4>eBS(q"1E)(?rp4G$=(2GOi$IOii3ZC`[WdV%BabK-k</>
%!*'ombGgp@2Vc\8(R5_UPI]C=d>Z6[O.Fg+\hJk/.B7ob49MZ='5*%.RUjGN:=-kAiqBpT\r=:7ntlWD^Nm.u,?8!NOVKb`oEgAZ
%`L=jVIJ@<]iXc;M][8Y'EN1d)gU:7?2$;[CV4ohRA/;kH8/_VI)bAXToabOdbV1nr6qjWeJ13cH$oY4>f>=1Mo4cnEEp8=?L@%ge
%&_T.0bY=RHA@e?]K%Arn%`Qs4au+FP2Ko3n%)RY(-0aLDlX;(o;ZTTe2#JI,KRT;H4Fl(bm%dH]o!$KbG1'IaVtGiM[o.gmdd5?%
%G.Rl&<L,]Qk%l[CKQ\ccn5[Fu<AS5E=;3J8_ML/iX6qsXP*-6Wfr8,`^!Vgp"HXo53R>&/ac#Yd*/<APY>%B$',b(o`K<QH_CoQ'
%-LGUs7'*Y[@an:CMHL0Z2``rE841c8%B+mTr;mWD[kh@+N2j(l/<h!><Q>]&r$bXE6"UI0.9kfV.VB*TF^.R%(=cZF)"$$kamB/m
%^R7EF[CQXn3*P=\V?H]BP^c'MbOF9JDJ.\-hI1AX``NF6&FkW[6n#'G25$3UbU<b!l0t0J:btWOj.2<UiPD*^A^kR)E\D#=Ccb,A
%3->RCb:&htlJ3'XI-7lX@TkW.6g->eoV1,s!Vg]aA<u@f2>i5D.%YTb)rFesGrlksT1Z`no/_MR<I'mtJ\g,JH6t^A&06`QT8^pI
%KD>$K'DCC$Nrd<WL]hc!(_Wo:,pF/:!1]bf-kT=0k\0FjmC#7GfeYYI.5IBSCg+]t'nMU).+YmF)iaKl"N3*qh%A,g[,N/SCduf/
%!<q9p5=DhuHQegZT"G\,YWGNX7=8#XfV(=!Z`m3AhCtYjC,9SC?K:o"SaIco0RgQniQ#o<D2n58BDZ,D@qITQ"`u!mbn6Tk6O:Sk
%/<G])DAH-gB2$iC,%\OsTZt*&OtkqgY,h=TDZe9_f1b%'piI@j!05A[,6,j)c3_]JE_Yd/C<9&&\`%NnnZ-aEESkNH.+CV%>4N3C
%b`',\J?UJ+aK-6l!K`FQ+gZ!>#c\UZ4ZX1.N=+bW1opUCT,$_%5lSSkT571Je4t[W5X<_SID?Md<%rme-?*R(&UH&8+T>ft7.*<.
%T+_Nm#1D!"JWX7?CaE$k;H1<EA\pjV>ltTrjq!YN@$*>rU(KrWj+ZEjn:r6!HcO;XIdXL&j`.+krWXu(dN"Rq5XIlDf>6*$-AgsN
%C=Yf]62?\$h"P/erEJ(h"#k6!@(t^@_BG7^`iIcpSn^[G_POa.`TuR-q]>Ro['pqE49JHQj>JQc]t.1&l#B7^c&0IZ`7mr'\T]h?
%9gJVkS7KF'>/AXq"be_V;4O52)`HY.2IELe`G$#m-FIGsWO[ZsDg0nu"O*a)N12aepqphlC4PURQ;_3iZ<jXYYB'"!kF6lh@kIf5
%T5bB_C,c1[Y@cZn6Y[1/hb8%*/N:9T?XDgm']W0\"OS[05f7cW1t=`aQE>hDUIbUU(M*(r1>>J5^kE#d^9kjVWW^hNLY*M>gWh$%
%>LG(TaFIAM.&D-Z9aaeHP3>Zf]o?RrBdWY?8\tC%o1[,U&67D'[<B;c[>furXuf[-TnfrO@TiIllof^AY7/,P>;8M]@HeAF]E?!0
%-k<2&(*4[<BnV.&Rg-@="eIIiNhIlN&8ehRB32tQ]Nkk3qn+WT"M`/A8mpuR.4HKb`Ueq8L(S7lFVA>sD]EFqg"i;()a:qh49>dq
%Wff\ZG"3t(VT9mUE(u4ZcPZ_9DVmK&@+\Qc7O,I#2Ch';K6r0YH#j`q[idJ3KI^:qh2%Fn0/b4Grcbd!%.dE(XcCRKpe\6%h8*]V
%s/96/XjPF1o_BE=:LPSh/eMG7GMA;?3$ef.9+Z4^=V;%8jJ)#:.nK8'qJ&nWh[(NFQO:P/C",jeFqKj%'U9ueqf>0C4GPfki'YN\
%@;o(d;'5\CJp'EE_7dBcci?6@V'S/JhqP_P/c)/=B62^N"&W0m6#;:Yh4GW,)&(R4(ttagj;^R!7fjFKZ#*O-_45iCHot;o`;r0?
%7<-QY:pMEb5+g).:9urOVl_U^&"81T&ip$fWLt=_XZEKmD2=X=7bF@!K3Et*TjBGcGjP+:_X21%*p6T3W&9nKWW]6R7*-Q=$s;_a
%UVSmbJs>dnW]mp[QQ5035Y1PF/$]8+m;A%O73r1]aE!Z[OYViQR]icu['peBPfi-GC/`Lr(Sr718Quai]$-c,hZrqAmj:$:laP((
%@20fLiFWioIsMV5AKejEV#Kc#:i<I[MH:bgdB%;Ad]g.p._u"l]/20^ML5mWbOd+)j!)ID*i+0j3')?`2CZ<JVl9I$),u.7U=IWg
%,W+,Z=fJmlllfPo(YC(3Ol0%jEX#``\;3eKFlO)Xn>c"k=+lc:j4(Aa:HD&DFK)B''Ga7#Lk5MA6F6--3P?Z573?R^A\YZ);*%so
%9@qo,WtM5XJ3L2EMCX$P")TT+ST[h/01oS](:2o'=+QJV26\?j6X-:d%GmF"05\BqRjIT2V%;0*Y18MK*aLg4,oXE&6Yj3?PGk:c
%ba)OLF1npb7)P:<ckGmQ#L-T+[<Y!3lFLJ-c3-ITrf/St;QX5`q8."lroGB1k%B?))0p.$F[(qXO:-G`.+q<fiHLjDRrm9MVIe^;
%%+hf@ApQ'=%Em)Lc@V_j3bZRL_XbrfT>oUA[F`#t$dI,u+i/:,V!B;II^tA%eoVMs"*/K,7NcRIg@b*ULJ`<,&c."umRm!?l0r<K
%%Q%kr)A2,17UOIqdmS^@_?rjH@A[^Pc``h!"*al0Tb7s'L39(!TKj;B7'eA,&.it\rbuiZ5XJ=7Idoi]+:of8cTjfqNS4F56/+e"
%;1QgEeKbY870p_JP)bPSP_:A+4/<!\Qo+#^%%pEr_,<',A1\E/'fe'+;5/KC!@.YH@UU`UVHDO[8;Y-uJiVX&hCc_%gSEM+Yn39m
%)P%.9Qt+Ju.30N\.#/QXYqU#33?3d09);Os;)U1fn.7#%SC&(mWI-W]h'iP6l_G8N.$F-,nN\j05dYe:<kcRT&,Mu2,Va!V2LUpJ
%3AKQ`Jr(gki"^fVZA^M5+PO8N5:iH<SHh!M!eoHk3Y."entq=ArJVAoN42(a5;X/NDO,-KDBq5FiaPUd,@FKA0,^eJ&11p2]tGed
%r'1ENfTAW_MARB%?]LIR+FC,hSkTM%8<G,/4^\d]A.l5cF>DfW@9F[?E:*Ml>,mXQ<(54kfaGX*?j:3ZiK.V6r-g4K<'_c1.j\!'
%Il'sPW[;eD!A2e=ZUl=KcTuXnYEu.QFHSI["sJYfM!aSf5V^e<Br]I+7rgF7$)F%U'LX?ZB`&o:o:p:[F`sY"1o(j6&--[5+rBOX
%b/id9.I(rNQ0EM09G226e^R)C,2+tb<5*&^\`rm&,&?T8nb49)c0b,j)Z-/girltN)\brQmud6"g[a,X:,(f4(P+r*#d!u.pbDIN
%@[l&P+lR5i$EoGh1aHFS<+1(tOokq$)/%sfg)&4?(TAMcQ*I=,^]n+Y(W#GcFj>Ffr0G(7@uO`%IC8EohJAVuq@kK`c_KPZ?8%A7
%W)Z:l!.!j_;`0J?QZ!Zd:#:&["ri6b'Y6;LW2/2OLn8dBg6LZ]OFROaZ&qSF]+rd:`PI>G!0>SU-,.4TmT-HNb@<92"Dq]H5j/&1
%N0bN$G]K3#*CmLAfiIJ,"GFC7gO4p(@/Lg5V[$,R3-,]D(s\A&j_-H&HF5:ed?3hZ.ffdAe.`X=JslY-J@]O]lj8t06u=jr"o0)h
%!Q;IWLEci=_St;:_5>g`4bHn7Z=*)*_-iBP`=\*W.0NcA+qSUA"QOGM[f;_qb$hN]&DJkfVQaEaB+^:],@.I+Atd@LcWHA',5[XO
%iT7oI$'!2$bX'g,m%WgTIZq%\O[*<:FGs<JAZB<S#Q,?g`rnhg]JQC]:b1:V_T%O40VjK`N1tm6@Ng[4EThtAi*PHt,U`FBhh$7`
%+c/MWER]Z,^Vd%nj\P@^Q2uM%_dFb;2I`8D*YBGL1/\Np_]g3WR8AG;W`puFi1c$C;'\Xce%Xq!dGs2ni-"&_AD;:CU"=9$-XM]T
%lCb[DecdPPW#mc^b_R\9k*NeE%fCO4>MCiKchf`@)S'UMqG$<dWTck9$u#s4o^sJ(PVtc#FGFMni=<Wkg>eO5#[!5D"/8q\_g@1K
%P$Gj@`6`ko6f>suE$Da?7;7;TR.M1,OJajsij0tF"J!r]KoH`XChb0$@&78ir<d;5UDSfuT%hZ/O9&)66T3=WiaA=)gZG0fN$:tB
%Y`RNHgk.$7S=hilcUg"s\d8].!J*Ra)dF>q'VrVgQCC-GV:egb"+Pil,p,VBjeL@Z@,'g-N.2Ed%:HjDZC<p+9oJ?`1cD!ZY/T?+
%V6m?TC\G]KRh.Eb<#eut[R*+bQaA#hCrOQI\fJdF)XUns>6plT*f&cZWBU4n2=a3mM16`3@Q0(A!Q!oeJ$HHUpfGkXbg-Cl_L@L"
%L.r/IRp`2!-EmuIbekaW<_4tqQu4%(/jsafGD?oXG/M=\JHTUD.`$uo`G*PUC"bdOJUoTYbD7<G>+dJ#5FDi\6'&-dYD.YB@s`oP
%"PWrns$@/3C?^IraRku7%'57a!`dp\];]tS8,K['9M*u6#g.Y-r:@*q%*cd>R'rOY0-ZWV/*5l;@`)Rk`CqKrrG%?Rc&72<hm8GP
%8VD&*C1_27Q*=D(>2da6$3])I`]8X8GrC"nM6N=k^`K[jQX-3%lP[<J]ub`*hY<R/B_;c\,D1,Pe!o]ubI=&QC]oD_^'<&+;^HM\
%R&$BK$tYXZ("lI@#4.V;[%B:jYKbS-Ro$*,(2=$GGM!RF%q_?6K.WK)$M*.JBFq9W/qJ/"PpO5QOP'W.=Jg(>2L>1U*!\Ps>q:(\
%PDZZml=!7,+5<edl7U,9%&V=7F99Ws&NQHL1up^%ZG<i9Aiu%$2d8%g"XAkZ_R(U&bWN^`3ka4DcfMm6qW$[Wi'.Yh_(5ua3f&IM
%Sedq9q9jO0[+WBVfS@=7,f]Y,gX67)g=/H7nuK&N6#\X!c3,q2o1>CLKLJG$9:%sp1pP,AR\QjT^pk)cc58SS$i8O,3)T$)-*44@
%q3:72-eUWSb"*.\-5;c?JNp$]d&<7Q+2KcOFA\/YlKcC.Bd;6S=:ZQd[s2M;U?NEfS&K2\Wr\%[1<6698fHC5AMs\PAaKHn*CHo`
%c0"m@@`]C+ZQga3+B2#,C%3,&J@a/O*+MNO.b9$PZRI+/VepG,Xog^-l,4dl)en%D%b`03Pn?,$P:eC`J8(U-J:-jfA$-o,)*PU1
%LtarD?H5EGcQ8=M_.%QND31:0HMV&/qL7.PkiWu$![h=F,EH+Zi<g*tYaOY=!4K#sAj8sYeVdrHk7@X;?ubR)&hVm'Qau<8P:Rmp
%h)YcS\O[S$m+n%o4[Mb_ppudiMn+%"[[YBoa&$WKqZTj]ZJUC!#PQ<;jp6XU8,^eddr8:-d!_D`n"=3@DLMI8!"VR%lKrM(5eYfr
%cHW6.S$rHKBTg(j?C,D@J5$'IZg<+0mr&81".$!H@EWZY%9sMbN^B+lc$b\m0G63FbUAF8%`O[P_M<bcIn73?SPekbbCYhTFZ$_s
%c'B)YP_Si>YUF'nHS4X\7JD*ATrCc0DP.2S3@8@"LOn7uRZ/lbL_NN]4Wl.g`RDDtbKEGdS*#I!$2>CS>*\)`@a5%o88@I=*iG'-
%S7K7deBq&[m!l0mJS::rFeB1(+cr/i<^BbTLTVEE8gP54'.@GWau])[TWu&$WNW$GN_rJK23a\&MK3BN)/C"X%S'^0'+ttGm$*FU
%IEMh>3(+NqV5UA8$5(3_26NG"2r]*5CP7LN9Q450gTc<e]S)S.!^O'?a=MKuU3NN&&QM<J;;Hi=E<MW.Ut*+d1aFf,nV+iekVee.
%mtp@k3JeVJRTR=\\7gqD+]=>d\`g+YO0%Y?U3e#AEO_8'CoDt?Q`.O`'=,AI[!37R`H6s(W<2Fk<f$l-jui4ch;jsiTa]"<#l5^t
%MeQG#+"Tm=</t,b1"^9JL>!D>WBR++<9"nGNt?V;R4+j>dR=eL,cgBGYR6O*V_,U*UA`SO_rF+'*bj9CZ38,:bmq0j(01[X6r'=r
%Z@35[(iLe?J:!K83kG0hhXC?Tkgn'#H@IaC2E#U&f$;`3fA.dmV;e17hVQaP/rqg^o"U]`;.S+J'"eu[&*+6[)]mekfbBK-H<^lt
%2apUn+Ei9$H'"(88HF_0N^t)&a*J?d+J^;Of00J16=^9>1ek1<"&6+I1l;9naDV1Hh^BgD]h<-`75oN.-5N0tSQJ9>=@pHCYr4UO
%$:_B]M5CA/B!j9Mmpu,@6\`^3R*!ep48Hh]Q)fTdJJ,t"XD83CFWrit;*P6sZ,;^?iFkTD):*i3\%3(b-`FAZ\c"/)i3,gT4MEQe
%/N.)Vl`hmN%72*=,:/qT2GuQ%nt_Ilm:b1JV-St.et`:E/]4r6YReY<`jqg=@JZ4`3"M0Sno>/>7**nV,f9XTH@%BK1hOu=d%8@3
%A1RktmFr03T0KApIb*Si(lk!9Y%bk(;AYb>)F-u*\+D^ipWXK,XAqt^MCf-"6hZNS_4:D=J?6#s)k.<aZ1VZ!3_"t?c'$C?8$&/S
%R8^K?X<gI^AK,$!9c;al\1FK)B6)6c[Vr7U/B(^XP8;A!kc#ER@N!7N&/I\3d*Rm,0"i=)l\FHTgDDt:4&VcpXlWtD?gue1/;@]i
%GhLaipfrc<0]pB_^^pi^3e3lZO:42N/n1DAQI'>*j&\C0"ct$Q.>2N'b5j<WJ;mU0Jc!N:%7s340r^7@<;3`c=Z4_9mt!/$F)7qj
%`-[/BQ:]L54G1*n[!Md:S^Tul/X_\tlr<Gpm5EkV=hK9iP7U(XR*hIr/U;DAMr1qe7igQDdnZM9U;:e:SpSNaU7t^I8Kq(`f0&ng
%)4!4(WVBW?1/0:%'^&Ra/h:sRBSl**Y\H>Lh4+6fY`MHf#V/Z<%&ASuS'_W-o,OQT)'7lWB>]\='"p:05;@?-U'ut:O`:SX5>[0P
%M6t&57"4XC]UDapeM>0U8CA.qCHhMD>6>0kWk)P16Pn/^D>dGI7g;bX"io8TN9b*ZD,P17lHi"\#!3&lY-Ei!HT<YlP!U)$/UI.f
%?tS(6(M)sb:M9mgUT"UIGa[72%>F_M=-u7e+qq@,/gdtga8u?UAYc"UjXb1lP%>XT7LI6b]LUk/\_<t`//73&f[_@$MaYPV'Ng_b
%J-Bsc+085gDP!4pb:F9A!ZWq-*/t5Hp_'^XQY7p*S>[1I*13e)L`83HFp!qaH4Ld)eh1X\[*er#f=XF+,64$IHe=_!.j>j,kO>U?
%9sji:`-rmAO[;Cd`\KCQ-)m#$/@7?D28uS2IIiDr/rgKHXHlR_VL%/'(IbbBU`[d9,::V@U%)^PZ8#XPVL@1*2b$p%mB,uSpg!cB
%mUC4k_/GK3HMR=GZJ5"&O:2kN'GN2*hf,&V?C$:GrELKCb\U6Cm]=SXSn@kd28*m)R#T5gX3=)gX+7r$g"n_4GsV[3o<KbOA'GUR
%b:(f6*:98tCl%YunN?E)FIMHFY+Tr)'r9pN4.>U/eAaR4"2E4Q!u%#,Ws>0lJtU0PhEi-t,6JmPK@Xts(8$qm'FPmG?ZbtH^>JZ`
%]kZQA"3<AkX,q;A6@FS*=T^m]7AKf/Ie95E+qk0_,*Xc:`t.L^hA&O4%O*rp;d-NVo-K%ROPYoZCFIB,ZEHW+JWlXg)&q76Sh_nL
%1h)\R<MubT;;Dk-ri*.CY)$9O0kYFb8!F4PQS#>qA(5[,a\u07A-/FF)J@hipQH+B/\fO_QrmI[,A>??;+JFd#Qa^@jEYJ3!((Du
%`YU_`O:"K!76"Ei5`OVRdu)%`KY^o76l&G&&7>ig,*2f(H18$nCDuF=7RO6-C*=cZrit6sb>Y8g>>TaSJ8lrr&;R<eJXQVNECI.3
%9V!ibcseEkB+/'8e-r%`JJ6NYW>6c^dh.XGCJpAO;.2[98r&PXe4:CB.,/@0.G<WFYfNjY,&g*F%<H[p9sQ]159?IlJfmUZ65uW,
%]hhnh)Z[h4o\c7FpJO]IV'Hr>ol)?^<g2Ym19-?nB(J`QEZPSeSEKQDI9_3OONp/hPrF,WN_NoWUUbWUqR`Sm,dI[kWR@gp&=R&O
%#G\M+E11QQ15&;@B/_7i!fpqU2GMgt[btaj3fb-Ne&mVhC*RqiAD&)PfgN)LcELK#7r,P<4<iW!Cp8qpQE'7_`I^%A#cBh,e#ri*
%HX>JFU#gf0a3<hG(?rFhB$JT@8<FJo+=]]a2V4f0AQ'Dn"Yb6iK7tV!_(<+9-@V)EOd$iu?_k0`8(f_/Z%OVgI<6r3oGY0/KAc&8
%X8JLtIjc?&*8])KagPM6k!#rS54n&0GT#Mie%G`]_gpu)PiPa(LCek><;VZr?K6(Lh0`bA`\FKETa2Um1oH)OekCnJ6,.\UFXb8k
%ZaR[DAbnW>5*b6d>,2goIg)*)Q&RV!2^^7MD':)iDuI+t?@I#'U#=.2Z\$UPTcbp%6lP<)oNUK;ra]"BXa\FdBN)BV`$rr@A2>"s
%W?^W-XK0dak2M-I8oc32[</QCVe7@bd*UH2bEn:egqglGOj+gF!$NY4)^8L,dpBM$Qq1s$*J9JTrEU/Pr2M6"X-rlh$X/2EHg$!@
%CjLS\k>*+^A[DE<nTlLXa]@b?*^#AqdE.F0U&'WmB+2aFEAYSf%6!AB6X1<R>R[C=XfuZJ5BPb;/eo-ln"Nj)'5Onu.Vij`gn*@:
%b5q[8Pmrl)RuJAA\J<Bk3BO8*a_WK6Z`)1!DWqp*6Ai\Fr3Pi?8@uq]RtW`YED`2j'XOr:A$0T#"88]8M0Zgm$Y8l6Fq<9S6AQCr
%pu#!0WZR6F(7-53!KD7!;A;!"\X*o4r')IORZCU9@ONNNL;6VBe*jCfJC%5#eJfRh!It,]Gl/`L\ic/mSJsCEs'`8G?LUT\M;<(e
%Eq-)]'j@in\@b-$OuF(nPGi&:S?Bd&\[+RhXm=Ul=f#c<cpIH6B?DH%U<$#?1]!TomTdtQ+UCTF"W=F:q&bd^/7gP\*^LeqZlKRD
%?qMr;Usuh\%O'<^`da$)mh]$W^;=A9(^o5h)A,^Ml.F_^?O7nV6^0I\At)9]F%4Hd>sh8/MY70>BWH.@A[jo_$3'6QZA?gaAL.\2
%$c/iAWZ%A`'N'dfBiq:Rh(1fWM'Gt2#K[n%8YYAheA[Aj1P?+n"aVSSVu=cBHuoPT680!``l!J<V(%i`Ss]."!(Y`2#e$tL2%M(+
%5P7sW7Y])#e0ON7H8O;I0U]MW\0a7e\<l!O??[;9PqAE#Q=0ln*gcVs'SW*c=S"nTZoR"V`>M^XdqEmggs2j#B?1tkiY3s-=#>]7
%`Ker51/&iKgG8d.h0hqSAkA0AIUN.BDL*Pk_;5%&PX6T+,Y/<j:b0qhMNK$f7s'Y$qY.SaiV.\2A48r:9[g&"ZMa..rVFFem+==.
%c^tAHf-eiAi9iuG3Lo[b;"gB\,s*q%h(M*\6(/]9U'uX>lsiFhQ^m:gaY?a,>nO3cCl2tT;YLNU)MC*Am77'Jl;NTr,L^)aZtX]n
%EBDUkUALMV:2WT3,lj)eE6R8%;#bBJJ$T.<P>]`9A5,m[5KIP1dXiYlCR"4E:leY9,VV/V=eO/gG_;e8%FH_Ka\$pmKkX1h+!;T.
%-qkjE")oVs5e,C<[^F$]n3sD[dLIHP(N:3geHh@S1.7K>8%0CYg6J`?q+WGm;<+i4<mso_@<R8c3iqK'O-\F<amIf@n\mZm_]f^7
%(@n/"'Vh\X!ecuq9OKu+W[qXKH35M=I@)-D$9m.aC/gHR3A6(orO)onF"m8JrP!AgE486[AeJMdOaH-]L'eJ*5VZ-WA(tc`Y?`hZ
%ri$jG4-f$/5unYoH&5]d#-l[DBPQ2dn>k)ohsRufNs;gXR7?S0[5oBB9@!bg+eon\q'Df7M.XT3R638oer#\EXqeo<^30ZU#>D*S
%o5m[m&RTX^>RaZ`JQEc7AO3;M*ZR!.?;3'-C/`D8qJS:[Er^i&IZs'*T.D"=\ilG`Y>/0oG)(#9bLpfr``#TRJ-ms;$XT)hl<m$u
%$/4#[TUq_KK0tf,)&LQ:()*U=>q]hFT;:&eP0*\o/@=j]-4+:gH`8b2H))ba"FF=5*D'+sacQZu:+,(NcF]T'/Lgg0E;7RdZ'N5[
%7U!+8c%PS*J>&gWl7-!5fd0OIkUL\P.4)m3!+aQG$WM_>U&]<>H4eXAOo2L0L*&2$HE$$IUumB=e8/-Oa_;P_F99s;fpCj0c:`e0
%B[ejKBRm<`T+YWj&T:/?7<VtVLN<A0!'2<T?knQXOA\BO;,CgIU^l6eRVJpfH[c[(!c7k#dRaY3U<"Sp?9i?3V^KQc2bsekX8jmD
%LO"\h[MD1+!D0c)7ZQuo7\i\f4130*=Q+0`/BS$.r/eS2Ln*d8huR\dbtU"iPr#jK%MbQX?qRNCU8b`VJ'E!O;p7MT)Z,;3=3(`a
%'I'0biW,?T5IZH7Nn-7=*c?V,)4=!<Yu`^P6W6&3]Wnm5*tg?.b`s9>UdY=0BbmaX;>5p+JHE,2E,AbCjka,&St!9cOGp-67_okF
%O-Z0B?$-q*-P0\0=cb@ML8[i`Gn0>=f^9ggKTf%cg.9(<(XanQe8'ju2(dBOjsl>XQ^oL5WCu*L\k"_7m)9dDTp'7Fb9%qN7Km10
%,]NjnX-&XlX_/GK`0dE*rN"d.^o-IKee,aI6Yb<3EM_B;XTebTK$&@LDM+d2R=oH-CX)hq;`SH`ZF]4%5:b-[FmfL/jt<rnA$,8^
%Ya3hJmZuoU/G[=A*:4Q+&=j4t,KgV`P=6qt^DZ<Dr@3'bn;!5mPHZ:slt0R^7H-e?ln(VC:L/o9]bkr]QcN$hlCFa`DfK+Km[d&n
%!?pN65W[sLXAIuP@-k9-WR\"e\uuQjKMr5<'dg#.!ODX(N0PPW(:pan(Mi;F:$]bd0'%#_oZM)A:d\cN/O+1)(!JFd'<Y%<F,j$l
%3q8-oM;Edh+CAk9IN]\W2k'j<Y2#H1cLQ20i34Ft9Q)s5EP)HHqjJsD*q"Bm_sf!<eDmk1mBpMHr7`inj)8>U/AKl<\[P,OX)QJA
%gM:%jL<$%Ac:)e</t1hP0:MJoCF6e#;>@@nP!IPNV!n^>Sg>]LV/eoCnDp7>W9_n/dCJ%cP14J<o4k>WEm;]QCa";TQuYVT]UP.E
%jljt'8?WedHfjgj&A@q^+]@W5k]jb[_L_4.r5H:d7oYqP$D`@<a0]G$VLuWFekfBITNYoQ9-pFq:C_.V9cOB/'Y:NH\tksoK)0n0
%gHrI\j?)^U@/*\47.Fd8kC<oD"%:R&F@>]/N&2G2U"0frj;/uKJZC0_(1pcRH-j-#&2M(cVl:E_3j-h<)F]s'l*q(=*<Zl1Dc`bm
%p__@5Wk%Un+Ad'&kdhHAQRA\A?6q)67dpD9eH?A!_Z3n)e`Uh]pr8$B[BKta=d[2[%ML+R&OCr%PsmYiYGiNO[@N48A00AP9h@YQ
%#9A%G5cLXf)%m#foAn@FXGM`(IaZooo6\u$Sf/kJ[>O!HaL),'+BglnBg,cmF>JT!i!LK1Q[UsF$pePTnYmAga0>WFD?=]+23.:g
%R)nZ;*]#rBqa2=j?rUC[3!8qD<sYULh&C5S,>)#CX%qQQ)0i6]dp1uB@CN%)$XhjSOT_H7ViY#Kaes0&b?%gOb@4ig,2JpJ1;+N:
%XLmQ8'N[b#ONP5*W!:tZfMHJ%ID2btSCR]pJp2^.bAhO)V_rimJfOKu"#:o+W:9^55pD3<QW<dkL<g6ej+tB%^dWp5<Ie6dQQqu1
%TL_6LQIN!*1EeK;pL]&s*.bfW[NAig]6O69?`r$f&uT-6aptpDnSsU-%Ll?Q2oi:\'8$tpkVmtkMp]fN?ue^h?tCkZ9^g(:;cPJp
%A\t<fHYG_$DUY$a(:GnX!$9S7Z?Cg\Ba%t(SF'gA+>+uB2U6)da#g?j=F9V:/rVgGR%dM;r;,,4q9Y$iI8RJRd@Y8\D1?inWlZWo
%isVdL[_H.?FeVG?Tj_IJ'atQ&ObS!8O.=":m+)<ukM&YQ:'<1];;JcC\a4f#MsAU4N1OMtaUPg>V:j#A[D([leTX^7h33[WfW?UK
%Ed^F\7Ag\:'FPKB`br/12tu-nLV'3+d`oE^h0%Andr*t>H`Y,+4!=t>q);HC.#$liohTdt$/ihRV=9VKU:Q^/DJBb@C-UIA\jKFq
%Z:s@0C3>ud`cJ]AGJ(9YNa/o$%=[e^e%eqt]p=lIj]piKg?aN3`'3ZDp^NC!-kE30rd&kDMjq!7IHPFZIk##*dGh?^;X$>9/+j'a
%9W]T5`oYX_!Oa+j:*0@u6m17Th>^DVq#3$Z$a4JuAaqie?+;,>Q^^K([Ia3=>OG_j`<10R7>Y:g]0:O8eJ2dG+JebO<"ZmW]s_cl
%U.(=J>C5'#`>J?Hl*K(9[IDO9^3Rf-aff`5/`575?60`tM;GnfBtA*KQNtO[]D;Oh0ZWQ2L#`_N&N^!#%tOnWU(:W9W7iq.hUN_?
%$o#\],onk",e?AJU(I/&CM*hkIjLU'n]qf+SNp*fd263;(dK_kJRY,XaM0*G9qnElVo*NB_l/p,+Q*1ol,-js0)V;6n_qL#V,@\$
%^_GTdjqT"t=0CB5TZSHTjUJd6'VAhF!aEdb&`K4\8We>ooJeLsBm;'ertQSG'RiKC#>1<RMOli@kpgHi]GAolinG1rGf+'Y3J%$(
%OU>3WU1T7[:NV'k"lgt"Uo7CO`t$ME-Ec!M/FXg/AZ-sFdc4afqecdE[O9=Je_biI\%#K>p_]Dn0W-8KE5Z`[,),BmD<:I#JMn'^
%Og$h/*J+7uB24Oe2spg>HI1q/,cK/H>eG$&6+`[idh"qEfRdc0.M<e/aC<iL1GOnRnQmBa40fZUSgd1DJP2"R*oF(HoA3JDFg)#`
%VT&!8,'hVb+.W1iSlp!M2?q@jR#&_&;-&bWV!8FQ(%_Lc5FB0L'FOF?[k%`)F>'C^CijP=@"*.R=/Yn!hk$lW9k4XIN%<b(o)]q_
%(e#9?m:Su\mLP:(Cul';Fd0KDG&V$3JK$cR5DBe[bqc]$k2i+OW!3QV=fAfk+g!>f)`Rn6j1tsop!<fMWG65ro,q:BTt5A?=5V<)
%^BLdD+%m7*A)9*an,.Y4@&R&iG\+<mlF@p#djNE=clr)Nc?X<P[.d==<K0buc,3t%`]D'%7oDr%):l'[J]4;26/g>QkCJIm=4Uh0
%TLp`d>"TeeoOe8,Yj4)#XfjA>k!_:9Kis#gZ#k70eNc;%U#'7EXP2<<U-jm\MQ!RejR*?h3?NgA"]MkJs03"DNICK[;!mUO\UOA2
%p`J=ePQf,)*=d^f:W2.H?H&kF@ndG1;)<7B,.9+&hkN*#K/U(e!@8!6KQe(u2R$[>&5_*uoO@?NW^Aej=f%/HaG?&=O$q&?#An4a
%1lp<q;^^n\7iRRN5r2Y\0L6X3iD82(TcFK.S+#.4P>`Tj\)urG*1<#qq)Hi(3[hCF=+Cr_&m^g6'nbuTd"2Jl(SV^,\iacJ>c\CU
%=:A/0m1u2>\67*0a@h?j0^OCN203q?#aHui,&lOH>=a9.pJSN'E*SEAF+#tM&*gZ-c9P(4QU8Dlk`,b$_!@:`o5&f#db#(9c9;fs
%#"&/DWe7.1<6P]M:W3U@+smLmXj's#7)6oU5E\C@X/VBBZCa1>!#nC_NqhR-Ak5DrZM.iI;Dpie:@K1bSA&D:@N;75X_0hM^-5*H
%QD;d&-sm!j&k+FSi.$>S0-DmbeAr'Fbnnb\"IDcj7n[Q:#HnplQMA?tN"%k;V!"W1a#6B<)5Bg,9ig1_GYeuI#B6rcS`]`YQ/uAX
%1kEtAV-u9ABa2[=Ii.QH!>iFA<^7S#XtgAk4.:Fg>K4*TR&/SU3,%Sj;VDHbBlSE9>83QW#7peYhQBZSE:E0/mNL8\.[iEtE:s1I
%_IEY]<KXnb&@7)0I)S')R'V[:(=$Eg\>)Gm?)?CF9bKr#G"s%`i'm9YI\M.^K3\?1EaAgF"J8a>FgF-Sgr_hHZq,WMoX":caR>IH
%*J/!.GDk";AKP%F*8AX'#>u!Wqmcfj6C;6L*gkJ&ZKCO5j7J1Q/Uf[VOFL6_dN!!QJI<YcmJ>G7F?Q`>q/.TUFD^7Z/3(]mF5/H\
%5q/WW"SIP<_c+$qQ/Kb(s-FhkN2,)ZhNFdPUF.eP*,"Q:Q)?EHG79>BaG/`V7:48t/(f?1F_qYFqlhY4.oQ@@eh!^6kge_B@TOk`
%2j;JH"-(l.Uunb'$ACiU4`fAY999Csi%6Tp`X>n9Ba)aKPqa![5+oYl-m9,\ZDjHsPaMeZ7KSDj/#kZkB(>GZ.b*CTb2F5>#Er2V
%S<WjGU9?GsoT3IpJu704ME+Fq85_a=hTmi<;Y)=$Q!]uqD-pN1n7,shYS(CPj!\&:/*K@Nb;'/,Mod[TlR6O%QoN6]$X.-PPN1t2
%;lGGfdM/'\'>6-2b*T&mLH("?g#.$VT#q?pCpo@%4b[oVU)Vrd-l<,@oY>6#9Y/]+q#[`BMR]:@J/=TC6`7k/Q5HKlUG2U4'6J"U
%Y1Va!?pqG-S,kus0C$2;H1gN'CJ;Bu`3dCR\CUW2d<=(WMZXB%GT]t)s#h7c572?4cLu1DNpi!><!e@7?<pFCO4adTNTL+@/SjoF
%#qj\Ds0f?d.t_qO_e>Kg@'rc#]II[llG^n6@fr9[C0>E8*<;HE)CUYbp7\DYmI.bRSGDsVhnIhG%IO6%2$"H7MqQ5d)p(t"pUfPI
%3WKV[=;g$a:9N2NgGqUKYmf(BmqXD'H2e+Rr]!TcI;bLO<e:]`_<*:gPR&NsRU[8V.PC&9iV10>RqQ=P_5>QG//*Y$(9_-@k1G7t
%&q0\19o%KWL-;SD7;tX)OYC-a75aI6)5EQUqcMn<'5DQBWIfo*9<Lu0Poi]D?9b88QM((<ZTi\B]GmX8UcI>HpYmT])0:*M4gn"D
%F&E5gQ;p:LY,UY]meagpIp`'=8R!l"5d8_G^?@uKiN'&VpFR^!qWHU&%n%Y6oY\ksF5UI/7e#6*r+uq=+#/NP0I'V20,1$Oq?@!*
%d5QD#0_X]\UfA]N6>F'Kmich#2PY)>:Ng<C!0t47X,!>jI<mDjGkB$o/e>/Vm<]A_+rT/K:_H7s-[\N;$j6Zoq$suDT:as5YA3\o
%BaR$Pe1B,9_,=pJMA+p49hnqjC3A:nJ`tsSDKr^?:.I$/rI.99Atr^@Y2eGMd,Jm.\Ve0b/BBP%"EVT(7O?h)V]ino[9s"3/2%f.
%BZUVd6j1IE]>Q/qq6[G0'np/O(4?F2&\o8IY,p7L]g5H/f5F(<WEmnE:p)C]eS"H7[ciuVU@*>;Le!uZTHqpp=NuP(QJA$H/!bW<
%?U0dnKZbJ\3*$26ND6cS<4e\oM^5E1g[)j:lT;7IblPOTd!97EU=j-3L-WA6)TpL^]WslN[J<N5BJ-AP<91o%fr.8"p>r\=.i)YD
%(0pSTB_1DhaW:6K9J^n)Z#Mm]Z.TuPfL:L/P*fN9%No#%&'pO?D4cC"-Vtmo5X(?b5`IDLOn&5DG)iPI4/SU15Mr0iNn#NOrVW`o
%W(3fM/sN&`?GE-UOIJn;hgAF`0KlU-'mDO;n5>OZSQE/_(X8T8n,IXea4GfSaue5)KK]t<2fptQp0F:^<_dsU"f]sn#Ca)i<NBp$
%omPAV&&NPo(@GHd4i#_Jm<n-/IHYl]:j:8;)4J05m^ch&mrhj-ca^tqHRN[5?uP8WVf2KPf,kNk%tZ5Q/j[lFE#YULh3a=g#]n'!
%-M$u>L/)Aqq-\[.!D&21et)KHn)o`8\.W2IJd]MGZcG47I@GDoc.p%Ke/!\TB;ntPleCjTdgD"qNYa6XESso=@q%H(P9`eDDrZ!7
%[K"Sm"3W&!$>;Bjq+>#/jc(@"qjmENrI#a;$9XQD._>k[3$I(WUXZI7iBJXY%Z%GM9AdRRT!n>ZqJb=&F[R'?Vgo"&CrE4@SJRMJ
%T8g,K]Kl^o>t:m7gOAc308SMcef8t&n,iF.bJa33)FqAk;\moDb`hpQfH>\A^p!D')d`@)^j.]X5A8!b!!Jb65Q`8slXK,VEf)l"
%<*8sM-P\k5Snq*sOYj=XWN?$t=a4?YTgUKTSg=L#BQR&b`ZDQ`#1O#E1\V\6LdN?i-=ubJW!$FkShc,7;F"OJU-S[1TFU1JGNKDk
%ZnuS+W%d6iGqm!6iER<$`H25mCmC*]WD#cj@\CU8kt5j;b^f*N=%Cs':+;9]=B9qBa*rI0r'c.cH94CNfW\5[$-0%gf*m]iA%T]]
%%cj,nD06E0J.dD%!%of,e,"PRqgIL"LQ\Wj@NAIj8gRAq.h\isR;jd)+Nu<%+V#D?FA\Pk1S5(\T>]e>cIr"f@PVXqP6dJh.$[20
%G$<#faY2US!LCmM-)Etka_YDe@Er2(PgZ@C`X?PShNi_YHYi)1EY$4`D7l"U=j9KdB7tiM.A[ePSe^2.ONktaU$hbHN-L_A&nM1g
%_h>HUee#B"08QlHo_"cu@tbIf`V"1=U>YASOD?eeQQ9BeKmA$OE+$q\,%,5c2Pi8o+$a4tS[:b?&M<<k3S.?`dL>B@\;G+2Fln1/
%b3>"'7+RJ1L<>A\$cT_D$4Mh/lM-m*KMgD\/O7I&MhPBnh(^nc>!82q+<b'_FoAB4mEHaJ_9$rj_M^7*dY*u"?0!Y0!K]X$X%iXO
%m.4;E&M":Z>J\1sV;Hj6L#lnr3]oU_)QKC)eIrMFANq/7Qn0\fAB-.3r7HV2<"A.]Yp*6j6A<F^C0?YFBI)TSY\U)fgL%QTWb%#)
%A*'jr#Yf2oT?uZ!Hr%Z-U_k0c)oPoOq'>mXZ"J+;L[&+W[N^on)l<V;\R?@9Zu3dmc@+u\CO_PUG9-jMli9Os'jW6.3[re@hQ_8M
%rhC!W/MbrdpOP"tM-*$O])!9W'm-20SM7GRi_@TK&4)NTPlQ(HnO;Q>*&j,j"a2q;(%FkqNgIgcj*6AUdKK$<;up;ETJ?XMXe<*s
%!l7ieUlSNck:/#YN:>sglc'K%jFN4GE$)$5_fJEIb-m;GOn@#UhdlCk6\[[Rj950fRK*VI`:]bPQ!tHE'd6B3n7Tt9_(&fqAQ=`u
%#`=:IT^([B/-TH95#rIH#q8'BQ[OuX1.A-qRP1i6!/,&Vb7o?-`8?ANQdu'cc<>kJVO)_JQ\gf=HRGI3%!NB:AYQ]<bk$bB\ng#M
%$-.i.-/R&JN?8IK):eWT/oe]%;[j>O(I".^mdWdm!)-=5A6=gX'o>`_ri^_J9d)4t@YI`<dMu<1OTKMWZ$[.p-Kmn%,'+rk70R=S
%]t438X:qkti\gKun65GT*^?aA?HFI?/nFR4c(oJ#oXn"HceE00[1N-sT1d*5=%ZI>$X-'m2-+UtT55J*(_mI]n=:Viqcaaf#V@k)
%i9VRZ#0kpYWjjo,+'GU"8N?kurLAa-KALIn%;OhIgukU4gO=MSr;EH"+KH/#@7.SKYPUSpX`/C?:ubJRJ\+2d&0,/)$D^Fk@t3-^
%r-?\W#[lBmQ;[)q5s6`99IL9)Uf:BIm1\&Whp-?O!CB[Kf)Y@RY+sDAnU"[t!=\2?MGBG8n``Vds11i>d+0A=1[8)ofHGu9WLBJT
%,66*O.p=!\n?lX8>=+,.kr"o1<TG9n!2('E-J",V76A_k/tQj=n_C30JiIIZffiAiqG^Llp@?!`-8@)%(MT\SkFdp%i;l3FoaCu:
%rM`@`o;&M'60/.Q&"Q6FB["/?!n$-kJ:_?hBKiGFE6OWsV"u\$H$em49.[16l(C2uh*OcToT%&6WceJe"lAnbN]=9Un#44E!,\H.
%^mLs&"4Kd^Z`U_?KiYA=!)G4BaFM?j9;j<Wn=DK2DngMtjJ%S)((E;:II'*PQ;.DsZu?\A3C>c,8P=QHVL^eT?4j]ZAoTiV=SsQ\
%Nh_L:'"A$[$LNssLh5l*MR$7MC:mj&B.(^_H;-bWB<R)<_>_Qa=.HC*j#RPFE6*HDn%VKn_?Yhe$DgtS^S%8*"T=glPd(PYpE6]\
%ckocLJ@um]d.-0>-nI4;_m9FKOUD,=,jmX*I)64J-I6-7<?jD@#m+N\Yh':i:tf1c9d"?5]h3KK=Qhmd'Kth?c&:JM>IAr\jZB5G
%F:=i>K4s%M;h#19"s3@U?:n^a"+WmKOe5;eNTKQ%/RmgEn84t`_"nA[hZcZhCYutN]A*<B\hj[uMV!hsk"SL]XSCLW6N]gs^P0bM
%:i"XG$3nET$>)$EQQ_M1oLd1K`aTi+6l6C:T.0&tY>(tm'i+PXb/eo-jP+Yo6L$=K5F(3/BeZ@kCoAj$@%9qRi1;NQqSoQ6e!%fN
%FZVEnWp")m:N[((<l7LhL$\":6u+<LE2pr)$ZddhA=In@mlGSpeTj_9Nk?AY)XnUV,uGJZ[!j\IFU!=_gs[C'7j`rSK#LFu,@<l5
%/FoSCV9<KO8;3%&guFZ1c"gWn+Ns8M[D.8c_pQA94]q+?U+fEiZa]u:XZ0tbN19#d9^Z'<`6&I&=g_P^ZBe#@at?=h,,ZXcQ@\J2
%WMN.#]X\@Rf^:k8F(6a8RIoI06>/lTjY>LacV!N]64Vfc*!@"Sk;*;gVqe&VNW%UUBFo%n7h$?CGLGM\`Laqt3\@9>'8ddBZ7K,o
%&j"mKeth10-)o#^JNt*$Th2,c)[g,GD=5@s<7s)oYEfli>*H,["=B;nLZ`/['p\Z.P[No#qWYh\%,7G113E8dXoFj/R.!hTQGY4O
%8@_D_;&g^.`5k0`e(`T!bbAbn[bfW9%_+8[gh+8uMX^CM*t+Fk+L_%'M4YSn4KTiRhP,Lp64C@&6cAf[)TIP?LA:1g&g8m8C[`A#
%SB_cN3(4+PAEjhbdm'eoRc5?h"iYJT,N(N)aO:`S@16a'H;Hlo/l'W`0&O*La@O`I70D[:3+4lNF%rO6GXlPjQEjC+Z>gKkX;H8K
%,XDE4QmTF&5q7f%6b8*Q6%Qf$MVbn$`ss0i1$\b2+&9fo"5HT+%k`3%Vc=O3F3>?/F>VPHUCbD7XC@#4-fED`#BP5XU=O#lfA/]O
%Y#eaU!/fGOqS6+W/U]G5FYKPqqH`2o8G`%.AWiPf`#PE^La2"r]2l&6Ub.7M&qNl'74G<!RNMo?h6^G)-#>%S`f#XA&cU@a_CJO)
%:hg[S'T;$>'Q-s?i)/"2W;$MhUnE5TRhRC3B+G+=V[ZE!Ye$qua=@TeM[9+im<=!dlk,pb8jaqdeHiD)V/b&tV\7BE;dh(p[CPE=
%;\dn#Ba(ZA%AK_,DlqsW7'r*S"+jj1gS^3MTO^*R!A-!,&F7;0)q^;j`d&3Q]UoN"*/;u/VK8i7I?M^oSruKOHu4SOa'ALrgPTJ<
%n/8`WUCIRX@0SphU39p\>q$Jn-UM&#.PUK/_&GX\]k_fo8$X^IZ&t9kk$D#[HF,l!:R."8h/K99`t_FZ^j1bIjkqS^S0qtS\eFEK
%jK@^B13JBV[<3YAoie#B\2FArDKkp-$<`1g[oQm,i))?=nMmF*)5;!KL9mKhm5Y'?U0:Q='3(I9Wq3f:fhn<<bUB4HHScm%G%JLG
%K9iCJnnl@6VO)_KD$<rgksXlN!.rWe#BALP?QO/ln&d)s`?1RtFb6F1J=[D%=K/%kp->UYUS=)WgXrQR97,W(>nq'Lme_<B&&>(a
%^K^u`a]n8]=G"XJqJBHG=A_[AB*Me(0RX5g+Ti)ue0V44O=fh,InIk6:!]6d!D"&B=6g>0=)\t74`<9o"g)6UCs[;=e.Yk;_kL0O
%qgAY.aegsE?pj]\0f)ieM.m$^a0f6HQ%]*"o[\4<Iea"<+bN_Xc!%*]>0R$PLT0VGojU([&9epVs.GsA>m"7Jd@s6u)9R2Z:C<P7
%UL50^H]*K(2u>VIG+?c'OnVtX-Mp&c3qrlQ>Os>E$qYilWCa_NgdXV&-`S+rnohuGjq6g!U>"0H8AqC-m0CkHM*<-IiP[rW*)5LQ
%Y,BU8c`h?G(\o_MI#e\%>Oki%hub>1!kkC,)OpE4(\'A((Q`5>W&P?X+:h`1K^!"IBHcl$BGjtg]aE1b93`qpr5juP`pV!sZcB_g
%B`^fpF2eW0P!]:*QT\h2ejM@3)$J5qT]XDt3a>pkf",q^jJg>UMK(`fK<h4E*Y,_uKKuc`L'gHJ-$RL*%`Kem>mQ<\-J#^uTW#/0
%)aTdS-%mDEh/R5+!u=o5(:+Nl&DNHK=GZ5[T/PtrAJ89hk`[%t<k)V-penbXWF5=m456nh?EFu(j8*uK4S#T4,D?M,]"E@s1&;[s
%G@+"g042>(^`Y8m@8=Jf)*s(^D@ZQL8IkfbS5srG8Wf'eD%lYOqY:ek\J:Y"L6rR6<=Na^c0.OlE.l!%i]*`g3DbdYLg%#rDIojM
%#sKNZ2KYf?$NuY2gBaBQMLC%/-9%P)$J8]V?=I1OPQt^Fcs[Ng"maW4&?7X%+Ek=@bfBH:_fH#Q!N%2e78bkd9/*8u"X]=r0GDUk
%;C=%4!L%Zn7^Uh#j+pE6S&4MOEu(g)e5g)u\X3A/Q@:/QRc9El,KW8-8UQMB'T@FpDN%:;e(P,X>WU6k5f+om9S1a0<.+(Jb9Aeu
%<(tAWQ8fd?nok!7.IKnC"6kE`qB1b+LENnV4$Z7$;m\mr1@FOP;1fZ8"4H12)*5*[(tnhkU92Pg!^+"3O^@2o$.]O,DL1@n)?fq#
%aJE<K=X&>gdZ7`leqJj3\n%Zof`7'B/TEmc5+*b$maf.)^#U3J?O+bWh[=hXT#2D<Z;E%Co;uj<&^-^E&':(aHO;]d!<ts@f8uL<
%IC,je'En8fqWQS&Xk_ROD#6nL%0,/Jl:f8.8uE8`9]MT1p4/KRliAHmBc\\L]u0Xdhj'@r0Ss9FoV$7:+Z5ldK:kC'CS;`%clr8\
%=ECnN's\\&[r*#dE6m+SjQEf9>r#p;itq<-guh8R"0UtDGF7[T?BjRbMFXS^ef($6NBCMM7@5S2>ZKN%otH+9nbs8rNt6)s!D-S6
%9N[,TZ@!ATO^`!=?=>EJ>FkArPlc>/(>dKK#m(?-2VaX+^Yq47(=iICN0p0aeM+4VM.Mr_Q5gr[)A7SM1(u3?RjQ^(ofZ7/htICR
%(Ke<`#4"]q9PY>r..0:\bC/=2h,3`/=KYDjA?BGh!IWD7p$OD)(6'cPPg*Sng+i^#k^.Hle:f?2]I=1br5_,4qKZ2EL2oFap$cBq
%?Bte`;,X)_BYi,V3D?t?]+R-:.StM@m-s)`mCX[*PB2M.'N'R)JAA4ARtZG[=eo#Q]@LuAP#e38,opm,)]_"kM5$9Jhl#q9dt#=4
%@kYQV:X168>JKq]7K?eXp]u6I;d^#%NL'qqF3-IR%`1PV48NXf`.%WAfNa5cKS)W&p\h%@:W#N!g:JPS4qlC6,]h7.o]rQZ-!-F\
%eAMN^,/Zie6V"g!R;AdRS[I*U!s)T^8jidYqc?q,,!Mra7P^7te+O<g-r3dB;P51kn+HjL^j87kmnj(:/YPZa"cp7S7CBXW,4RXK
%D+'Me!_c)@-]'$I-$28\`)3\tIP*orE<G&eA:kW;MkmK:Xq*a?=?X\9I<l81C3+e,q&`(?VrKIG1&h@+JdI3u>5X$U5St'8jg%MX
%!onubXQqa^'![Oa+eP<JPX???7#mDfQqP/)?O7bu)`4u.1"8+e5o6Zc%5BBECQ.)d1m1og0KtQcAY5GH'3GCYdmR5%Gm`<UqNZhV
%hD+A.%]3?:3nB[q,BGBL[[Q"f*m1M[\J`!<0QkcbXJ4E5<IEJ_Mt]@Qla/P5I=9Gk[n2T-X[s`&(qt+RZ4O,*e"LP;?""TiK@^Z(
%kpB8"9Y7N0/9fQn9V9acHM2kF/4h5+>3On\g/%o='<tmu*Bno%[3XbX&2S5$LpTEU\3sY$J6Gc$>@b"/<9A<gjdkT>6JiArefRG:
%(hCmB9*HIt()uggJc&=(k.^;mZ*jp\&jcpU)[Xt1H=_?7N!'OpS5u%YS;U<#2[M88N22D^:_unCcuiNPa_jk>NX4/.+%%s'4ZG#U
%=cdXIldM'.pZh=b1hZdKn\5UWU#+pc3_6q)bWpZ+gKRU^58Yd]Ul!VOSB.ET73tUs4DAg23lR3hOM]@7mjJX;1<iej_.)e=Xj]f/
%fX/mGPu=qE?]+g6e<b?89Un"7/38.*qTVI"`lS78kV&h6>i.BFp7slg@NFTV>&;_i#dc?h6?5jb(3H70AU2P&QnE@=3$,[FaM?!,
%BDI<S7j6(Jcq/,(@G';hrq5hjp8Mb5>$We@V6Lh\+3R?F5]K:/QL0#gBoTtP.(c)qe9c_8"*;YfYF):@ku`?u/3\.ukI9nqGNhd\
%-mHqt-Jq/!Irgr_kjs[2olu4.4tDlFAH[Utm.&NH[Q`L?7s0Q)C,aI<I35,<bkn8])6%ppC'a.B1u%ZgX^ol3Q8L,Mp)?u^OPJP[
%iW[>2()KA^O>1hO!=);iN<KTM;eZ[\k07]u1Ub'*F?#'$o#r.VC[[D7gBJrb4A`")bI'"#GP]4F>b@Upp1'H,%mjB.c_AK(3,C'>
%VB/BumQ%AMNb7otBQ+RW/(_.?Gu^^(ZX9J>;e<@J-RIhR:%g#fG4Ln@GIoX6`K\D*+]BPA1#(YYh';/g2LK+^-cLdg=CTbKRT!AZ
%^lu]CYH%<-Gol4NU`qsTJcS%13t)]Ha(t5#`NUMYr%%U1-I2!c'U]60Va,o6-NkY][#^le"13Zt06+A71p!SV#SR)^=G(L&*MBA*
%p7,0Kk>=4O-PZ#-RX>D[.6b+$<&*8[hZQ>8H+L0Xp:GeCn9^@'?3%sR5=Ubc&$i1Q!>_apj=YRE/23rq-^gD]ZH4*Yg?52&.Xhf4
%_bCeRU"RtJcTX3S$-hGe94di\WaUXa*O0@>mP6[4-ZX9Qk;;:_.P/"kl_t$m*$F$MO(5g<-CbU(E"YdeEC\+eTC;:#VQJ')EDt-Z
%C_9ihZ=sg=;"N;JP;O#TGB+i,*$Y>%R7"#?"=8r_jEPM-CWe9kZR_"4_8KeDFArc`e3ZNOU0_o3f;`AF?-g/kX#p$.8O%&a'`Ne8
%[s#=e,YO@0:;J'SYH.ul-tlnWG;h4)0M7C/4PR&&;<EpD1QeP')AkuM[VI;"&VW9e27Bm&5tI^[V]Maj;Q\lrppfo+c$<kKWoc,;
%OG()WUmu8(lW2YklW.iN-5Qs:)E_1fhc^TlDZXnT+\5N4>&j3n89%X^riY*?Ud=WUXU\4V?q*IlpU594-eJ5*H[42#T:NcmIHt4)
%le^IZRE0MVpF]"o0>0IFX*iC.>;^9So^70U^[5=Po1SP`IBD>tm^;`ZXVK"&\%R\eFM%1JL"Otdl.mr2Q>V"-A?Bk']>n_lQeoF@
%Ya9"9ps?XD,4]rkgHjY>l!5fBolf*%,V4</?1@bVp?k`mm(.O?nT*6n*M1bJn(N*>]0MuoH?WFOcF_qelhJi=%,sMD/j/$7l!=%D
%R;D:Qm,_A'55$U%'s;l7&k&SOoe,n60"pRkd24gUlTXJlqmL_-.`\B0rC.K3\2GMVG14(Tf$?;+#*t1ZhHbp.IFl(2FPQMkM\/aT
%eQ!8;lgB).R;hJc_d8r-ioeoA_q))nP+8X#dTNjQ5-_=9AjVB-S5C5,"5/Pg?$!s:KfNCZEQp/;>SP1DkRFEsPeuPEE/3_//&ML%
%K^;pYW$7SJdko?HaUt@8JdK$6+K+-I^R2&^9[kA/Z_].%CE(^j]N3-?pj-m(fro\gOOYgB#1eXc6AT@h"PfBgW,a7WS]-SfX'sqh
%[Cul'RWe=:Gi,Oc$q?@k$m:nJq0T$#?[t`scH*e";R+tie"Isrn=K:B(WZ1*J`Q+;Yq-RPf%@Qki+aI,3eDa(3)Xa!mp-Ye;j+K>
%=.[S:/i]u`C#7]E(sbP$:OW`jEHQpOm5uQ<SP6b"l0;CDj?-PkgDNU"%RhipUfP@S`uu4,;PV_Nfg5O.cPa5,9d:.$nMZtSYPJ69
%P@F6LT%PQWpZ1?8%MdYPYSC/h10>:1gt!jMTCbJ_>r)+G'G4GQMU*t>W5FB=F*Kn1AYH+S.oUV6a"Omo`(Yb9C2W$E7c$0Vk'_XB
%lOl!U5ec`J$G^.sl[)#r5kE-O';q+OYH6ZKW$h@^-I'p=,Z<N>/"<K2aZ1*X;nhZu0DIb@Gfk6iq(#j$c1>KlP+#)fYX8j;V/Ch;
%Pqe`SRq9ieAbsNT1c(RX6+iA<M:8JWaKrID3>%C,OS#W@!4b]g8E>f[5*l?%%)A*3BSGcr(#^i.gX\br8A5mCHSA+pfK1JEi2_/a
%><YEH,]Sh7>+)d55%@;Q/k1VX[)-tq_c`iT-fUT_Ml_=4-^Sn^jM8u?T,Qdoj:gZ:0d./Q(a+i;$t1WrEgUn<Q'6p<1hDjS0c7W-
%VCR7$T)DTbfaQ/Ac(.hOXEO(q=F<eGHiaYK/!SS5IhSP,7baQO+]K9bhqc9o>?78XC*\<.%aIgE>k8nuY="\2]1N%^Q/pt`R?2:X
%L0,&Eb@`*7p]V:1Wt<-cb'mke^D'EMDaLSnoGQB3gkgY@71>>YpI/ks4ra,Imhk]2G,A->XIj^DBA$Aqn]@j-AWZ]GH#P>'_oHrV
%G.Mk(k&a;GmX47L`#9kMHI@3\I?P79S%?8ANP5F.G4j\XWGM8:%;^:Z?27;Pe6rKHA/RSHWT5W>k3=rQ(9;[?,t?+nTimP4.%5)b
%]%m[:-b)d*PBlBNQNq0r_ha$8RJ]p._ugG5B.cLrUGpeb-=@7b9`Sm'&b56]Q[E'1F&;\^N-uGG&JPaunb6?`Qq.b>U&\-/Rcd&@
%9]rH]Y15&oZ0*nMH2g.ZG.u);FPke*+3J;YE[\e*6-!3RIsb?kG$WCf-8QL"8I.^E<"*7*9(o[We]UCMVI`cm!J]>^P$"I+c(p!J
%FI795rXmc;Z(E$ins3DF!6,-DmI6gGolW%QYJ!1;/^QF,2+qT+c\d[<F/2)A78l;E+LP]L$>p2D_`A#<V'Mg]8Y5NB*Krn(#`N[X
%.jY'pQTDuV&*/>>*ud`TIIVhh%61@$_9^/N4pbRX0lDQ@6$$&db]ZKQJ18pd%#>"hL!o5-pkih9-d@&[j7:c>nGsICE0EoF0U"n%
%B-5X7MF\+UilYYLeL!t*PA')A./0fM-plaV&n?s%0bmGsoN%@sEL(<7>nm7-O/9d<bUnmupI"d&J</P_R&Ipq(R]Od68]W#M^C!i
%Xu0^!Vs?j25ti+_Z(Y'r_9G@+U.L!"mm%4*=P[.DdPe3``'7G]<W\`l7*Koe</<5j2KPD0Y\%5/!%L^aF.hufAq,`@A/Z/d%7J7"
%B**eCHu80%j$)D4@P&I0<sSZ)M"\94>=!jTYE)]V@$snK=hi.7W!2J`8a3e&7*5NIi/93NHI%pI+*q\/rJ\Z()[*aIGbg;W;eR9_
%j\Dr\3K_BLS'c=;G&>!u025OerR`;_HMe<hCj`<p4#,EOYDp+.6^m<G=KT.L>LRIn2rHnF=J7q(-!V272t@`BF"[?F9pZ?p,EV*!
%M&LVtn3TAH?9`Vq>sO(I"E,WY)1]j%FV+AO)u/3:U(!?/'4QhD%t$2b?[^R+5up:/dOKW)GkKeGgVajh7XCqF[k;Cjg-YQX9DPC]
%]9G#FU<OsU5GVa<$dW>+)Qs2r#A;_s'(ZGHIU\l&VQL<YXQQcfp$+O"^6^>V@3'>OTm.Hg2>s<mL'gR]7<L=YPup)9#_rj>grZoU
%.oK;///4BdZ<N)u7G3B,=ShQL_J6C/>sKG_U):<Q1UG(i^uX="7EZ2Y%JhCTVpZ5D\hWsM6Yt<5@f)r!i,*$<*!"t^TK$h,-ZsI_
%h9phOdJ2BZ>^^@(<,PK+c*8)*:8f,P*XV7eEojV!`4I0i4[!u.Y3uaQV>S4k\a1OuX+`7lSM4+8V3l2(F%!E,XqRbp2T27\`B49o
%KN?.f0$5AH;RLQZ)85nbZ]i.N3TWh2DAiOM%"&qthUj&a7buT$E,mg6[d<J*gTiq6g,)\.f&F-hm+q2NlHc01BGk[Rn^Znb4T!jD
%_N@8"h.,']B$u-J%.E_$E$ZFf6&kPrF#0gB1Y1K;(f!0YbEr05`iPb?7C:R;Mm4S/CEY+?CKefliR)VGs*QV5G!dLreFG<8AU52I
%Y7G\.$mN.RCYYMB.#;F7C[]m`(l<1:-=RcgH8Z-]U_1>iY)&9QW!KPafdcUWh)=/>=f`9e[9+[\N7g4ZopY_j[%[kL1K>gob5gBO
%64<jO>VKFH^"U%daU94eFr;'!.@lT4a5ZksOVEXcCPbA:_ZU-8k*A2$Ql;9<DYr02h[O_6EGCfHeZGWrS;8G.d^H2<H%P1T@?7Jl
%kNGQolGQi[K-2Jm>=NiE*39"5bW'>W@Z<NTYf2ea-<nZ8%^McKbn9V-B3C.`k[GH#>IWW>.!:bp3.UVR1e($UL_^&06b4\ZkEK5S
%f<K\,Gd;-a6WBTP&5gYiEmh(!i'_DG15;Q$]U-&p]I<icmVX]BR&"k[3R>"K#!"bOg;4r)\#+[k(TgAK&ifMn]5&A5,USETRdr_2
%Y497Gl6!V?>u/_ks5C3\qu>INq`k)EIsh7Us82W<^]47@pt^Guj$3M?hu<Pos7Q'J5QC]>rR5-Qpb+j]qW"4IKY.3\^Q3m@oM9u9
%q(Md2TE"i\Vn`/UJ,[3ei1fgphu2sbs3#ogqnN%.(?6=X~>
%AI9_PrivateDataEnd
